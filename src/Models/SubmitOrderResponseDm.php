<?php
/**
 * SubmitOrderResponseDm
 *
 * PHP version 5
 *
 * @category Class
 * @package  Flipdish\\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Flipdish\\Client\Models;

use \ArrayAccess;
use \Flipdish\\Client\ObjectSerializer;

/**
 * SubmitOrderResponseDm Class Doc Comment
 *
 * @category Class
 * @package  Flipdish\\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SubmitOrderResponseDm implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SubmitOrderResponseDm';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'order_id' => 'int',
        'local_order_id' => 'string',
        'delivery_time_estimate_minutes' => 'int',
        'order_placed_message' => 'string',
        'display_tip_control' => 'bool',
        'display_rate_app_control' => 'bool',
        'cancel_order_period_seconds' => 'int',
        'restaurant_name' => 'string',
        'link_text' => 'string',
        'link_url' => 'string',
        'delivery_type' => 'string',
        'during_order_promotion_options' => '\Flipdish\\Client\Models\DuringOrderPromotionOptionsDm',
        'redirect_uri' => 'string',
        'pickup_code' => 'string',
        'restaurant_address' => 'string',
        'payment_intent_client_secret' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'order_id' => 'int32',
        'local_order_id' => null,
        'delivery_time_estimate_minutes' => 'int32',
        'order_placed_message' => null,
        'display_tip_control' => null,
        'display_rate_app_control' => null,
        'cancel_order_period_seconds' => 'int32',
        'restaurant_name' => null,
        'link_text' => null,
        'link_url' => null,
        'delivery_type' => null,
        'during_order_promotion_options' => null,
        'redirect_uri' => null,
        'pickup_code' => null,
        'restaurant_address' => null,
        'payment_intent_client_secret' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_id' => 'OrderId',
        'local_order_id' => 'LocalOrderId',
        'delivery_time_estimate_minutes' => 'DeliveryTimeEstimateMinutes',
        'order_placed_message' => 'OrderPlacedMessage',
        'display_tip_control' => 'DisplayTipControl',
        'display_rate_app_control' => 'DisplayRateAppControl',
        'cancel_order_period_seconds' => 'CancelOrderPeriodSeconds',
        'restaurant_name' => 'RestaurantName',
        'link_text' => 'LinkText',
        'link_url' => 'LinkUrl',
        'delivery_type' => 'DeliveryType',
        'during_order_promotion_options' => 'DuringOrderPromotionOptions',
        'redirect_uri' => 'RedirectUri',
        'pickup_code' => 'PickupCode',
        'restaurant_address' => 'RestaurantAddress',
        'payment_intent_client_secret' => 'PaymentIntentClientSecret'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_id' => 'setOrderId',
        'local_order_id' => 'setLocalOrderId',
        'delivery_time_estimate_minutes' => 'setDeliveryTimeEstimateMinutes',
        'order_placed_message' => 'setOrderPlacedMessage',
        'display_tip_control' => 'setDisplayTipControl',
        'display_rate_app_control' => 'setDisplayRateAppControl',
        'cancel_order_period_seconds' => 'setCancelOrderPeriodSeconds',
        'restaurant_name' => 'setRestaurantName',
        'link_text' => 'setLinkText',
        'link_url' => 'setLinkUrl',
        'delivery_type' => 'setDeliveryType',
        'during_order_promotion_options' => 'setDuringOrderPromotionOptions',
        'redirect_uri' => 'setRedirectUri',
        'pickup_code' => 'setPickupCode',
        'restaurant_address' => 'setRestaurantAddress',
        'payment_intent_client_secret' => 'setPaymentIntentClientSecret'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_id' => 'getOrderId',
        'local_order_id' => 'getLocalOrderId',
        'delivery_time_estimate_minutes' => 'getDeliveryTimeEstimateMinutes',
        'order_placed_message' => 'getOrderPlacedMessage',
        'display_tip_control' => 'getDisplayTipControl',
        'display_rate_app_control' => 'getDisplayRateAppControl',
        'cancel_order_period_seconds' => 'getCancelOrderPeriodSeconds',
        'restaurant_name' => 'getRestaurantName',
        'link_text' => 'getLinkText',
        'link_url' => 'getLinkUrl',
        'delivery_type' => 'getDeliveryType',
        'during_order_promotion_options' => 'getDuringOrderPromotionOptions',
        'redirect_uri' => 'getRedirectUri',
        'pickup_code' => 'getPickupCode',
        'restaurant_address' => 'getRestaurantAddress',
        'payment_intent_client_secret' => 'getPaymentIntentClientSecret'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const DELIVERY_TYPE_DELIVERY = 'Delivery';
    const DELIVERY_TYPE_PICKUP = 'Pickup';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getDeliveryTypeAllowableValues()
    {
        return [
            self::DELIVERY_TYPE_DELIVERY,
            self::DELIVERY_TYPE_PICKUP,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_id'] = isset($data['order_id']) ? $data['order_id'] : null;
        $this->container['local_order_id'] = isset($data['local_order_id']) ? $data['local_order_id'] : null;
        $this->container['delivery_time_estimate_minutes'] = isset($data['delivery_time_estimate_minutes']) ? $data['delivery_time_estimate_minutes'] : null;
        $this->container['order_placed_message'] = isset($data['order_placed_message']) ? $data['order_placed_message'] : null;
        $this->container['display_tip_control'] = isset($data['display_tip_control']) ? $data['display_tip_control'] : null;
        $this->container['display_rate_app_control'] = isset($data['display_rate_app_control']) ? $data['display_rate_app_control'] : null;
        $this->container['cancel_order_period_seconds'] = isset($data['cancel_order_period_seconds']) ? $data['cancel_order_period_seconds'] : null;
        $this->container['restaurant_name'] = isset($data['restaurant_name']) ? $data['restaurant_name'] : null;
        $this->container['link_text'] = isset($data['link_text']) ? $data['link_text'] : null;
        $this->container['link_url'] = isset($data['link_url']) ? $data['link_url'] : null;
        $this->container['delivery_type'] = isset($data['delivery_type']) ? $data['delivery_type'] : null;
        $this->container['during_order_promotion_options'] = isset($data['during_order_promotion_options']) ? $data['during_order_promotion_options'] : null;
        $this->container['redirect_uri'] = isset($data['redirect_uri']) ? $data['redirect_uri'] : null;
        $this->container['pickup_code'] = isset($data['pickup_code']) ? $data['pickup_code'] : null;
        $this->container['restaurant_address'] = isset($data['restaurant_address']) ? $data['restaurant_address'] : null;
        $this->container['payment_intent_client_secret'] = isset($data['payment_intent_client_secret']) ? $data['payment_intent_client_secret'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getDeliveryTypeAllowableValues();
        if (!is_null($this->container['delivery_type']) && !in_array($this->container['delivery_type'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'delivery_type', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_id
     *
     * @return int
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param int $order_id order_id
     *
     * @return $this
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets local_order_id
     *
     * @return string
     */
    public function getLocalOrderId()
    {
        return $this->container['local_order_id'];
    }

    /**
     * Sets local_order_id
     *
     * @param string $local_order_id local_order_id
     *
     * @return $this
     */
    public function setLocalOrderId($local_order_id)
    {
        $this->container['local_order_id'] = $local_order_id;

        return $this;
    }

    /**
     * Gets delivery_time_estimate_minutes
     *
     * @return int
     */
    public function getDeliveryTimeEstimateMinutes()
    {
        return $this->container['delivery_time_estimate_minutes'];
    }

    /**
     * Sets delivery_time_estimate_minutes
     *
     * @param int $delivery_time_estimate_minutes delivery_time_estimate_minutes
     *
     * @return $this
     */
    public function setDeliveryTimeEstimateMinutes($delivery_time_estimate_minutes)
    {
        $this->container['delivery_time_estimate_minutes'] = $delivery_time_estimate_minutes;

        return $this;
    }

    /**
     * Gets order_placed_message
     *
     * @return string
     */
    public function getOrderPlacedMessage()
    {
        return $this->container['order_placed_message'];
    }

    /**
     * Sets order_placed_message
     *
     * @param string $order_placed_message order_placed_message
     *
     * @return $this
     */
    public function setOrderPlacedMessage($order_placed_message)
    {
        $this->container['order_placed_message'] = $order_placed_message;

        return $this;
    }

    /**
     * Gets display_tip_control
     *
     * @return bool
     */
    public function getDisplayTipControl()
    {
        return $this->container['display_tip_control'];
    }

    /**
     * Sets display_tip_control
     *
     * @param bool $display_tip_control display_tip_control
     *
     * @return $this
     */
    public function setDisplayTipControl($display_tip_control)
    {
        $this->container['display_tip_control'] = $display_tip_control;

        return $this;
    }

    /**
     * Gets display_rate_app_control
     *
     * @return bool
     */
    public function getDisplayRateAppControl()
    {
        return $this->container['display_rate_app_control'];
    }

    /**
     * Sets display_rate_app_control
     *
     * @param bool $display_rate_app_control display_rate_app_control
     *
     * @return $this
     */
    public function setDisplayRateAppControl($display_rate_app_control)
    {
        $this->container['display_rate_app_control'] = $display_rate_app_control;

        return $this;
    }

    /**
     * Gets cancel_order_period_seconds
     *
     * @return int
     */
    public function getCancelOrderPeriodSeconds()
    {
        return $this->container['cancel_order_period_seconds'];
    }

    /**
     * Sets cancel_order_period_seconds
     *
     * @param int $cancel_order_period_seconds cancel_order_period_seconds
     *
     * @return $this
     */
    public function setCancelOrderPeriodSeconds($cancel_order_period_seconds)
    {
        $this->container['cancel_order_period_seconds'] = $cancel_order_period_seconds;

        return $this;
    }

    /**
     * Gets restaurant_name
     *
     * @return string
     */
    public function getRestaurantName()
    {
        return $this->container['restaurant_name'];
    }

    /**
     * Sets restaurant_name
     *
     * @param string $restaurant_name restaurant_name
     *
     * @return $this
     */
    public function setRestaurantName($restaurant_name)
    {
        $this->container['restaurant_name'] = $restaurant_name;

        return $this;
    }

    /**
     * Gets link_text
     *
     * @return string
     */
    public function getLinkText()
    {
        return $this->container['link_text'];
    }

    /**
     * Sets link_text
     *
     * @param string $link_text link_text
     *
     * @return $this
     */
    public function setLinkText($link_text)
    {
        $this->container['link_text'] = $link_text;

        return $this;
    }

    /**
     * Gets link_url
     *
     * @return string
     */
    public function getLinkUrl()
    {
        return $this->container['link_url'];
    }

    /**
     * Sets link_url
     *
     * @param string $link_url link_url
     *
     * @return $this
     */
    public function setLinkUrl($link_url)
    {
        $this->container['link_url'] = $link_url;

        return $this;
    }

    /**
     * Gets delivery_type
     *
     * @return string
     */
    public function getDeliveryType()
    {
        return $this->container['delivery_type'];
    }

    /**
     * Sets delivery_type
     *
     * @param string $delivery_type delivery_type
     *
     * @return $this
     */
    public function setDeliveryType($delivery_type)
    {
        $allowedValues = $this->getDeliveryTypeAllowableValues();
        if (!is_null($delivery_type) && !in_array($delivery_type, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'delivery_type', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['delivery_type'] = $delivery_type;

        return $this;
    }

    /**
     * Gets during_order_promotion_options
     *
     * @return \Flipdish\\Client\Models\DuringOrderPromotionOptionsDm
     */
    public function getDuringOrderPromotionOptions()
    {
        return $this->container['during_order_promotion_options'];
    }

    /**
     * Sets during_order_promotion_options
     *
     * @param \Flipdish\\Client\Models\DuringOrderPromotionOptionsDm $during_order_promotion_options during_order_promotion_options
     *
     * @return $this
     */
    public function setDuringOrderPromotionOptions($during_order_promotion_options)
    {
        $this->container['during_order_promotion_options'] = $during_order_promotion_options;

        return $this;
    }

    /**
     * Gets redirect_uri
     *
     * @return string
     */
    public function getRedirectUri()
    {
        return $this->container['redirect_uri'];
    }

    /**
     * Sets redirect_uri
     *
     * @param string $redirect_uri redirect_uri
     *
     * @return $this
     */
    public function setRedirectUri($redirect_uri)
    {
        $this->container['redirect_uri'] = $redirect_uri;

        return $this;
    }

    /**
     * Gets pickup_code
     *
     * @return string
     */
    public function getPickupCode()
    {
        return $this->container['pickup_code'];
    }

    /**
     * Sets pickup_code
     *
     * @param string $pickup_code pickup_code
     *
     * @return $this
     */
    public function setPickupCode($pickup_code)
    {
        $this->container['pickup_code'] = $pickup_code;

        return $this;
    }

    /**
     * Gets restaurant_address
     *
     * @return string
     */
    public function getRestaurantAddress()
    {
        return $this->container['restaurant_address'];
    }

    /**
     * Sets restaurant_address
     *
     * @param string $restaurant_address restaurant_address
     *
     * @return $this
     */
    public function setRestaurantAddress($restaurant_address)
    {
        $this->container['restaurant_address'] = $restaurant_address;

        return $this;
    }

    /**
     * Gets payment_intent_client_secret
     *
     * @return string
     */
    public function getPaymentIntentClientSecret()
    {
        return $this->container['payment_intent_client_secret'];
    }

    /**
     * Sets payment_intent_client_secret
     *
     * @param string $payment_intent_client_secret payment_intent_client_secret
     *
     * @return $this
     */
    public function setPaymentIntentClientSecret($payment_intent_client_secret)
    {
        $this->container['payment_intent_client_secret'] = $payment_intent_client_secret;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


