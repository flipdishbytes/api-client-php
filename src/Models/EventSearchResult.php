<?php
/**
 * EventSearchResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  Flipdish\\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Flipdish\\Client\Models;

use \ArrayAccess;
use \Flipdish\\Client\ObjectSerializer;

/**
 * EventSearchResult Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  Flipdish\\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EventSearchResult implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EventSearchResult';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'app_created_event' => '\Flipdish\\Client\Models\AppCreatedEvent[]',
        'app_updated_event' => '\Flipdish\\Client\Models\AppUpdatedEvent[]',
        'analytics_client_event' => '\Flipdish\\Client\Models\AnalyticsClientEvent[]',
        'order_accepted_event' => '\Flipdish\\Client\Models\OrderAcceptedEvent[]',
        'order_dispatched_event' => '\Flipdish\\Client\Models\OrderDispatchedEvent[]',
        'order_customer_tracking_created_event' => '\Flipdish\\Client\Models\OrderCustomerTrackingCreatedEvent[]',
        'order_delivery_tracking_status_updated_event' => '\Flipdish\\Client\Models\OrderDeliveryTrackingStatusUpdatedEvent[]',
        'order_batch_published_event' => '\Flipdish\\Client\Models\OrderBatchPublishedEvent[]',
        'order_created_event' => '\Flipdish\\Client\Models\OrderCreatedEvent[]',
        'order_rating_updated_event' => '\Flipdish\\Client\Models\OrderRatingUpdatedEvent[]',
        'order_refunded_event' => '\Flipdish\\Client\Models\OrderRefundedEvent[]',
        'order_rejected_event' => '\Flipdish\\Client\Models\OrderRejectedEvent[]',
        'order_tip_updated_event' => '\Flipdish\\Client\Models\OrderTipUpdatedEvent[]',
        'order_terminal_notifications' => '\Flipdish\\Client\Models\EmvNotificationEvent[]',
        'store_created_event' => '\Flipdish\\Client\Models\StoreCreatedEvent[]',
        'store_deleted_event' => '\Flipdish\\Client\Models\StoreDeletedEvent[]',
        'store_address_updated_event' => '\Flipdish\\Client\Models\StoreAddressUpdatedEvent[]',
        'store_kiosk_setting_updated_event' => '\Flipdish\\Client\Models\StoreKioskSettingUpdatedEvent[]',
        'delivery_zone_created_event' => '\Flipdish\\Client\Models\DeliveryZoneCreatedEvent[]',
        'delivery_zone_updated_event' => '\Flipdish\\Client\Models\DeliveryZoneUpdatedEvent[]',
        'delivery_zone_deleted_event' => '\Flipdish\\Client\Models\DeliveryZoneDeletedEvent[]',
        'store_opening_hours_updated_event' => '\Flipdish\\Client\Models\StoreOpeningHoursUpdatedEvent[]',
        'store_menu_assigned_event' => '\Flipdish\\Client\Models\StoreMenuAssignedEvent[]',
        'store_business_hours_override_created_event' => '\Flipdish\\Client\Models\StoreBusinessHoursOverrideCreatedEvent[]',
        'store_business_hours_override_deleted_event' => '\Flipdish\\Client\Models\StoreBusinessHoursOverrideDeletedEvent[]',
        'store_archived_event' => '\Flipdish\\Client\Models\StoreArchivedEvent[]',
        'store_unarchived_event' => '\Flipdish\\Client\Models\StoreUnarchivedEvent[]',
        'store_published_event' => '\Flipdish\\Client\Models\StorePublishedEvent[]',
        'store_unpublished_event' => '\Flipdish\\Client\Models\StoreUnpublishedEvent[]',
        'store_updated_event' => '\Flipdish\\Client\Models\StoreUpdatedEvent[]',
        'store_pre_order_config_updated_event' => '\Flipdish\\Client\Models\StorePreOrderConfigUpdatedEvent[]',
        'store_logo_created_event' => '\Flipdish\\Client\Models\StoreLogoCreatedEvent[]',
        'store_logo_updated_event' => '\Flipdish\\Client\Models\StoreLogoUpdatedEvent[]',
        'store_logo_deleted_event' => '\Flipdish\\Client\Models\StoreLogoDeletedEvent[]',
        'menu_created_event' => '\Flipdish\\Client\Models\MenuCreatedEvent[]',
        'menu_updated_event' => '\Flipdish\\Client\Models\MenuUpdatedEvent[]',
        'menu_uploaded_event' => '\Flipdish\\Client\Models\MenuUploadedEvent[]',
        'menu_bulk_edit_event' => '\Flipdish\\Client\Models\MenuBulkEditEvent[]',
        'menu_section_created_event' => '\Flipdish\\Client\Models\MenuSectionCreatedEvent[]',
        'menu_section_updated_event' => '\Flipdish\\Client\Models\MenuSectionUpdatedEvent[]',
        'menu_section_deleted_event' => '\Flipdish\\Client\Models\MenuSectionDeletedEvent[]',
        'menu_section_item_created_event' => '\Flipdish\\Client\Models\MenuSectionItemCreatedEvent[]',
        'menu_section_item_updated_event' => '\Flipdish\\Client\Models\MenuSectionItemUpdatedEvent[]',
        'menu_section_item_deleted_event' => '\Flipdish\\Client\Models\MenuSectionItemDeletedEvent[]',
        'menu_item_option_set_created_event' => '\Flipdish\\Client\Models\MenuItemOptionSetCreatedEvent[]',
        'menu_item_option_set_updated_event' => '\Flipdish\\Client\Models\MenuItemOptionSetUpdatedEvent[]',
        'menu_item_option_set_deleted_event' => '\Flipdish\\Client\Models\MenuItemOptionSetDeletedEvent[]',
        'menu_item_option_set_item_created_event' => '\Flipdish\\Client\Models\MenuItemOptionSetItemCreatedEvent[]',
        'menu_item_option_set_item_updated_event' => '\Flipdish\\Client\Models\MenuItemOptionSetItemUpdatedEvent[]',
        'menu_item_option_set_item_deleted_event' => '\Flipdish\\Client\Models\MenuItemOptionSetItemDeletedEvent[]',
        'menu_checkpoint_created_event' => '\Flipdish\\Client\Models\MenuCheckpointCreatedEvent[]',
        'store_group_created_event' => '\Flipdish\\Client\Models\StoreGroupCreatedEvent[]',
        'store_group_updated_event' => '\Flipdish\\Client\Models\StoreGroupUpdatedEvent[]',
        'store_group_deleted_event' => '\Flipdish\\Client\Models\StoreGroupDeletedEvent[]',
        'customer_created_event' => '\Flipdish\\Client\Models\CustomerCreatedEvent[]',
        'customer_updated_event' => '\Flipdish\\Client\Models\CustomerUpdatedEvent[]',
        'customer_consent_updated_event' => '\Flipdish\\Client\Models\CustomerConsentUpdatedEvent[]',
        'webhook_subscription_created_event' => '\Flipdish\\Client\Models\WebhookSubscriptionCreatedEvent[]',
        'webhook_subscription_updated_event' => '\Flipdish\\Client\Models\WebhookSubscriptionUpdatedEvent[]',
        'webhook_subscription_deleted_event' => '\Flipdish\\Client\Models\WebhookSubscriptionDeletedEvent[]',
        'printer_turned_on_event' => '\Flipdish\\Client\Models\PrinterTurnedOnEvent[]',
        'printer_turned_off_event' => '\Flipdish\\Client\Models\PrinterTurnedOffEvent[]',
        'printer_assigned_to_store_event' => '\Flipdish\\Client\Models\PrinterAssignedToStoreEvent[]',
        'printer_unassigned_from_store_event' => '\Flipdish\\Client\Models\PrinterUnassignedFromStoreEvent[]',
        'phone_call_started_event' => '\Flipdish\\Client\Models\PhoneCallStartedEvent[]',
        'phone_call_ended_event' => '\Flipdish\\Client\Models\PhoneCallEndedEvent[]',
        'loyalty_campaign_created_event' => '\Flipdish\\Client\Models\LoyaltyCampaignCreatedEvent[]',
        'loyalty_campaign_deleted_event' => '\Flipdish\\Client\Models\LoyaltyCampaignDeletedEvent[]',
        'loyalty_campaign_updated_event' => '\Flipdish\\Client\Models\LoyaltyCampaignUpdatedEvent[]',
        'retention_campaign_created_event' => '\Flipdish\\Client\Models\RetentionCampaignCreatedEvent[]',
        'retention_campaign_deleted_event' => '\Flipdish\\Client\Models\RetentionCampaignDeletedEvent[]',
        'retention_campaign_updated_event' => '\Flipdish\\Client\Models\RetentionCampaignUpdatedEvent[]',
        'sms_received_event' => '\Flipdish\\Client\Models\SmsReceivedEvent[]',
        'user_login_event' => '\Flipdish\\Client\Models\UserLoginEvent[]',
        'user_created_event' => '\Flipdish\\Client\Models\UserCreatedEvent[]',
        'user_updated_event' => '\Flipdish\\Client\Models\UserUpdatedEvent[]',
        'user_deleted_event' => '\Flipdish\\Client\Models\UserDeletedEvent[]',
        'user_created_password_event' => '\Flipdish\\Client\Models\UserPasswordCreatedEvent[]',
        'user_answered_signup_questions_event' => '\Flipdish\\Client\Models\UserAnsweredSignupQuestionsEvent[]',
        'voucher_created_event' => '\Flipdish\\Client\Models\VoucherCreatedEvent[]',
        'voucher_updated_event' => '\Flipdish\\Client\Models\VoucherUpdatedEvent[]',
        'voucher_deleted_event' => '\Flipdish\\Client\Models\VoucherDeletedEvent[]',
        'teammate_invite_sent_event' => '\Flipdish\\Client\Models\TeammateInviteSentEvent[]',
        'teammate_invite_accepted_event' => '\Flipdish\\Client\Models\TeammateInviteAcceptedEvent[]',
        'teammate_updated_event' => '\Flipdish\\Client\Models\TeammateUpdatedEvent[]',
        'teammate_deleted_event' => '\Flipdish\\Client\Models\TeammateDeletedEvent[]',
        'bank_account_created_event' => '\Flipdish\\Client\Models\BankAccountCreatedEvent[]',
        'bank_account_updated_event' => '\Flipdish\\Client\Models\BankAccountUpdatedEvent[]',
        'bank_account_deleted_event' => '\Flipdish\\Client\Models\BankAccountDeletedEvent[]',
        'bank_account_assigned_event' => '\Flipdish\\Client\Models\BankAccountAssignedEvent[]',
        'hydra_assigned_event' => '\Flipdish\\Client\Models\HydraAssignedEvent[]',
        'hydra_request_reset_event' => '\Flipdish\\Client\Models\HydraRequestResetEvent[]',
        'hydra_store_assigned_event' => '\Flipdish\\Client\Models\HydraStoreAssignedEvent[]',
        'hydra_store_unassigned_event' => '\Flipdish\\Client\Models\HydraStoreUnassignedEvent[]',
        'hydra_setting_changed_event' => '\Flipdish\\Client\Models\HydraSettingChangedEvent[]',
        'hydra_un_assigned_event' => '\Flipdish\\Client\Models\HydraUnAssignedEvent[]',
        'hydra_connection_status_changed_event' => '\Flipdish\\Client\Models\HydraConnectionStatusChangedEvent[]',
        'kiosk_bluetooth_pairing_mode_event' => '\Flipdish\\Client\Models\KioskBluetoothPairingModeEvent[]',
        'kiosk_bluetooth_unpairing_mode_event' => '\Flipdish\\Client\Models\KioskBluetoothUnpairingModeEvent[]',
        'kiosk_bluetooth_terminal_unpaired_event' => '\Flipdish\\Client\Models\KioskBluetoothTerminalUnpairedEvent[]',
        'kiosk_terminal_action_state_changed_event' => '\Flipdish\\Client\Models\KioskTerminalActionStateChangedEvent[]',
        'kiosk_bluetooth_terminal_updated_event' => '\Flipdish\\Client\Models\KioskBluetoothTerminalUpdatedEvent[]',
        'kiosk_bluetooth_terminal_initiate_update_check_event' => '\Flipdish\\Client\Models\KioskBluetoothTerminalInitiateUpdateCheckEvent[]',
        'kiosk_bluetooth_install_update_initiate_event' => '\Flipdish\\Client\Models\KioskBluetoothInstallUpdateInitiateEvent[]',
        'kiosk_bluetooth_terminal_cancel_update_event' => '\Flipdish\\Client\Models\KioskBluetoothTerminalCancelUpdateEvent[]',
        'kiosk_bluetooth_terminal_firmware_version_status_event' => '\Flipdish\\Client\Models\KioskBluetoothTerminalFirmwareVersionStatusEvent[]',
        'kiosk_bluetooth_terminal_installation_status_event' => '\Flipdish\\Client\Models\KioskBluetoothTerminalInstallationStatusEvent[]',
        'push_notification_scheduled_event' => '\Flipdish\\Client\Models\PushNotificationScheduledEvent[]',
        'push_notification_sent_event' => '\Flipdish\\Client\Models\PushNotificationSentEvent[]',
        'push_notification_deleted_event' => '\Flipdish\\Client\Models\PushNotificationDeletedEvent[]',
        'dns_verified_event' => '\Flipdish\\Client\Models\DnsVerifiedEvent[]',
        'certificate_created_event' => '\Flipdish\\Client\Models\CertificateCreatedEvent[]',
        'certificate_renewed_event' => '\Flipdish\\Client\Models\CertificateRenewedEvent[]',
        'website_vanity_url_updated_event' => '\Flipdish\\Client\Models\WebsiteVanityUrlUpdatedEvent[]',
        'website_updated_event' => '\Flipdish\\Client\Models\WebsiteUpdatedEvent[]',
        'order_capacity_updated_event' => '\Flipdish\\Client\Models\OrderCapacityConfigUpdatedEvent[]',
        'external_store_event' => '\Flipdish\\Client\Models\ExternalStoreEvent[]',
        'order_fulfillment_status_updated_event' => '\Flipdish\\Client\Models\OrderFulfillmentStatusUpdatedEvent[]',
        'app_store_config_created_event' => '\Flipdish\\Client\Models\AppStoreConfigCreatedEvent[]',
        'app_store_config_updated_event' => '\Flipdish\\Client\Models\AppStoreConfigUpdatedEvent[]',
        'app_store_config_deleted_event' => '\Flipdish\\Client\Models\AppStoreConfigDeletedEvent[]',
        'app_store_subscription_change_job_updated_event' => '\Flipdish\\Client\Models\AppStoreSubscriptionChangeJobUpdatedEvent[]',
        'catalog_item_created_event' => '\Flipdish\\Client\Models\CatalogItemCreatedEvent[]',
        'catalog_item_updated_event' => '\Flipdish\\Client\Models\CatalogItemUpdatedEvent[]',
        'catalog_item_archived_event' => '\Flipdish\\Client\Models\CatalogItemArchivedEvent[]',
        'catalog_group_created_event' => '\Flipdish\\Client\Models\CatalogGroupCreatedEvent[]',
        'catalog_group_updated_event' => '\Flipdish\\Client\Models\CatalogGroupUpdatedEvent[]',
        'catalog_group_archived_event' => '\Flipdish\\Client\Models\CatalogGroupArchivedEvent[]',
        'store_tip_updated_event' => '\Flipdish\\Client\Models\StoreTipUpdatedEvent[]',
        'location_area_created_event' => '\Flipdish\\Client\Models\LocationAreaCreatedEvent[]',
        'location_area_updated_event' => '\Flipdish\\Client\Models\LocationAreaUpdatedEvent[]',
        'location_created_event' => '\Flipdish\\Client\Models\LocationCreatedEvent[]',
        'location_deleted_event' => '\Flipdish\\Client\Models\LocationDeletedEvent[]',
        'store_service_charge_updated_event' => '\Flipdish\\Client\Models\StoreServiceChargeUpdatedEvent[]',
        'mobile_apps_submission_status_updated_event' => '\Flipdish\\Client\Models\MobileAppsSubmissionStatusUpdatedEvent[]',
        'mobile_apps_submission_updated_event' => '\Flipdish\\Client\Models\MobileAppsSubmissionUpdatedEvent[]',
        'store_fee_config_updated_event' => '\Flipdish\\Client\Models\StoreFeeConfigUpdatedEvent[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'app_created_event' => null,
        'app_updated_event' => null,
        'analytics_client_event' => null,
        'order_accepted_event' => null,
        'order_dispatched_event' => null,
        'order_customer_tracking_created_event' => null,
        'order_delivery_tracking_status_updated_event' => null,
        'order_batch_published_event' => null,
        'order_created_event' => null,
        'order_rating_updated_event' => null,
        'order_refunded_event' => null,
        'order_rejected_event' => null,
        'order_tip_updated_event' => null,
        'order_terminal_notifications' => null,
        'store_created_event' => null,
        'store_deleted_event' => null,
        'store_address_updated_event' => null,
        'store_kiosk_setting_updated_event' => null,
        'delivery_zone_created_event' => null,
        'delivery_zone_updated_event' => null,
        'delivery_zone_deleted_event' => null,
        'store_opening_hours_updated_event' => null,
        'store_menu_assigned_event' => null,
        'store_business_hours_override_created_event' => null,
        'store_business_hours_override_deleted_event' => null,
        'store_archived_event' => null,
        'store_unarchived_event' => null,
        'store_published_event' => null,
        'store_unpublished_event' => null,
        'store_updated_event' => null,
        'store_pre_order_config_updated_event' => null,
        'store_logo_created_event' => null,
        'store_logo_updated_event' => null,
        'store_logo_deleted_event' => null,
        'menu_created_event' => null,
        'menu_updated_event' => null,
        'menu_uploaded_event' => null,
        'menu_bulk_edit_event' => null,
        'menu_section_created_event' => null,
        'menu_section_updated_event' => null,
        'menu_section_deleted_event' => null,
        'menu_section_item_created_event' => null,
        'menu_section_item_updated_event' => null,
        'menu_section_item_deleted_event' => null,
        'menu_item_option_set_created_event' => null,
        'menu_item_option_set_updated_event' => null,
        'menu_item_option_set_deleted_event' => null,
        'menu_item_option_set_item_created_event' => null,
        'menu_item_option_set_item_updated_event' => null,
        'menu_item_option_set_item_deleted_event' => null,
        'menu_checkpoint_created_event' => null,
        'store_group_created_event' => null,
        'store_group_updated_event' => null,
        'store_group_deleted_event' => null,
        'customer_created_event' => null,
        'customer_updated_event' => null,
        'customer_consent_updated_event' => null,
        'webhook_subscription_created_event' => null,
        'webhook_subscription_updated_event' => null,
        'webhook_subscription_deleted_event' => null,
        'printer_turned_on_event' => null,
        'printer_turned_off_event' => null,
        'printer_assigned_to_store_event' => null,
        'printer_unassigned_from_store_event' => null,
        'phone_call_started_event' => null,
        'phone_call_ended_event' => null,
        'loyalty_campaign_created_event' => null,
        'loyalty_campaign_deleted_event' => null,
        'loyalty_campaign_updated_event' => null,
        'retention_campaign_created_event' => null,
        'retention_campaign_deleted_event' => null,
        'retention_campaign_updated_event' => null,
        'sms_received_event' => null,
        'user_login_event' => null,
        'user_created_event' => null,
        'user_updated_event' => null,
        'user_deleted_event' => null,
        'user_created_password_event' => null,
        'user_answered_signup_questions_event' => null,
        'voucher_created_event' => null,
        'voucher_updated_event' => null,
        'voucher_deleted_event' => null,
        'teammate_invite_sent_event' => null,
        'teammate_invite_accepted_event' => null,
        'teammate_updated_event' => null,
        'teammate_deleted_event' => null,
        'bank_account_created_event' => null,
        'bank_account_updated_event' => null,
        'bank_account_deleted_event' => null,
        'bank_account_assigned_event' => null,
        'hydra_assigned_event' => null,
        'hydra_request_reset_event' => null,
        'hydra_store_assigned_event' => null,
        'hydra_store_unassigned_event' => null,
        'hydra_setting_changed_event' => null,
        'hydra_un_assigned_event' => null,
        'hydra_connection_status_changed_event' => null,
        'kiosk_bluetooth_pairing_mode_event' => null,
        'kiosk_bluetooth_unpairing_mode_event' => null,
        'kiosk_bluetooth_terminal_unpaired_event' => null,
        'kiosk_terminal_action_state_changed_event' => null,
        'kiosk_bluetooth_terminal_updated_event' => null,
        'kiosk_bluetooth_terminal_initiate_update_check_event' => null,
        'kiosk_bluetooth_install_update_initiate_event' => null,
        'kiosk_bluetooth_terminal_cancel_update_event' => null,
        'kiosk_bluetooth_terminal_firmware_version_status_event' => null,
        'kiosk_bluetooth_terminal_installation_status_event' => null,
        'push_notification_scheduled_event' => null,
        'push_notification_sent_event' => null,
        'push_notification_deleted_event' => null,
        'dns_verified_event' => null,
        'certificate_created_event' => null,
        'certificate_renewed_event' => null,
        'website_vanity_url_updated_event' => null,
        'website_updated_event' => null,
        'order_capacity_updated_event' => null,
        'external_store_event' => null,
        'order_fulfillment_status_updated_event' => null,
        'app_store_config_created_event' => null,
        'app_store_config_updated_event' => null,
        'app_store_config_deleted_event' => null,
        'app_store_subscription_change_job_updated_event' => null,
        'catalog_item_created_event' => null,
        'catalog_item_updated_event' => null,
        'catalog_item_archived_event' => null,
        'catalog_group_created_event' => null,
        'catalog_group_updated_event' => null,
        'catalog_group_archived_event' => null,
        'store_tip_updated_event' => null,
        'location_area_created_event' => null,
        'location_area_updated_event' => null,
        'location_created_event' => null,
        'location_deleted_event' => null,
        'store_service_charge_updated_event' => null,
        'mobile_apps_submission_status_updated_event' => null,
        'mobile_apps_submission_updated_event' => null,
        'store_fee_config_updated_event' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'app_created_event' => 'AppCreatedEvent',
        'app_updated_event' => 'AppUpdatedEvent',
        'analytics_client_event' => 'AnalyticsClientEvent',
        'order_accepted_event' => 'OrderAcceptedEvent',
        'order_dispatched_event' => 'OrderDispatchedEvent',
        'order_customer_tracking_created_event' => 'OrderCustomerTrackingCreatedEvent',
        'order_delivery_tracking_status_updated_event' => 'OrderDeliveryTrackingStatusUpdatedEvent',
        'order_batch_published_event' => 'OrderBatchPublishedEvent',
        'order_created_event' => 'OrderCreatedEvent',
        'order_rating_updated_event' => 'OrderRatingUpdatedEvent',
        'order_refunded_event' => 'OrderRefundedEvent',
        'order_rejected_event' => 'OrderRejectedEvent',
        'order_tip_updated_event' => 'OrderTipUpdatedEvent',
        'order_terminal_notifications' => 'OrderTerminalNotifications',
        'store_created_event' => 'StoreCreatedEvent',
        'store_deleted_event' => 'StoreDeletedEvent',
        'store_address_updated_event' => 'StoreAddressUpdatedEvent',
        'store_kiosk_setting_updated_event' => 'StoreKioskSettingUpdatedEvent',
        'delivery_zone_created_event' => 'DeliveryZoneCreatedEvent',
        'delivery_zone_updated_event' => 'DeliveryZoneUpdatedEvent',
        'delivery_zone_deleted_event' => 'DeliveryZoneDeletedEvent',
        'store_opening_hours_updated_event' => 'StoreOpeningHoursUpdatedEvent',
        'store_menu_assigned_event' => 'StoreMenuAssignedEvent',
        'store_business_hours_override_created_event' => 'StoreBusinessHoursOverrideCreatedEvent',
        'store_business_hours_override_deleted_event' => 'StoreBusinessHoursOverrideDeletedEvent',
        'store_archived_event' => 'StoreArchivedEvent',
        'store_unarchived_event' => 'StoreUnarchivedEvent',
        'store_published_event' => 'StorePublishedEvent',
        'store_unpublished_event' => 'StoreUnpublishedEvent',
        'store_updated_event' => 'StoreUpdatedEvent',
        'store_pre_order_config_updated_event' => 'StorePreOrderConfigUpdatedEvent',
        'store_logo_created_event' => 'StoreLogoCreatedEvent',
        'store_logo_updated_event' => 'StoreLogoUpdatedEvent',
        'store_logo_deleted_event' => 'StoreLogoDeletedEvent',
        'menu_created_event' => 'MenuCreatedEvent',
        'menu_updated_event' => 'MenuUpdatedEvent',
        'menu_uploaded_event' => 'MenuUploadedEvent',
        'menu_bulk_edit_event' => 'MenuBulkEditEvent',
        'menu_section_created_event' => 'MenuSectionCreatedEvent',
        'menu_section_updated_event' => 'MenuSectionUpdatedEvent',
        'menu_section_deleted_event' => 'MenuSectionDeletedEvent',
        'menu_section_item_created_event' => 'MenuSectionItemCreatedEvent',
        'menu_section_item_updated_event' => 'MenuSectionItemUpdatedEvent',
        'menu_section_item_deleted_event' => 'MenuSectionItemDeletedEvent',
        'menu_item_option_set_created_event' => 'MenuItemOptionSetCreatedEvent',
        'menu_item_option_set_updated_event' => 'MenuItemOptionSetUpdatedEvent',
        'menu_item_option_set_deleted_event' => 'MenuItemOptionSetDeletedEvent',
        'menu_item_option_set_item_created_event' => 'MenuItemOptionSetItemCreatedEvent',
        'menu_item_option_set_item_updated_event' => 'MenuItemOptionSetItemUpdatedEvent',
        'menu_item_option_set_item_deleted_event' => 'MenuItemOptionSetItemDeletedEvent',
        'menu_checkpoint_created_event' => 'MenuCheckpointCreatedEvent',
        'store_group_created_event' => 'StoreGroupCreatedEvent',
        'store_group_updated_event' => 'StoreGroupUpdatedEvent',
        'store_group_deleted_event' => 'StoreGroupDeletedEvent',
        'customer_created_event' => 'CustomerCreatedEvent',
        'customer_updated_event' => 'CustomerUpdatedEvent',
        'customer_consent_updated_event' => 'CustomerConsentUpdatedEvent',
        'webhook_subscription_created_event' => 'WebhookSubscriptionCreatedEvent',
        'webhook_subscription_updated_event' => 'WebhookSubscriptionUpdatedEvent',
        'webhook_subscription_deleted_event' => 'WebhookSubscriptionDeletedEvent',
        'printer_turned_on_event' => 'PrinterTurnedOnEvent',
        'printer_turned_off_event' => 'PrinterTurnedOffEvent',
        'printer_assigned_to_store_event' => 'PrinterAssignedToStoreEvent',
        'printer_unassigned_from_store_event' => 'PrinterUnassignedFromStoreEvent',
        'phone_call_started_event' => 'PhoneCallStartedEvent',
        'phone_call_ended_event' => 'PhoneCallEndedEvent',
        'loyalty_campaign_created_event' => 'LoyaltyCampaignCreatedEvent',
        'loyalty_campaign_deleted_event' => 'LoyaltyCampaignDeletedEvent',
        'loyalty_campaign_updated_event' => 'LoyaltyCampaignUpdatedEvent',
        'retention_campaign_created_event' => 'RetentionCampaignCreatedEvent',
        'retention_campaign_deleted_event' => 'RetentionCampaignDeletedEvent',
        'retention_campaign_updated_event' => 'RetentionCampaignUpdatedEvent',
        'sms_received_event' => 'SmsReceivedEvent',
        'user_login_event' => 'UserLoginEvent',
        'user_created_event' => 'UserCreatedEvent',
        'user_updated_event' => 'UserUpdatedEvent',
        'user_deleted_event' => 'UserDeletedEvent',
        'user_created_password_event' => 'UserCreatedPasswordEvent',
        'user_answered_signup_questions_event' => 'UserAnsweredSignupQuestionsEvent',
        'voucher_created_event' => 'VoucherCreatedEvent',
        'voucher_updated_event' => 'VoucherUpdatedEvent',
        'voucher_deleted_event' => 'VoucherDeletedEvent',
        'teammate_invite_sent_event' => 'TeammateInviteSentEvent',
        'teammate_invite_accepted_event' => 'TeammateInviteAcceptedEvent',
        'teammate_updated_event' => 'TeammateUpdatedEvent',
        'teammate_deleted_event' => 'TeammateDeletedEvent',
        'bank_account_created_event' => 'BankAccountCreatedEvent',
        'bank_account_updated_event' => 'BankAccountUpdatedEvent',
        'bank_account_deleted_event' => 'BankAccountDeletedEvent',
        'bank_account_assigned_event' => 'BankAccountAssignedEvent',
        'hydra_assigned_event' => 'HydraAssignedEvent',
        'hydra_request_reset_event' => 'HydraRequestResetEvent',
        'hydra_store_assigned_event' => 'HydraStoreAssignedEvent',
        'hydra_store_unassigned_event' => 'HydraStoreUnassignedEvent',
        'hydra_setting_changed_event' => 'HydraSettingChangedEvent',
        'hydra_un_assigned_event' => 'HydraUnAssignedEvent',
        'hydra_connection_status_changed_event' => 'HydraConnectionStatusChangedEvent',
        'kiosk_bluetooth_pairing_mode_event' => 'KioskBluetoothPairingModeEvent',
        'kiosk_bluetooth_unpairing_mode_event' => 'KioskBluetoothUnpairingModeEvent',
        'kiosk_bluetooth_terminal_unpaired_event' => 'KioskBluetoothTerminalUnpairedEvent',
        'kiosk_terminal_action_state_changed_event' => 'KioskTerminalActionStateChangedEvent',
        'kiosk_bluetooth_terminal_updated_event' => 'KioskBluetoothTerminalUpdatedEvent',
        'kiosk_bluetooth_terminal_initiate_update_check_event' => 'KioskBluetoothTerminalInitiateUpdateCheckEvent',
        'kiosk_bluetooth_install_update_initiate_event' => 'KioskBluetoothInstallUpdateInitiateEvent',
        'kiosk_bluetooth_terminal_cancel_update_event' => 'KioskBluetoothTerminalCancelUpdateEvent',
        'kiosk_bluetooth_terminal_firmware_version_status_event' => 'KioskBluetoothTerminalFirmwareVersionStatusEvent',
        'kiosk_bluetooth_terminal_installation_status_event' => 'KioskBluetoothTerminalInstallationStatusEvent',
        'push_notification_scheduled_event' => 'PushNotificationScheduledEvent',
        'push_notification_sent_event' => 'PushNotificationSentEvent',
        'push_notification_deleted_event' => 'PushNotificationDeletedEvent',
        'dns_verified_event' => 'DnsVerifiedEvent',
        'certificate_created_event' => 'CertificateCreatedEvent',
        'certificate_renewed_event' => 'CertificateRenewedEvent',
        'website_vanity_url_updated_event' => 'WebsiteVanityUrlUpdatedEvent',
        'website_updated_event' => 'WebsiteUpdatedEvent',
        'order_capacity_updated_event' => 'OrderCapacityUpdatedEvent',
        'external_store_event' => 'ExternalStoreEvent',
        'order_fulfillment_status_updated_event' => 'OrderFulfillmentStatusUpdatedEvent',
        'app_store_config_created_event' => 'AppStoreConfigCreatedEvent',
        'app_store_config_updated_event' => 'AppStoreConfigUpdatedEvent',
        'app_store_config_deleted_event' => 'AppStoreConfigDeletedEvent',
        'app_store_subscription_change_job_updated_event' => 'AppStoreSubscriptionChangeJobUpdatedEvent',
        'catalog_item_created_event' => 'CatalogItemCreatedEvent',
        'catalog_item_updated_event' => 'CatalogItemUpdatedEvent',
        'catalog_item_archived_event' => 'CatalogItemArchivedEvent',
        'catalog_group_created_event' => 'CatalogGroupCreatedEvent',
        'catalog_group_updated_event' => 'CatalogGroupUpdatedEvent',
        'catalog_group_archived_event' => 'CatalogGroupArchivedEvent',
        'store_tip_updated_event' => 'StoreTipUpdatedEvent',
        'location_area_created_event' => 'LocationAreaCreatedEvent',
        'location_area_updated_event' => 'LocationAreaUpdatedEvent',
        'location_created_event' => 'LocationCreatedEvent',
        'location_deleted_event' => 'LocationDeletedEvent',
        'store_service_charge_updated_event' => 'StoreServiceChargeUpdatedEvent',
        'mobile_apps_submission_status_updated_event' => 'MobileAppsSubmissionStatusUpdatedEvent',
        'mobile_apps_submission_updated_event' => 'MobileAppsSubmissionUpdatedEvent',
        'store_fee_config_updated_event' => 'StoreFeeConfigUpdatedEvent'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'app_created_event' => 'setAppCreatedEvent',
        'app_updated_event' => 'setAppUpdatedEvent',
        'analytics_client_event' => 'setAnalyticsClientEvent',
        'order_accepted_event' => 'setOrderAcceptedEvent',
        'order_dispatched_event' => 'setOrderDispatchedEvent',
        'order_customer_tracking_created_event' => 'setOrderCustomerTrackingCreatedEvent',
        'order_delivery_tracking_status_updated_event' => 'setOrderDeliveryTrackingStatusUpdatedEvent',
        'order_batch_published_event' => 'setOrderBatchPublishedEvent',
        'order_created_event' => 'setOrderCreatedEvent',
        'order_rating_updated_event' => 'setOrderRatingUpdatedEvent',
        'order_refunded_event' => 'setOrderRefundedEvent',
        'order_rejected_event' => 'setOrderRejectedEvent',
        'order_tip_updated_event' => 'setOrderTipUpdatedEvent',
        'order_terminal_notifications' => 'setOrderTerminalNotifications',
        'store_created_event' => 'setStoreCreatedEvent',
        'store_deleted_event' => 'setStoreDeletedEvent',
        'store_address_updated_event' => 'setStoreAddressUpdatedEvent',
        'store_kiosk_setting_updated_event' => 'setStoreKioskSettingUpdatedEvent',
        'delivery_zone_created_event' => 'setDeliveryZoneCreatedEvent',
        'delivery_zone_updated_event' => 'setDeliveryZoneUpdatedEvent',
        'delivery_zone_deleted_event' => 'setDeliveryZoneDeletedEvent',
        'store_opening_hours_updated_event' => 'setStoreOpeningHoursUpdatedEvent',
        'store_menu_assigned_event' => 'setStoreMenuAssignedEvent',
        'store_business_hours_override_created_event' => 'setStoreBusinessHoursOverrideCreatedEvent',
        'store_business_hours_override_deleted_event' => 'setStoreBusinessHoursOverrideDeletedEvent',
        'store_archived_event' => 'setStoreArchivedEvent',
        'store_unarchived_event' => 'setStoreUnarchivedEvent',
        'store_published_event' => 'setStorePublishedEvent',
        'store_unpublished_event' => 'setStoreUnpublishedEvent',
        'store_updated_event' => 'setStoreUpdatedEvent',
        'store_pre_order_config_updated_event' => 'setStorePreOrderConfigUpdatedEvent',
        'store_logo_created_event' => 'setStoreLogoCreatedEvent',
        'store_logo_updated_event' => 'setStoreLogoUpdatedEvent',
        'store_logo_deleted_event' => 'setStoreLogoDeletedEvent',
        'menu_created_event' => 'setMenuCreatedEvent',
        'menu_updated_event' => 'setMenuUpdatedEvent',
        'menu_uploaded_event' => 'setMenuUploadedEvent',
        'menu_bulk_edit_event' => 'setMenuBulkEditEvent',
        'menu_section_created_event' => 'setMenuSectionCreatedEvent',
        'menu_section_updated_event' => 'setMenuSectionUpdatedEvent',
        'menu_section_deleted_event' => 'setMenuSectionDeletedEvent',
        'menu_section_item_created_event' => 'setMenuSectionItemCreatedEvent',
        'menu_section_item_updated_event' => 'setMenuSectionItemUpdatedEvent',
        'menu_section_item_deleted_event' => 'setMenuSectionItemDeletedEvent',
        'menu_item_option_set_created_event' => 'setMenuItemOptionSetCreatedEvent',
        'menu_item_option_set_updated_event' => 'setMenuItemOptionSetUpdatedEvent',
        'menu_item_option_set_deleted_event' => 'setMenuItemOptionSetDeletedEvent',
        'menu_item_option_set_item_created_event' => 'setMenuItemOptionSetItemCreatedEvent',
        'menu_item_option_set_item_updated_event' => 'setMenuItemOptionSetItemUpdatedEvent',
        'menu_item_option_set_item_deleted_event' => 'setMenuItemOptionSetItemDeletedEvent',
        'menu_checkpoint_created_event' => 'setMenuCheckpointCreatedEvent',
        'store_group_created_event' => 'setStoreGroupCreatedEvent',
        'store_group_updated_event' => 'setStoreGroupUpdatedEvent',
        'store_group_deleted_event' => 'setStoreGroupDeletedEvent',
        'customer_created_event' => 'setCustomerCreatedEvent',
        'customer_updated_event' => 'setCustomerUpdatedEvent',
        'customer_consent_updated_event' => 'setCustomerConsentUpdatedEvent',
        'webhook_subscription_created_event' => 'setWebhookSubscriptionCreatedEvent',
        'webhook_subscription_updated_event' => 'setWebhookSubscriptionUpdatedEvent',
        'webhook_subscription_deleted_event' => 'setWebhookSubscriptionDeletedEvent',
        'printer_turned_on_event' => 'setPrinterTurnedOnEvent',
        'printer_turned_off_event' => 'setPrinterTurnedOffEvent',
        'printer_assigned_to_store_event' => 'setPrinterAssignedToStoreEvent',
        'printer_unassigned_from_store_event' => 'setPrinterUnassignedFromStoreEvent',
        'phone_call_started_event' => 'setPhoneCallStartedEvent',
        'phone_call_ended_event' => 'setPhoneCallEndedEvent',
        'loyalty_campaign_created_event' => 'setLoyaltyCampaignCreatedEvent',
        'loyalty_campaign_deleted_event' => 'setLoyaltyCampaignDeletedEvent',
        'loyalty_campaign_updated_event' => 'setLoyaltyCampaignUpdatedEvent',
        'retention_campaign_created_event' => 'setRetentionCampaignCreatedEvent',
        'retention_campaign_deleted_event' => 'setRetentionCampaignDeletedEvent',
        'retention_campaign_updated_event' => 'setRetentionCampaignUpdatedEvent',
        'sms_received_event' => 'setSmsReceivedEvent',
        'user_login_event' => 'setUserLoginEvent',
        'user_created_event' => 'setUserCreatedEvent',
        'user_updated_event' => 'setUserUpdatedEvent',
        'user_deleted_event' => 'setUserDeletedEvent',
        'user_created_password_event' => 'setUserCreatedPasswordEvent',
        'user_answered_signup_questions_event' => 'setUserAnsweredSignupQuestionsEvent',
        'voucher_created_event' => 'setVoucherCreatedEvent',
        'voucher_updated_event' => 'setVoucherUpdatedEvent',
        'voucher_deleted_event' => 'setVoucherDeletedEvent',
        'teammate_invite_sent_event' => 'setTeammateInviteSentEvent',
        'teammate_invite_accepted_event' => 'setTeammateInviteAcceptedEvent',
        'teammate_updated_event' => 'setTeammateUpdatedEvent',
        'teammate_deleted_event' => 'setTeammateDeletedEvent',
        'bank_account_created_event' => 'setBankAccountCreatedEvent',
        'bank_account_updated_event' => 'setBankAccountUpdatedEvent',
        'bank_account_deleted_event' => 'setBankAccountDeletedEvent',
        'bank_account_assigned_event' => 'setBankAccountAssignedEvent',
        'hydra_assigned_event' => 'setHydraAssignedEvent',
        'hydra_request_reset_event' => 'setHydraRequestResetEvent',
        'hydra_store_assigned_event' => 'setHydraStoreAssignedEvent',
        'hydra_store_unassigned_event' => 'setHydraStoreUnassignedEvent',
        'hydra_setting_changed_event' => 'setHydraSettingChangedEvent',
        'hydra_un_assigned_event' => 'setHydraUnAssignedEvent',
        'hydra_connection_status_changed_event' => 'setHydraConnectionStatusChangedEvent',
        'kiosk_bluetooth_pairing_mode_event' => 'setKioskBluetoothPairingModeEvent',
        'kiosk_bluetooth_unpairing_mode_event' => 'setKioskBluetoothUnpairingModeEvent',
        'kiosk_bluetooth_terminal_unpaired_event' => 'setKioskBluetoothTerminalUnpairedEvent',
        'kiosk_terminal_action_state_changed_event' => 'setKioskTerminalActionStateChangedEvent',
        'kiosk_bluetooth_terminal_updated_event' => 'setKioskBluetoothTerminalUpdatedEvent',
        'kiosk_bluetooth_terminal_initiate_update_check_event' => 'setKioskBluetoothTerminalInitiateUpdateCheckEvent',
        'kiosk_bluetooth_install_update_initiate_event' => 'setKioskBluetoothInstallUpdateInitiateEvent',
        'kiosk_bluetooth_terminal_cancel_update_event' => 'setKioskBluetoothTerminalCancelUpdateEvent',
        'kiosk_bluetooth_terminal_firmware_version_status_event' => 'setKioskBluetoothTerminalFirmwareVersionStatusEvent',
        'kiosk_bluetooth_terminal_installation_status_event' => 'setKioskBluetoothTerminalInstallationStatusEvent',
        'push_notification_scheduled_event' => 'setPushNotificationScheduledEvent',
        'push_notification_sent_event' => 'setPushNotificationSentEvent',
        'push_notification_deleted_event' => 'setPushNotificationDeletedEvent',
        'dns_verified_event' => 'setDnsVerifiedEvent',
        'certificate_created_event' => 'setCertificateCreatedEvent',
        'certificate_renewed_event' => 'setCertificateRenewedEvent',
        'website_vanity_url_updated_event' => 'setWebsiteVanityUrlUpdatedEvent',
        'website_updated_event' => 'setWebsiteUpdatedEvent',
        'order_capacity_updated_event' => 'setOrderCapacityUpdatedEvent',
        'external_store_event' => 'setExternalStoreEvent',
        'order_fulfillment_status_updated_event' => 'setOrderFulfillmentStatusUpdatedEvent',
        'app_store_config_created_event' => 'setAppStoreConfigCreatedEvent',
        'app_store_config_updated_event' => 'setAppStoreConfigUpdatedEvent',
        'app_store_config_deleted_event' => 'setAppStoreConfigDeletedEvent',
        'app_store_subscription_change_job_updated_event' => 'setAppStoreSubscriptionChangeJobUpdatedEvent',
        'catalog_item_created_event' => 'setCatalogItemCreatedEvent',
        'catalog_item_updated_event' => 'setCatalogItemUpdatedEvent',
        'catalog_item_archived_event' => 'setCatalogItemArchivedEvent',
        'catalog_group_created_event' => 'setCatalogGroupCreatedEvent',
        'catalog_group_updated_event' => 'setCatalogGroupUpdatedEvent',
        'catalog_group_archived_event' => 'setCatalogGroupArchivedEvent',
        'store_tip_updated_event' => 'setStoreTipUpdatedEvent',
        'location_area_created_event' => 'setLocationAreaCreatedEvent',
        'location_area_updated_event' => 'setLocationAreaUpdatedEvent',
        'location_created_event' => 'setLocationCreatedEvent',
        'location_deleted_event' => 'setLocationDeletedEvent',
        'store_service_charge_updated_event' => 'setStoreServiceChargeUpdatedEvent',
        'mobile_apps_submission_status_updated_event' => 'setMobileAppsSubmissionStatusUpdatedEvent',
        'mobile_apps_submission_updated_event' => 'setMobileAppsSubmissionUpdatedEvent',
        'store_fee_config_updated_event' => 'setStoreFeeConfigUpdatedEvent'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'app_created_event' => 'getAppCreatedEvent',
        'app_updated_event' => 'getAppUpdatedEvent',
        'analytics_client_event' => 'getAnalyticsClientEvent',
        'order_accepted_event' => 'getOrderAcceptedEvent',
        'order_dispatched_event' => 'getOrderDispatchedEvent',
        'order_customer_tracking_created_event' => 'getOrderCustomerTrackingCreatedEvent',
        'order_delivery_tracking_status_updated_event' => 'getOrderDeliveryTrackingStatusUpdatedEvent',
        'order_batch_published_event' => 'getOrderBatchPublishedEvent',
        'order_created_event' => 'getOrderCreatedEvent',
        'order_rating_updated_event' => 'getOrderRatingUpdatedEvent',
        'order_refunded_event' => 'getOrderRefundedEvent',
        'order_rejected_event' => 'getOrderRejectedEvent',
        'order_tip_updated_event' => 'getOrderTipUpdatedEvent',
        'order_terminal_notifications' => 'getOrderTerminalNotifications',
        'store_created_event' => 'getStoreCreatedEvent',
        'store_deleted_event' => 'getStoreDeletedEvent',
        'store_address_updated_event' => 'getStoreAddressUpdatedEvent',
        'store_kiosk_setting_updated_event' => 'getStoreKioskSettingUpdatedEvent',
        'delivery_zone_created_event' => 'getDeliveryZoneCreatedEvent',
        'delivery_zone_updated_event' => 'getDeliveryZoneUpdatedEvent',
        'delivery_zone_deleted_event' => 'getDeliveryZoneDeletedEvent',
        'store_opening_hours_updated_event' => 'getStoreOpeningHoursUpdatedEvent',
        'store_menu_assigned_event' => 'getStoreMenuAssignedEvent',
        'store_business_hours_override_created_event' => 'getStoreBusinessHoursOverrideCreatedEvent',
        'store_business_hours_override_deleted_event' => 'getStoreBusinessHoursOverrideDeletedEvent',
        'store_archived_event' => 'getStoreArchivedEvent',
        'store_unarchived_event' => 'getStoreUnarchivedEvent',
        'store_published_event' => 'getStorePublishedEvent',
        'store_unpublished_event' => 'getStoreUnpublishedEvent',
        'store_updated_event' => 'getStoreUpdatedEvent',
        'store_pre_order_config_updated_event' => 'getStorePreOrderConfigUpdatedEvent',
        'store_logo_created_event' => 'getStoreLogoCreatedEvent',
        'store_logo_updated_event' => 'getStoreLogoUpdatedEvent',
        'store_logo_deleted_event' => 'getStoreLogoDeletedEvent',
        'menu_created_event' => 'getMenuCreatedEvent',
        'menu_updated_event' => 'getMenuUpdatedEvent',
        'menu_uploaded_event' => 'getMenuUploadedEvent',
        'menu_bulk_edit_event' => 'getMenuBulkEditEvent',
        'menu_section_created_event' => 'getMenuSectionCreatedEvent',
        'menu_section_updated_event' => 'getMenuSectionUpdatedEvent',
        'menu_section_deleted_event' => 'getMenuSectionDeletedEvent',
        'menu_section_item_created_event' => 'getMenuSectionItemCreatedEvent',
        'menu_section_item_updated_event' => 'getMenuSectionItemUpdatedEvent',
        'menu_section_item_deleted_event' => 'getMenuSectionItemDeletedEvent',
        'menu_item_option_set_created_event' => 'getMenuItemOptionSetCreatedEvent',
        'menu_item_option_set_updated_event' => 'getMenuItemOptionSetUpdatedEvent',
        'menu_item_option_set_deleted_event' => 'getMenuItemOptionSetDeletedEvent',
        'menu_item_option_set_item_created_event' => 'getMenuItemOptionSetItemCreatedEvent',
        'menu_item_option_set_item_updated_event' => 'getMenuItemOptionSetItemUpdatedEvent',
        'menu_item_option_set_item_deleted_event' => 'getMenuItemOptionSetItemDeletedEvent',
        'menu_checkpoint_created_event' => 'getMenuCheckpointCreatedEvent',
        'store_group_created_event' => 'getStoreGroupCreatedEvent',
        'store_group_updated_event' => 'getStoreGroupUpdatedEvent',
        'store_group_deleted_event' => 'getStoreGroupDeletedEvent',
        'customer_created_event' => 'getCustomerCreatedEvent',
        'customer_updated_event' => 'getCustomerUpdatedEvent',
        'customer_consent_updated_event' => 'getCustomerConsentUpdatedEvent',
        'webhook_subscription_created_event' => 'getWebhookSubscriptionCreatedEvent',
        'webhook_subscription_updated_event' => 'getWebhookSubscriptionUpdatedEvent',
        'webhook_subscription_deleted_event' => 'getWebhookSubscriptionDeletedEvent',
        'printer_turned_on_event' => 'getPrinterTurnedOnEvent',
        'printer_turned_off_event' => 'getPrinterTurnedOffEvent',
        'printer_assigned_to_store_event' => 'getPrinterAssignedToStoreEvent',
        'printer_unassigned_from_store_event' => 'getPrinterUnassignedFromStoreEvent',
        'phone_call_started_event' => 'getPhoneCallStartedEvent',
        'phone_call_ended_event' => 'getPhoneCallEndedEvent',
        'loyalty_campaign_created_event' => 'getLoyaltyCampaignCreatedEvent',
        'loyalty_campaign_deleted_event' => 'getLoyaltyCampaignDeletedEvent',
        'loyalty_campaign_updated_event' => 'getLoyaltyCampaignUpdatedEvent',
        'retention_campaign_created_event' => 'getRetentionCampaignCreatedEvent',
        'retention_campaign_deleted_event' => 'getRetentionCampaignDeletedEvent',
        'retention_campaign_updated_event' => 'getRetentionCampaignUpdatedEvent',
        'sms_received_event' => 'getSmsReceivedEvent',
        'user_login_event' => 'getUserLoginEvent',
        'user_created_event' => 'getUserCreatedEvent',
        'user_updated_event' => 'getUserUpdatedEvent',
        'user_deleted_event' => 'getUserDeletedEvent',
        'user_created_password_event' => 'getUserCreatedPasswordEvent',
        'user_answered_signup_questions_event' => 'getUserAnsweredSignupQuestionsEvent',
        'voucher_created_event' => 'getVoucherCreatedEvent',
        'voucher_updated_event' => 'getVoucherUpdatedEvent',
        'voucher_deleted_event' => 'getVoucherDeletedEvent',
        'teammate_invite_sent_event' => 'getTeammateInviteSentEvent',
        'teammate_invite_accepted_event' => 'getTeammateInviteAcceptedEvent',
        'teammate_updated_event' => 'getTeammateUpdatedEvent',
        'teammate_deleted_event' => 'getTeammateDeletedEvent',
        'bank_account_created_event' => 'getBankAccountCreatedEvent',
        'bank_account_updated_event' => 'getBankAccountUpdatedEvent',
        'bank_account_deleted_event' => 'getBankAccountDeletedEvent',
        'bank_account_assigned_event' => 'getBankAccountAssignedEvent',
        'hydra_assigned_event' => 'getHydraAssignedEvent',
        'hydra_request_reset_event' => 'getHydraRequestResetEvent',
        'hydra_store_assigned_event' => 'getHydraStoreAssignedEvent',
        'hydra_store_unassigned_event' => 'getHydraStoreUnassignedEvent',
        'hydra_setting_changed_event' => 'getHydraSettingChangedEvent',
        'hydra_un_assigned_event' => 'getHydraUnAssignedEvent',
        'hydra_connection_status_changed_event' => 'getHydraConnectionStatusChangedEvent',
        'kiosk_bluetooth_pairing_mode_event' => 'getKioskBluetoothPairingModeEvent',
        'kiosk_bluetooth_unpairing_mode_event' => 'getKioskBluetoothUnpairingModeEvent',
        'kiosk_bluetooth_terminal_unpaired_event' => 'getKioskBluetoothTerminalUnpairedEvent',
        'kiosk_terminal_action_state_changed_event' => 'getKioskTerminalActionStateChangedEvent',
        'kiosk_bluetooth_terminal_updated_event' => 'getKioskBluetoothTerminalUpdatedEvent',
        'kiosk_bluetooth_terminal_initiate_update_check_event' => 'getKioskBluetoothTerminalInitiateUpdateCheckEvent',
        'kiosk_bluetooth_install_update_initiate_event' => 'getKioskBluetoothInstallUpdateInitiateEvent',
        'kiosk_bluetooth_terminal_cancel_update_event' => 'getKioskBluetoothTerminalCancelUpdateEvent',
        'kiosk_bluetooth_terminal_firmware_version_status_event' => 'getKioskBluetoothTerminalFirmwareVersionStatusEvent',
        'kiosk_bluetooth_terminal_installation_status_event' => 'getKioskBluetoothTerminalInstallationStatusEvent',
        'push_notification_scheduled_event' => 'getPushNotificationScheduledEvent',
        'push_notification_sent_event' => 'getPushNotificationSentEvent',
        'push_notification_deleted_event' => 'getPushNotificationDeletedEvent',
        'dns_verified_event' => 'getDnsVerifiedEvent',
        'certificate_created_event' => 'getCertificateCreatedEvent',
        'certificate_renewed_event' => 'getCertificateRenewedEvent',
        'website_vanity_url_updated_event' => 'getWebsiteVanityUrlUpdatedEvent',
        'website_updated_event' => 'getWebsiteUpdatedEvent',
        'order_capacity_updated_event' => 'getOrderCapacityUpdatedEvent',
        'external_store_event' => 'getExternalStoreEvent',
        'order_fulfillment_status_updated_event' => 'getOrderFulfillmentStatusUpdatedEvent',
        'app_store_config_created_event' => 'getAppStoreConfigCreatedEvent',
        'app_store_config_updated_event' => 'getAppStoreConfigUpdatedEvent',
        'app_store_config_deleted_event' => 'getAppStoreConfigDeletedEvent',
        'app_store_subscription_change_job_updated_event' => 'getAppStoreSubscriptionChangeJobUpdatedEvent',
        'catalog_item_created_event' => 'getCatalogItemCreatedEvent',
        'catalog_item_updated_event' => 'getCatalogItemUpdatedEvent',
        'catalog_item_archived_event' => 'getCatalogItemArchivedEvent',
        'catalog_group_created_event' => 'getCatalogGroupCreatedEvent',
        'catalog_group_updated_event' => 'getCatalogGroupUpdatedEvent',
        'catalog_group_archived_event' => 'getCatalogGroupArchivedEvent',
        'store_tip_updated_event' => 'getStoreTipUpdatedEvent',
        'location_area_created_event' => 'getLocationAreaCreatedEvent',
        'location_area_updated_event' => 'getLocationAreaUpdatedEvent',
        'location_created_event' => 'getLocationCreatedEvent',
        'location_deleted_event' => 'getLocationDeletedEvent',
        'store_service_charge_updated_event' => 'getStoreServiceChargeUpdatedEvent',
        'mobile_apps_submission_status_updated_event' => 'getMobileAppsSubmissionStatusUpdatedEvent',
        'mobile_apps_submission_updated_event' => 'getMobileAppsSubmissionUpdatedEvent',
        'store_fee_config_updated_event' => 'getStoreFeeConfigUpdatedEvent'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['app_created_event'] = isset($data['app_created_event']) ? $data['app_created_event'] : null;
        $this->container['app_updated_event'] = isset($data['app_updated_event']) ? $data['app_updated_event'] : null;
        $this->container['analytics_client_event'] = isset($data['analytics_client_event']) ? $data['analytics_client_event'] : null;
        $this->container['order_accepted_event'] = isset($data['order_accepted_event']) ? $data['order_accepted_event'] : null;
        $this->container['order_dispatched_event'] = isset($data['order_dispatched_event']) ? $data['order_dispatched_event'] : null;
        $this->container['order_customer_tracking_created_event'] = isset($data['order_customer_tracking_created_event']) ? $data['order_customer_tracking_created_event'] : null;
        $this->container['order_delivery_tracking_status_updated_event'] = isset($data['order_delivery_tracking_status_updated_event']) ? $data['order_delivery_tracking_status_updated_event'] : null;
        $this->container['order_batch_published_event'] = isset($data['order_batch_published_event']) ? $data['order_batch_published_event'] : null;
        $this->container['order_created_event'] = isset($data['order_created_event']) ? $data['order_created_event'] : null;
        $this->container['order_rating_updated_event'] = isset($data['order_rating_updated_event']) ? $data['order_rating_updated_event'] : null;
        $this->container['order_refunded_event'] = isset($data['order_refunded_event']) ? $data['order_refunded_event'] : null;
        $this->container['order_rejected_event'] = isset($data['order_rejected_event']) ? $data['order_rejected_event'] : null;
        $this->container['order_tip_updated_event'] = isset($data['order_tip_updated_event']) ? $data['order_tip_updated_event'] : null;
        $this->container['order_terminal_notifications'] = isset($data['order_terminal_notifications']) ? $data['order_terminal_notifications'] : null;
        $this->container['store_created_event'] = isset($data['store_created_event']) ? $data['store_created_event'] : null;
        $this->container['store_deleted_event'] = isset($data['store_deleted_event']) ? $data['store_deleted_event'] : null;
        $this->container['store_address_updated_event'] = isset($data['store_address_updated_event']) ? $data['store_address_updated_event'] : null;
        $this->container['store_kiosk_setting_updated_event'] = isset($data['store_kiosk_setting_updated_event']) ? $data['store_kiosk_setting_updated_event'] : null;
        $this->container['delivery_zone_created_event'] = isset($data['delivery_zone_created_event']) ? $data['delivery_zone_created_event'] : null;
        $this->container['delivery_zone_updated_event'] = isset($data['delivery_zone_updated_event']) ? $data['delivery_zone_updated_event'] : null;
        $this->container['delivery_zone_deleted_event'] = isset($data['delivery_zone_deleted_event']) ? $data['delivery_zone_deleted_event'] : null;
        $this->container['store_opening_hours_updated_event'] = isset($data['store_opening_hours_updated_event']) ? $data['store_opening_hours_updated_event'] : null;
        $this->container['store_menu_assigned_event'] = isset($data['store_menu_assigned_event']) ? $data['store_menu_assigned_event'] : null;
        $this->container['store_business_hours_override_created_event'] = isset($data['store_business_hours_override_created_event']) ? $data['store_business_hours_override_created_event'] : null;
        $this->container['store_business_hours_override_deleted_event'] = isset($data['store_business_hours_override_deleted_event']) ? $data['store_business_hours_override_deleted_event'] : null;
        $this->container['store_archived_event'] = isset($data['store_archived_event']) ? $data['store_archived_event'] : null;
        $this->container['store_unarchived_event'] = isset($data['store_unarchived_event']) ? $data['store_unarchived_event'] : null;
        $this->container['store_published_event'] = isset($data['store_published_event']) ? $data['store_published_event'] : null;
        $this->container['store_unpublished_event'] = isset($data['store_unpublished_event']) ? $data['store_unpublished_event'] : null;
        $this->container['store_updated_event'] = isset($data['store_updated_event']) ? $data['store_updated_event'] : null;
        $this->container['store_pre_order_config_updated_event'] = isset($data['store_pre_order_config_updated_event']) ? $data['store_pre_order_config_updated_event'] : null;
        $this->container['store_logo_created_event'] = isset($data['store_logo_created_event']) ? $data['store_logo_created_event'] : null;
        $this->container['store_logo_updated_event'] = isset($data['store_logo_updated_event']) ? $data['store_logo_updated_event'] : null;
        $this->container['store_logo_deleted_event'] = isset($data['store_logo_deleted_event']) ? $data['store_logo_deleted_event'] : null;
        $this->container['menu_created_event'] = isset($data['menu_created_event']) ? $data['menu_created_event'] : null;
        $this->container['menu_updated_event'] = isset($data['menu_updated_event']) ? $data['menu_updated_event'] : null;
        $this->container['menu_uploaded_event'] = isset($data['menu_uploaded_event']) ? $data['menu_uploaded_event'] : null;
        $this->container['menu_bulk_edit_event'] = isset($data['menu_bulk_edit_event']) ? $data['menu_bulk_edit_event'] : null;
        $this->container['menu_section_created_event'] = isset($data['menu_section_created_event']) ? $data['menu_section_created_event'] : null;
        $this->container['menu_section_updated_event'] = isset($data['menu_section_updated_event']) ? $data['menu_section_updated_event'] : null;
        $this->container['menu_section_deleted_event'] = isset($data['menu_section_deleted_event']) ? $data['menu_section_deleted_event'] : null;
        $this->container['menu_section_item_created_event'] = isset($data['menu_section_item_created_event']) ? $data['menu_section_item_created_event'] : null;
        $this->container['menu_section_item_updated_event'] = isset($data['menu_section_item_updated_event']) ? $data['menu_section_item_updated_event'] : null;
        $this->container['menu_section_item_deleted_event'] = isset($data['menu_section_item_deleted_event']) ? $data['menu_section_item_deleted_event'] : null;
        $this->container['menu_item_option_set_created_event'] = isset($data['menu_item_option_set_created_event']) ? $data['menu_item_option_set_created_event'] : null;
        $this->container['menu_item_option_set_updated_event'] = isset($data['menu_item_option_set_updated_event']) ? $data['menu_item_option_set_updated_event'] : null;
        $this->container['menu_item_option_set_deleted_event'] = isset($data['menu_item_option_set_deleted_event']) ? $data['menu_item_option_set_deleted_event'] : null;
        $this->container['menu_item_option_set_item_created_event'] = isset($data['menu_item_option_set_item_created_event']) ? $data['menu_item_option_set_item_created_event'] : null;
        $this->container['menu_item_option_set_item_updated_event'] = isset($data['menu_item_option_set_item_updated_event']) ? $data['menu_item_option_set_item_updated_event'] : null;
        $this->container['menu_item_option_set_item_deleted_event'] = isset($data['menu_item_option_set_item_deleted_event']) ? $data['menu_item_option_set_item_deleted_event'] : null;
        $this->container['menu_checkpoint_created_event'] = isset($data['menu_checkpoint_created_event']) ? $data['menu_checkpoint_created_event'] : null;
        $this->container['store_group_created_event'] = isset($data['store_group_created_event']) ? $data['store_group_created_event'] : null;
        $this->container['store_group_updated_event'] = isset($data['store_group_updated_event']) ? $data['store_group_updated_event'] : null;
        $this->container['store_group_deleted_event'] = isset($data['store_group_deleted_event']) ? $data['store_group_deleted_event'] : null;
        $this->container['customer_created_event'] = isset($data['customer_created_event']) ? $data['customer_created_event'] : null;
        $this->container['customer_updated_event'] = isset($data['customer_updated_event']) ? $data['customer_updated_event'] : null;
        $this->container['customer_consent_updated_event'] = isset($data['customer_consent_updated_event']) ? $data['customer_consent_updated_event'] : null;
        $this->container['webhook_subscription_created_event'] = isset($data['webhook_subscription_created_event']) ? $data['webhook_subscription_created_event'] : null;
        $this->container['webhook_subscription_updated_event'] = isset($data['webhook_subscription_updated_event']) ? $data['webhook_subscription_updated_event'] : null;
        $this->container['webhook_subscription_deleted_event'] = isset($data['webhook_subscription_deleted_event']) ? $data['webhook_subscription_deleted_event'] : null;
        $this->container['printer_turned_on_event'] = isset($data['printer_turned_on_event']) ? $data['printer_turned_on_event'] : null;
        $this->container['printer_turned_off_event'] = isset($data['printer_turned_off_event']) ? $data['printer_turned_off_event'] : null;
        $this->container['printer_assigned_to_store_event'] = isset($data['printer_assigned_to_store_event']) ? $data['printer_assigned_to_store_event'] : null;
        $this->container['printer_unassigned_from_store_event'] = isset($data['printer_unassigned_from_store_event']) ? $data['printer_unassigned_from_store_event'] : null;
        $this->container['phone_call_started_event'] = isset($data['phone_call_started_event']) ? $data['phone_call_started_event'] : null;
        $this->container['phone_call_ended_event'] = isset($data['phone_call_ended_event']) ? $data['phone_call_ended_event'] : null;
        $this->container['loyalty_campaign_created_event'] = isset($data['loyalty_campaign_created_event']) ? $data['loyalty_campaign_created_event'] : null;
        $this->container['loyalty_campaign_deleted_event'] = isset($data['loyalty_campaign_deleted_event']) ? $data['loyalty_campaign_deleted_event'] : null;
        $this->container['loyalty_campaign_updated_event'] = isset($data['loyalty_campaign_updated_event']) ? $data['loyalty_campaign_updated_event'] : null;
        $this->container['retention_campaign_created_event'] = isset($data['retention_campaign_created_event']) ? $data['retention_campaign_created_event'] : null;
        $this->container['retention_campaign_deleted_event'] = isset($data['retention_campaign_deleted_event']) ? $data['retention_campaign_deleted_event'] : null;
        $this->container['retention_campaign_updated_event'] = isset($data['retention_campaign_updated_event']) ? $data['retention_campaign_updated_event'] : null;
        $this->container['sms_received_event'] = isset($data['sms_received_event']) ? $data['sms_received_event'] : null;
        $this->container['user_login_event'] = isset($data['user_login_event']) ? $data['user_login_event'] : null;
        $this->container['user_created_event'] = isset($data['user_created_event']) ? $data['user_created_event'] : null;
        $this->container['user_updated_event'] = isset($data['user_updated_event']) ? $data['user_updated_event'] : null;
        $this->container['user_deleted_event'] = isset($data['user_deleted_event']) ? $data['user_deleted_event'] : null;
        $this->container['user_created_password_event'] = isset($data['user_created_password_event']) ? $data['user_created_password_event'] : null;
        $this->container['user_answered_signup_questions_event'] = isset($data['user_answered_signup_questions_event']) ? $data['user_answered_signup_questions_event'] : null;
        $this->container['voucher_created_event'] = isset($data['voucher_created_event']) ? $data['voucher_created_event'] : null;
        $this->container['voucher_updated_event'] = isset($data['voucher_updated_event']) ? $data['voucher_updated_event'] : null;
        $this->container['voucher_deleted_event'] = isset($data['voucher_deleted_event']) ? $data['voucher_deleted_event'] : null;
        $this->container['teammate_invite_sent_event'] = isset($data['teammate_invite_sent_event']) ? $data['teammate_invite_sent_event'] : null;
        $this->container['teammate_invite_accepted_event'] = isset($data['teammate_invite_accepted_event']) ? $data['teammate_invite_accepted_event'] : null;
        $this->container['teammate_updated_event'] = isset($data['teammate_updated_event']) ? $data['teammate_updated_event'] : null;
        $this->container['teammate_deleted_event'] = isset($data['teammate_deleted_event']) ? $data['teammate_deleted_event'] : null;
        $this->container['bank_account_created_event'] = isset($data['bank_account_created_event']) ? $data['bank_account_created_event'] : null;
        $this->container['bank_account_updated_event'] = isset($data['bank_account_updated_event']) ? $data['bank_account_updated_event'] : null;
        $this->container['bank_account_deleted_event'] = isset($data['bank_account_deleted_event']) ? $data['bank_account_deleted_event'] : null;
        $this->container['bank_account_assigned_event'] = isset($data['bank_account_assigned_event']) ? $data['bank_account_assigned_event'] : null;
        $this->container['hydra_assigned_event'] = isset($data['hydra_assigned_event']) ? $data['hydra_assigned_event'] : null;
        $this->container['hydra_request_reset_event'] = isset($data['hydra_request_reset_event']) ? $data['hydra_request_reset_event'] : null;
        $this->container['hydra_store_assigned_event'] = isset($data['hydra_store_assigned_event']) ? $data['hydra_store_assigned_event'] : null;
        $this->container['hydra_store_unassigned_event'] = isset($data['hydra_store_unassigned_event']) ? $data['hydra_store_unassigned_event'] : null;
        $this->container['hydra_setting_changed_event'] = isset($data['hydra_setting_changed_event']) ? $data['hydra_setting_changed_event'] : null;
        $this->container['hydra_un_assigned_event'] = isset($data['hydra_un_assigned_event']) ? $data['hydra_un_assigned_event'] : null;
        $this->container['hydra_connection_status_changed_event'] = isset($data['hydra_connection_status_changed_event']) ? $data['hydra_connection_status_changed_event'] : null;
        $this->container['kiosk_bluetooth_pairing_mode_event'] = isset($data['kiosk_bluetooth_pairing_mode_event']) ? $data['kiosk_bluetooth_pairing_mode_event'] : null;
        $this->container['kiosk_bluetooth_unpairing_mode_event'] = isset($data['kiosk_bluetooth_unpairing_mode_event']) ? $data['kiosk_bluetooth_unpairing_mode_event'] : null;
        $this->container['kiosk_bluetooth_terminal_unpaired_event'] = isset($data['kiosk_bluetooth_terminal_unpaired_event']) ? $data['kiosk_bluetooth_terminal_unpaired_event'] : null;
        $this->container['kiosk_terminal_action_state_changed_event'] = isset($data['kiosk_terminal_action_state_changed_event']) ? $data['kiosk_terminal_action_state_changed_event'] : null;
        $this->container['kiosk_bluetooth_terminal_updated_event'] = isset($data['kiosk_bluetooth_terminal_updated_event']) ? $data['kiosk_bluetooth_terminal_updated_event'] : null;
        $this->container['kiosk_bluetooth_terminal_initiate_update_check_event'] = isset($data['kiosk_bluetooth_terminal_initiate_update_check_event']) ? $data['kiosk_bluetooth_terminal_initiate_update_check_event'] : null;
        $this->container['kiosk_bluetooth_install_update_initiate_event'] = isset($data['kiosk_bluetooth_install_update_initiate_event']) ? $data['kiosk_bluetooth_install_update_initiate_event'] : null;
        $this->container['kiosk_bluetooth_terminal_cancel_update_event'] = isset($data['kiosk_bluetooth_terminal_cancel_update_event']) ? $data['kiosk_bluetooth_terminal_cancel_update_event'] : null;
        $this->container['kiosk_bluetooth_terminal_firmware_version_status_event'] = isset($data['kiosk_bluetooth_terminal_firmware_version_status_event']) ? $data['kiosk_bluetooth_terminal_firmware_version_status_event'] : null;
        $this->container['kiosk_bluetooth_terminal_installation_status_event'] = isset($data['kiosk_bluetooth_terminal_installation_status_event']) ? $data['kiosk_bluetooth_terminal_installation_status_event'] : null;
        $this->container['push_notification_scheduled_event'] = isset($data['push_notification_scheduled_event']) ? $data['push_notification_scheduled_event'] : null;
        $this->container['push_notification_sent_event'] = isset($data['push_notification_sent_event']) ? $data['push_notification_sent_event'] : null;
        $this->container['push_notification_deleted_event'] = isset($data['push_notification_deleted_event']) ? $data['push_notification_deleted_event'] : null;
        $this->container['dns_verified_event'] = isset($data['dns_verified_event']) ? $data['dns_verified_event'] : null;
        $this->container['certificate_created_event'] = isset($data['certificate_created_event']) ? $data['certificate_created_event'] : null;
        $this->container['certificate_renewed_event'] = isset($data['certificate_renewed_event']) ? $data['certificate_renewed_event'] : null;
        $this->container['website_vanity_url_updated_event'] = isset($data['website_vanity_url_updated_event']) ? $data['website_vanity_url_updated_event'] : null;
        $this->container['website_updated_event'] = isset($data['website_updated_event']) ? $data['website_updated_event'] : null;
        $this->container['order_capacity_updated_event'] = isset($data['order_capacity_updated_event']) ? $data['order_capacity_updated_event'] : null;
        $this->container['external_store_event'] = isset($data['external_store_event']) ? $data['external_store_event'] : null;
        $this->container['order_fulfillment_status_updated_event'] = isset($data['order_fulfillment_status_updated_event']) ? $data['order_fulfillment_status_updated_event'] : null;
        $this->container['app_store_config_created_event'] = isset($data['app_store_config_created_event']) ? $data['app_store_config_created_event'] : null;
        $this->container['app_store_config_updated_event'] = isset($data['app_store_config_updated_event']) ? $data['app_store_config_updated_event'] : null;
        $this->container['app_store_config_deleted_event'] = isset($data['app_store_config_deleted_event']) ? $data['app_store_config_deleted_event'] : null;
        $this->container['app_store_subscription_change_job_updated_event'] = isset($data['app_store_subscription_change_job_updated_event']) ? $data['app_store_subscription_change_job_updated_event'] : null;
        $this->container['catalog_item_created_event'] = isset($data['catalog_item_created_event']) ? $data['catalog_item_created_event'] : null;
        $this->container['catalog_item_updated_event'] = isset($data['catalog_item_updated_event']) ? $data['catalog_item_updated_event'] : null;
        $this->container['catalog_item_archived_event'] = isset($data['catalog_item_archived_event']) ? $data['catalog_item_archived_event'] : null;
        $this->container['catalog_group_created_event'] = isset($data['catalog_group_created_event']) ? $data['catalog_group_created_event'] : null;
        $this->container['catalog_group_updated_event'] = isset($data['catalog_group_updated_event']) ? $data['catalog_group_updated_event'] : null;
        $this->container['catalog_group_archived_event'] = isset($data['catalog_group_archived_event']) ? $data['catalog_group_archived_event'] : null;
        $this->container['store_tip_updated_event'] = isset($data['store_tip_updated_event']) ? $data['store_tip_updated_event'] : null;
        $this->container['location_area_created_event'] = isset($data['location_area_created_event']) ? $data['location_area_created_event'] : null;
        $this->container['location_area_updated_event'] = isset($data['location_area_updated_event']) ? $data['location_area_updated_event'] : null;
        $this->container['location_created_event'] = isset($data['location_created_event']) ? $data['location_created_event'] : null;
        $this->container['location_deleted_event'] = isset($data['location_deleted_event']) ? $data['location_deleted_event'] : null;
        $this->container['store_service_charge_updated_event'] = isset($data['store_service_charge_updated_event']) ? $data['store_service_charge_updated_event'] : null;
        $this->container['mobile_apps_submission_status_updated_event'] = isset($data['mobile_apps_submission_status_updated_event']) ? $data['mobile_apps_submission_status_updated_event'] : null;
        $this->container['mobile_apps_submission_updated_event'] = isset($data['mobile_apps_submission_updated_event']) ? $data['mobile_apps_submission_updated_event'] : null;
        $this->container['store_fee_config_updated_event'] = isset($data['store_fee_config_updated_event']) ? $data['store_fee_config_updated_event'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets app_created_event
     *
     * @return \Flipdish\\Client\Models\AppCreatedEvent[]
     */
    public function getAppCreatedEvent()
    {
        return $this->container['app_created_event'];
    }

    /**
     * Sets app_created_event
     *
     * @param \Flipdish\\Client\Models\AppCreatedEvent[] $app_created_event App Created Event
     *
     * @return $this
     */
    public function setAppCreatedEvent($app_created_event)
    {
        $this->container['app_created_event'] = $app_created_event;

        return $this;
    }

    /**
     * Gets app_updated_event
     *
     * @return \Flipdish\\Client\Models\AppUpdatedEvent[]
     */
    public function getAppUpdatedEvent()
    {
        return $this->container['app_updated_event'];
    }

    /**
     * Sets app_updated_event
     *
     * @param \Flipdish\\Client\Models\AppUpdatedEvent[] $app_updated_event App Updated Event
     *
     * @return $this
     */
    public function setAppUpdatedEvent($app_updated_event)
    {
        $this->container['app_updated_event'] = $app_updated_event;

        return $this;
    }

    /**
     * Gets analytics_client_event
     *
     * @return \Flipdish\\Client\Models\AnalyticsClientEvent[]
     */
    public function getAnalyticsClientEvent()
    {
        return $this->container['analytics_client_event'];
    }

    /**
     * Sets analytics_client_event
     *
     * @param \Flipdish\\Client\Models\AnalyticsClientEvent[] $analytics_client_event Client Analytics events
     *
     * @return $this
     */
    public function setAnalyticsClientEvent($analytics_client_event)
    {
        $this->container['analytics_client_event'] = $analytics_client_event;

        return $this;
    }

    /**
     * Gets order_accepted_event
     *
     * @return \Flipdish\\Client\Models\OrderAcceptedEvent[]
     */
    public function getOrderAcceptedEvent()
    {
        return $this->container['order_accepted_event'];
    }

    /**
     * Sets order_accepted_event
     *
     * @param \Flipdish\\Client\Models\OrderAcceptedEvent[] $order_accepted_event Order accepted events
     *
     * @return $this
     */
    public function setOrderAcceptedEvent($order_accepted_event)
    {
        $this->container['order_accepted_event'] = $order_accepted_event;

        return $this;
    }

    /**
     * Gets order_dispatched_event
     *
     * @return \Flipdish\\Client\Models\OrderDispatchedEvent[]
     */
    public function getOrderDispatchedEvent()
    {
        return $this->container['order_dispatched_event'];
    }

    /**
     * Sets order_dispatched_event
     *
     * @param \Flipdish\\Client\Models\OrderDispatchedEvent[] $order_dispatched_event Order dispatched events
     *
     * @return $this
     */
    public function setOrderDispatchedEvent($order_dispatched_event)
    {
        $this->container['order_dispatched_event'] = $order_dispatched_event;

        return $this;
    }

    /**
     * Gets order_customer_tracking_created_event
     *
     * @return \Flipdish\\Client\Models\OrderCustomerTrackingCreatedEvent[]
     */
    public function getOrderCustomerTrackingCreatedEvent()
    {
        return $this->container['order_customer_tracking_created_event'];
    }

    /**
     * Sets order_customer_tracking_created_event
     *
     * @param \Flipdish\\Client\Models\OrderCustomerTrackingCreatedEvent[] $order_customer_tracking_created_event Order delivery tracking created events
     *
     * @return $this
     */
    public function setOrderCustomerTrackingCreatedEvent($order_customer_tracking_created_event)
    {
        $this->container['order_customer_tracking_created_event'] = $order_customer_tracking_created_event;

        return $this;
    }

    /**
     * Gets order_delivery_tracking_status_updated_event
     *
     * @return \Flipdish\\Client\Models\OrderDeliveryTrackingStatusUpdatedEvent[]
     */
    public function getOrderDeliveryTrackingStatusUpdatedEvent()
    {
        return $this->container['order_delivery_tracking_status_updated_event'];
    }

    /**
     * Sets order_delivery_tracking_status_updated_event
     *
     * @param \Flipdish\\Client\Models\OrderDeliveryTrackingStatusUpdatedEvent[] $order_delivery_tracking_status_updated_event Order delivery tracking updated events
     *
     * @return $this
     */
    public function setOrderDeliveryTrackingStatusUpdatedEvent($order_delivery_tracking_status_updated_event)
    {
        $this->container['order_delivery_tracking_status_updated_event'] = $order_delivery_tracking_status_updated_event;

        return $this;
    }

    /**
     * Gets order_batch_published_event
     *
     * @return \Flipdish\\Client\Models\OrderBatchPublishedEvent[]
     */
    public function getOrderBatchPublishedEvent()
    {
        return $this->container['order_batch_published_event'];
    }

    /**
     * Sets order_batch_published_event
     *
     * @param \Flipdish\\Client\Models\OrderBatchPublishedEvent[] $order_batch_published_event Order Batch published event
     *
     * @return $this
     */
    public function setOrderBatchPublishedEvent($order_batch_published_event)
    {
        $this->container['order_batch_published_event'] = $order_batch_published_event;

        return $this;
    }

    /**
     * Gets order_created_event
     *
     * @return \Flipdish\\Client\Models\OrderCreatedEvent[]
     */
    public function getOrderCreatedEvent()
    {
        return $this->container['order_created_event'];
    }

    /**
     * Sets order_created_event
     *
     * @param \Flipdish\\Client\Models\OrderCreatedEvent[] $order_created_event Order created events
     *
     * @return $this
     */
    public function setOrderCreatedEvent($order_created_event)
    {
        $this->container['order_created_event'] = $order_created_event;

        return $this;
    }

    /**
     * Gets order_rating_updated_event
     *
     * @return \Flipdish\\Client\Models\OrderRatingUpdatedEvent[]
     */
    public function getOrderRatingUpdatedEvent()
    {
        return $this->container['order_rating_updated_event'];
    }

    /**
     * Sets order_rating_updated_event
     *
     * @param \Flipdish\\Client\Models\OrderRatingUpdatedEvent[] $order_rating_updated_event Order rating updated events
     *
     * @return $this
     */
    public function setOrderRatingUpdatedEvent($order_rating_updated_event)
    {
        $this->container['order_rating_updated_event'] = $order_rating_updated_event;

        return $this;
    }

    /**
     * Gets order_refunded_event
     *
     * @return \Flipdish\\Client\Models\OrderRefundedEvent[]
     */
    public function getOrderRefundedEvent()
    {
        return $this->container['order_refunded_event'];
    }

    /**
     * Sets order_refunded_event
     *
     * @param \Flipdish\\Client\Models\OrderRefundedEvent[] $order_refunded_event Order refunded events
     *
     * @return $this
     */
    public function setOrderRefundedEvent($order_refunded_event)
    {
        $this->container['order_refunded_event'] = $order_refunded_event;

        return $this;
    }

    /**
     * Gets order_rejected_event
     *
     * @return \Flipdish\\Client\Models\OrderRejectedEvent[]
     */
    public function getOrderRejectedEvent()
    {
        return $this->container['order_rejected_event'];
    }

    /**
     * Sets order_rejected_event
     *
     * @param \Flipdish\\Client\Models\OrderRejectedEvent[] $order_rejected_event Order rejected events
     *
     * @return $this
     */
    public function setOrderRejectedEvent($order_rejected_event)
    {
        $this->container['order_rejected_event'] = $order_rejected_event;

        return $this;
    }

    /**
     * Gets order_tip_updated_event
     *
     * @return \Flipdish\\Client\Models\OrderTipUpdatedEvent[]
     */
    public function getOrderTipUpdatedEvent()
    {
        return $this->container['order_tip_updated_event'];
    }

    /**
     * Sets order_tip_updated_event
     *
     * @param \Flipdish\\Client\Models\OrderTipUpdatedEvent[] $order_tip_updated_event Order tip updated events
     *
     * @return $this
     */
    public function setOrderTipUpdatedEvent($order_tip_updated_event)
    {
        $this->container['order_tip_updated_event'] = $order_tip_updated_event;

        return $this;
    }

    /**
     * Gets order_terminal_notifications
     *
     * @return \Flipdish\\Client\Models\EmvNotificationEvent[]
     */
    public function getOrderTerminalNotifications()
    {
        return $this->container['order_terminal_notifications'];
    }

    /**
     * Sets order_terminal_notifications
     *
     * @param \Flipdish\\Client\Models\EmvNotificationEvent[] $order_terminal_notifications Order Terminal Notification events
     *
     * @return $this
     */
    public function setOrderTerminalNotifications($order_terminal_notifications)
    {
        $this->container['order_terminal_notifications'] = $order_terminal_notifications;

        return $this;
    }

    /**
     * Gets store_created_event
     *
     * @return \Flipdish\\Client\Models\StoreCreatedEvent[]
     */
    public function getStoreCreatedEvent()
    {
        return $this->container['store_created_event'];
    }

    /**
     * Sets store_created_event
     *
     * @param \Flipdish\\Client\Models\StoreCreatedEvent[] $store_created_event Store created events
     *
     * @return $this
     */
    public function setStoreCreatedEvent($store_created_event)
    {
        $this->container['store_created_event'] = $store_created_event;

        return $this;
    }

    /**
     * Gets store_deleted_event
     *
     * @return \Flipdish\\Client\Models\StoreDeletedEvent[]
     */
    public function getStoreDeletedEvent()
    {
        return $this->container['store_deleted_event'];
    }

    /**
     * Sets store_deleted_event
     *
     * @param \Flipdish\\Client\Models\StoreDeletedEvent[] $store_deleted_event Store deleted events
     *
     * @return $this
     */
    public function setStoreDeletedEvent($store_deleted_event)
    {
        $this->container['store_deleted_event'] = $store_deleted_event;

        return $this;
    }

    /**
     * Gets store_address_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreAddressUpdatedEvent[]
     */
    public function getStoreAddressUpdatedEvent()
    {
        return $this->container['store_address_updated_event'];
    }

    /**
     * Sets store_address_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreAddressUpdatedEvent[] $store_address_updated_event Store address updated events
     *
     * @return $this
     */
    public function setStoreAddressUpdatedEvent($store_address_updated_event)
    {
        $this->container['store_address_updated_event'] = $store_address_updated_event;

        return $this;
    }

    /**
     * Gets store_kiosk_setting_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreKioskSettingUpdatedEvent[]
     */
    public function getStoreKioskSettingUpdatedEvent()
    {
        return $this->container['store_kiosk_setting_updated_event'];
    }

    /**
     * Sets store_kiosk_setting_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreKioskSettingUpdatedEvent[] $store_kiosk_setting_updated_event Store kiosk setting updated events
     *
     * @return $this
     */
    public function setStoreKioskSettingUpdatedEvent($store_kiosk_setting_updated_event)
    {
        $this->container['store_kiosk_setting_updated_event'] = $store_kiosk_setting_updated_event;

        return $this;
    }

    /**
     * Gets delivery_zone_created_event
     *
     * @return \Flipdish\\Client\Models\DeliveryZoneCreatedEvent[]
     */
    public function getDeliveryZoneCreatedEvent()
    {
        return $this->container['delivery_zone_created_event'];
    }

    /**
     * Sets delivery_zone_created_event
     *
     * @param \Flipdish\\Client\Models\DeliveryZoneCreatedEvent[] $delivery_zone_created_event Store delivery zone created events
     *
     * @return $this
     */
    public function setDeliveryZoneCreatedEvent($delivery_zone_created_event)
    {
        $this->container['delivery_zone_created_event'] = $delivery_zone_created_event;

        return $this;
    }

    /**
     * Gets delivery_zone_updated_event
     *
     * @return \Flipdish\\Client\Models\DeliveryZoneUpdatedEvent[]
     */
    public function getDeliveryZoneUpdatedEvent()
    {
        return $this->container['delivery_zone_updated_event'];
    }

    /**
     * Sets delivery_zone_updated_event
     *
     * @param \Flipdish\\Client\Models\DeliveryZoneUpdatedEvent[] $delivery_zone_updated_event Store delivery zone updated events
     *
     * @return $this
     */
    public function setDeliveryZoneUpdatedEvent($delivery_zone_updated_event)
    {
        $this->container['delivery_zone_updated_event'] = $delivery_zone_updated_event;

        return $this;
    }

    /**
     * Gets delivery_zone_deleted_event
     *
     * @return \Flipdish\\Client\Models\DeliveryZoneDeletedEvent[]
     */
    public function getDeliveryZoneDeletedEvent()
    {
        return $this->container['delivery_zone_deleted_event'];
    }

    /**
     * Sets delivery_zone_deleted_event
     *
     * @param \Flipdish\\Client\Models\DeliveryZoneDeletedEvent[] $delivery_zone_deleted_event Store delivery zone deleted events
     *
     * @return $this
     */
    public function setDeliveryZoneDeletedEvent($delivery_zone_deleted_event)
    {
        $this->container['delivery_zone_deleted_event'] = $delivery_zone_deleted_event;

        return $this;
    }

    /**
     * Gets store_opening_hours_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreOpeningHoursUpdatedEvent[]
     */
    public function getStoreOpeningHoursUpdatedEvent()
    {
        return $this->container['store_opening_hours_updated_event'];
    }

    /**
     * Sets store_opening_hours_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreOpeningHoursUpdatedEvent[] $store_opening_hours_updated_event Store opening hours updated events
     *
     * @return $this
     */
    public function setStoreOpeningHoursUpdatedEvent($store_opening_hours_updated_event)
    {
        $this->container['store_opening_hours_updated_event'] = $store_opening_hours_updated_event;

        return $this;
    }

    /**
     * Gets store_menu_assigned_event
     *
     * @return \Flipdish\\Client\Models\StoreMenuAssignedEvent[]
     */
    public function getStoreMenuAssignedEvent()
    {
        return $this->container['store_menu_assigned_event'];
    }

    /**
     * Sets store_menu_assigned_event
     *
     * @param \Flipdish\\Client\Models\StoreMenuAssignedEvent[] $store_menu_assigned_event Store opening hours updated events
     *
     * @return $this
     */
    public function setStoreMenuAssignedEvent($store_menu_assigned_event)
    {
        $this->container['store_menu_assigned_event'] = $store_menu_assigned_event;

        return $this;
    }

    /**
     * Gets store_business_hours_override_created_event
     *
     * @return \Flipdish\\Client\Models\StoreBusinessHoursOverrideCreatedEvent[]
     */
    public function getStoreBusinessHoursOverrideCreatedEvent()
    {
        return $this->container['store_business_hours_override_created_event'];
    }

    /**
     * Sets store_business_hours_override_created_event
     *
     * @param \Flipdish\\Client\Models\StoreBusinessHoursOverrideCreatedEvent[] $store_business_hours_override_created_event Store business hours override created events
     *
     * @return $this
     */
    public function setStoreBusinessHoursOverrideCreatedEvent($store_business_hours_override_created_event)
    {
        $this->container['store_business_hours_override_created_event'] = $store_business_hours_override_created_event;

        return $this;
    }

    /**
     * Gets store_business_hours_override_deleted_event
     *
     * @return \Flipdish\\Client\Models\StoreBusinessHoursOverrideDeletedEvent[]
     */
    public function getStoreBusinessHoursOverrideDeletedEvent()
    {
        return $this->container['store_business_hours_override_deleted_event'];
    }

    /**
     * Sets store_business_hours_override_deleted_event
     *
     * @param \Flipdish\\Client\Models\StoreBusinessHoursOverrideDeletedEvent[] $store_business_hours_override_deleted_event Store business hours override deleted events
     *
     * @return $this
     */
    public function setStoreBusinessHoursOverrideDeletedEvent($store_business_hours_override_deleted_event)
    {
        $this->container['store_business_hours_override_deleted_event'] = $store_business_hours_override_deleted_event;

        return $this;
    }

    /**
     * Gets store_archived_event
     *
     * @return \Flipdish\\Client\Models\StoreArchivedEvent[]
     */
    public function getStoreArchivedEvent()
    {
        return $this->container['store_archived_event'];
    }

    /**
     * Sets store_archived_event
     *
     * @param \Flipdish\\Client\Models\StoreArchivedEvent[] $store_archived_event Store archived events
     *
     * @return $this
     */
    public function setStoreArchivedEvent($store_archived_event)
    {
        $this->container['store_archived_event'] = $store_archived_event;

        return $this;
    }

    /**
     * Gets store_unarchived_event
     *
     * @return \Flipdish\\Client\Models\StoreUnarchivedEvent[]
     */
    public function getStoreUnarchivedEvent()
    {
        return $this->container['store_unarchived_event'];
    }

    /**
     * Sets store_unarchived_event
     *
     * @param \Flipdish\\Client\Models\StoreUnarchivedEvent[] $store_unarchived_event Store unarchived events
     *
     * @return $this
     */
    public function setStoreUnarchivedEvent($store_unarchived_event)
    {
        $this->container['store_unarchived_event'] = $store_unarchived_event;

        return $this;
    }

    /**
     * Gets store_published_event
     *
     * @return \Flipdish\\Client\Models\StorePublishedEvent[]
     */
    public function getStorePublishedEvent()
    {
        return $this->container['store_published_event'];
    }

    /**
     * Sets store_published_event
     *
     * @param \Flipdish\\Client\Models\StorePublishedEvent[] $store_published_event Store published events
     *
     * @return $this
     */
    public function setStorePublishedEvent($store_published_event)
    {
        $this->container['store_published_event'] = $store_published_event;

        return $this;
    }

    /**
     * Gets store_unpublished_event
     *
     * @return \Flipdish\\Client\Models\StoreUnpublishedEvent[]
     */
    public function getStoreUnpublishedEvent()
    {
        return $this->container['store_unpublished_event'];
    }

    /**
     * Sets store_unpublished_event
     *
     * @param \Flipdish\\Client\Models\StoreUnpublishedEvent[] $store_unpublished_event Store unpublished events
     *
     * @return $this
     */
    public function setStoreUnpublishedEvent($store_unpublished_event)
    {
        $this->container['store_unpublished_event'] = $store_unpublished_event;

        return $this;
    }

    /**
     * Gets store_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreUpdatedEvent[]
     */
    public function getStoreUpdatedEvent()
    {
        return $this->container['store_updated_event'];
    }

    /**
     * Sets store_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreUpdatedEvent[] $store_updated_event Store updated events
     *
     * @return $this
     */
    public function setStoreUpdatedEvent($store_updated_event)
    {
        $this->container['store_updated_event'] = $store_updated_event;

        return $this;
    }

    /**
     * Gets store_pre_order_config_updated_event
     *
     * @return \Flipdish\\Client\Models\StorePreOrderConfigUpdatedEvent[]
     */
    public function getStorePreOrderConfigUpdatedEvent()
    {
        return $this->container['store_pre_order_config_updated_event'];
    }

    /**
     * Sets store_pre_order_config_updated_event
     *
     * @param \Flipdish\\Client\Models\StorePreOrderConfigUpdatedEvent[] $store_pre_order_config_updated_event Store updated events
     *
     * @return $this
     */
    public function setStorePreOrderConfigUpdatedEvent($store_pre_order_config_updated_event)
    {
        $this->container['store_pre_order_config_updated_event'] = $store_pre_order_config_updated_event;

        return $this;
    }

    /**
     * Gets store_logo_created_event
     *
     * @return \Flipdish\\Client\Models\StoreLogoCreatedEvent[]
     */
    public function getStoreLogoCreatedEvent()
    {
        return $this->container['store_logo_created_event'];
    }

    /**
     * Sets store_logo_created_event
     *
     * @param \Flipdish\\Client\Models\StoreLogoCreatedEvent[] $store_logo_created_event Store logo created events
     *
     * @return $this
     */
    public function setStoreLogoCreatedEvent($store_logo_created_event)
    {
        $this->container['store_logo_created_event'] = $store_logo_created_event;

        return $this;
    }

    /**
     * Gets store_logo_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreLogoUpdatedEvent[]
     */
    public function getStoreLogoUpdatedEvent()
    {
        return $this->container['store_logo_updated_event'];
    }

    /**
     * Sets store_logo_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreLogoUpdatedEvent[] $store_logo_updated_event Store logo updated events
     *
     * @return $this
     */
    public function setStoreLogoUpdatedEvent($store_logo_updated_event)
    {
        $this->container['store_logo_updated_event'] = $store_logo_updated_event;

        return $this;
    }

    /**
     * Gets store_logo_deleted_event
     *
     * @return \Flipdish\\Client\Models\StoreLogoDeletedEvent[]
     */
    public function getStoreLogoDeletedEvent()
    {
        return $this->container['store_logo_deleted_event'];
    }

    /**
     * Sets store_logo_deleted_event
     *
     * @param \Flipdish\\Client\Models\StoreLogoDeletedEvent[] $store_logo_deleted_event Store logo deleted events
     *
     * @return $this
     */
    public function setStoreLogoDeletedEvent($store_logo_deleted_event)
    {
        $this->container['store_logo_deleted_event'] = $store_logo_deleted_event;

        return $this;
    }

    /**
     * Gets menu_created_event
     *
     * @return \Flipdish\\Client\Models\MenuCreatedEvent[]
     */
    public function getMenuCreatedEvent()
    {
        return $this->container['menu_created_event'];
    }

    /**
     * Sets menu_created_event
     *
     * @param \Flipdish\\Client\Models\MenuCreatedEvent[] $menu_created_event Menu created events
     *
     * @return $this
     */
    public function setMenuCreatedEvent($menu_created_event)
    {
        $this->container['menu_created_event'] = $menu_created_event;

        return $this;
    }

    /**
     * Gets menu_updated_event
     *
     * @return \Flipdish\\Client\Models\MenuUpdatedEvent[]
     */
    public function getMenuUpdatedEvent()
    {
        return $this->container['menu_updated_event'];
    }

    /**
     * Sets menu_updated_event
     *
     * @param \Flipdish\\Client\Models\MenuUpdatedEvent[] $menu_updated_event Menu updated events
     *
     * @return $this
     */
    public function setMenuUpdatedEvent($menu_updated_event)
    {
        $this->container['menu_updated_event'] = $menu_updated_event;

        return $this;
    }

    /**
     * Gets menu_uploaded_event
     *
     * @return \Flipdish\\Client\Models\MenuUploadedEvent[]
     */
    public function getMenuUploadedEvent()
    {
        return $this->container['menu_uploaded_event'];
    }

    /**
     * Sets menu_uploaded_event
     *
     * @param \Flipdish\\Client\Models\MenuUploadedEvent[] $menu_uploaded_event Menu uploaded events
     *
     * @return $this
     */
    public function setMenuUploadedEvent($menu_uploaded_event)
    {
        $this->container['menu_uploaded_event'] = $menu_uploaded_event;

        return $this;
    }

    /**
     * Gets menu_bulk_edit_event
     *
     * @return \Flipdish\\Client\Models\MenuBulkEditEvent[]
     */
    public function getMenuBulkEditEvent()
    {
        return $this->container['menu_bulk_edit_event'];
    }

    /**
     * Sets menu_bulk_edit_event
     *
     * @param \Flipdish\\Client\Models\MenuBulkEditEvent[] $menu_bulk_edit_event Menu bulk events
     *
     * @return $this
     */
    public function setMenuBulkEditEvent($menu_bulk_edit_event)
    {
        $this->container['menu_bulk_edit_event'] = $menu_bulk_edit_event;

        return $this;
    }

    /**
     * Gets menu_section_created_event
     *
     * @return \Flipdish\\Client\Models\MenuSectionCreatedEvent[]
     */
    public function getMenuSectionCreatedEvent()
    {
        return $this->container['menu_section_created_event'];
    }

    /**
     * Sets menu_section_created_event
     *
     * @param \Flipdish\\Client\Models\MenuSectionCreatedEvent[] $menu_section_created_event Menu section created events
     *
     * @return $this
     */
    public function setMenuSectionCreatedEvent($menu_section_created_event)
    {
        $this->container['menu_section_created_event'] = $menu_section_created_event;

        return $this;
    }

    /**
     * Gets menu_section_updated_event
     *
     * @return \Flipdish\\Client\Models\MenuSectionUpdatedEvent[]
     */
    public function getMenuSectionUpdatedEvent()
    {
        return $this->container['menu_section_updated_event'];
    }

    /**
     * Sets menu_section_updated_event
     *
     * @param \Flipdish\\Client\Models\MenuSectionUpdatedEvent[] $menu_section_updated_event Menu section updated events
     *
     * @return $this
     */
    public function setMenuSectionUpdatedEvent($menu_section_updated_event)
    {
        $this->container['menu_section_updated_event'] = $menu_section_updated_event;

        return $this;
    }

    /**
     * Gets menu_section_deleted_event
     *
     * @return \Flipdish\\Client\Models\MenuSectionDeletedEvent[]
     */
    public function getMenuSectionDeletedEvent()
    {
        return $this->container['menu_section_deleted_event'];
    }

    /**
     * Sets menu_section_deleted_event
     *
     * @param \Flipdish\\Client\Models\MenuSectionDeletedEvent[] $menu_section_deleted_event Menu section deleted events
     *
     * @return $this
     */
    public function setMenuSectionDeletedEvent($menu_section_deleted_event)
    {
        $this->container['menu_section_deleted_event'] = $menu_section_deleted_event;

        return $this;
    }

    /**
     * Gets menu_section_item_created_event
     *
     * @return \Flipdish\\Client\Models\MenuSectionItemCreatedEvent[]
     */
    public function getMenuSectionItemCreatedEvent()
    {
        return $this->container['menu_section_item_created_event'];
    }

    /**
     * Sets menu_section_item_created_event
     *
     * @param \Flipdish\\Client\Models\MenuSectionItemCreatedEvent[] $menu_section_item_created_event Menu section item created events
     *
     * @return $this
     */
    public function setMenuSectionItemCreatedEvent($menu_section_item_created_event)
    {
        $this->container['menu_section_item_created_event'] = $menu_section_item_created_event;

        return $this;
    }

    /**
     * Gets menu_section_item_updated_event
     *
     * @return \Flipdish\\Client\Models\MenuSectionItemUpdatedEvent[]
     */
    public function getMenuSectionItemUpdatedEvent()
    {
        return $this->container['menu_section_item_updated_event'];
    }

    /**
     * Sets menu_section_item_updated_event
     *
     * @param \Flipdish\\Client\Models\MenuSectionItemUpdatedEvent[] $menu_section_item_updated_event Menu section item updated events
     *
     * @return $this
     */
    public function setMenuSectionItemUpdatedEvent($menu_section_item_updated_event)
    {
        $this->container['menu_section_item_updated_event'] = $menu_section_item_updated_event;

        return $this;
    }

    /**
     * Gets menu_section_item_deleted_event
     *
     * @return \Flipdish\\Client\Models\MenuSectionItemDeletedEvent[]
     */
    public function getMenuSectionItemDeletedEvent()
    {
        return $this->container['menu_section_item_deleted_event'];
    }

    /**
     * Sets menu_section_item_deleted_event
     *
     * @param \Flipdish\\Client\Models\MenuSectionItemDeletedEvent[] $menu_section_item_deleted_event Menu section item deleted events
     *
     * @return $this
     */
    public function setMenuSectionItemDeletedEvent($menu_section_item_deleted_event)
    {
        $this->container['menu_section_item_deleted_event'] = $menu_section_item_deleted_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_created_event
     *
     * @return \Flipdish\\Client\Models\MenuItemOptionSetCreatedEvent[]
     */
    public function getMenuItemOptionSetCreatedEvent()
    {
        return $this->container['menu_item_option_set_created_event'];
    }

    /**
     * Sets menu_item_option_set_created_event
     *
     * @param \Flipdish\\Client\Models\MenuItemOptionSetCreatedEvent[] $menu_item_option_set_created_event Menu item option set created events
     *
     * @return $this
     */
    public function setMenuItemOptionSetCreatedEvent($menu_item_option_set_created_event)
    {
        $this->container['menu_item_option_set_created_event'] = $menu_item_option_set_created_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_updated_event
     *
     * @return \Flipdish\\Client\Models\MenuItemOptionSetUpdatedEvent[]
     */
    public function getMenuItemOptionSetUpdatedEvent()
    {
        return $this->container['menu_item_option_set_updated_event'];
    }

    /**
     * Sets menu_item_option_set_updated_event
     *
     * @param \Flipdish\\Client\Models\MenuItemOptionSetUpdatedEvent[] $menu_item_option_set_updated_event Menu item option set  updated events
     *
     * @return $this
     */
    public function setMenuItemOptionSetUpdatedEvent($menu_item_option_set_updated_event)
    {
        $this->container['menu_item_option_set_updated_event'] = $menu_item_option_set_updated_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_deleted_event
     *
     * @return \Flipdish\\Client\Models\MenuItemOptionSetDeletedEvent[]
     */
    public function getMenuItemOptionSetDeletedEvent()
    {
        return $this->container['menu_item_option_set_deleted_event'];
    }

    /**
     * Sets menu_item_option_set_deleted_event
     *
     * @param \Flipdish\\Client\Models\MenuItemOptionSetDeletedEvent[] $menu_item_option_set_deleted_event Menu item option set deleted events
     *
     * @return $this
     */
    public function setMenuItemOptionSetDeletedEvent($menu_item_option_set_deleted_event)
    {
        $this->container['menu_item_option_set_deleted_event'] = $menu_item_option_set_deleted_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_item_created_event
     *
     * @return \Flipdish\\Client\Models\MenuItemOptionSetItemCreatedEvent[]
     */
    public function getMenuItemOptionSetItemCreatedEvent()
    {
        return $this->container['menu_item_option_set_item_created_event'];
    }

    /**
     * Sets menu_item_option_set_item_created_event
     *
     * @param \Flipdish\\Client\Models\MenuItemOptionSetItemCreatedEvent[] $menu_item_option_set_item_created_event Menu item option set item created events
     *
     * @return $this
     */
    public function setMenuItemOptionSetItemCreatedEvent($menu_item_option_set_item_created_event)
    {
        $this->container['menu_item_option_set_item_created_event'] = $menu_item_option_set_item_created_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_item_updated_event
     *
     * @return \Flipdish\\Client\Models\MenuItemOptionSetItemUpdatedEvent[]
     */
    public function getMenuItemOptionSetItemUpdatedEvent()
    {
        return $this->container['menu_item_option_set_item_updated_event'];
    }

    /**
     * Sets menu_item_option_set_item_updated_event
     *
     * @param \Flipdish\\Client\Models\MenuItemOptionSetItemUpdatedEvent[] $menu_item_option_set_item_updated_event Menu item option set item updated events
     *
     * @return $this
     */
    public function setMenuItemOptionSetItemUpdatedEvent($menu_item_option_set_item_updated_event)
    {
        $this->container['menu_item_option_set_item_updated_event'] = $menu_item_option_set_item_updated_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_item_deleted_event
     *
     * @return \Flipdish\\Client\Models\MenuItemOptionSetItemDeletedEvent[]
     */
    public function getMenuItemOptionSetItemDeletedEvent()
    {
        return $this->container['menu_item_option_set_item_deleted_event'];
    }

    /**
     * Sets menu_item_option_set_item_deleted_event
     *
     * @param \Flipdish\\Client\Models\MenuItemOptionSetItemDeletedEvent[] $menu_item_option_set_item_deleted_event Menu item option set item deleted events
     *
     * @return $this
     */
    public function setMenuItemOptionSetItemDeletedEvent($menu_item_option_set_item_deleted_event)
    {
        $this->container['menu_item_option_set_item_deleted_event'] = $menu_item_option_set_item_deleted_event;

        return $this;
    }

    /**
     * Gets menu_checkpoint_created_event
     *
     * @return \Flipdish\\Client\Models\MenuCheckpointCreatedEvent[]
     */
    public function getMenuCheckpointCreatedEvent()
    {
        return $this->container['menu_checkpoint_created_event'];
    }

    /**
     * Sets menu_checkpoint_created_event
     *
     * @param \Flipdish\\Client\Models\MenuCheckpointCreatedEvent[] $menu_checkpoint_created_event Menu checkpoint created event
     *
     * @return $this
     */
    public function setMenuCheckpointCreatedEvent($menu_checkpoint_created_event)
    {
        $this->container['menu_checkpoint_created_event'] = $menu_checkpoint_created_event;

        return $this;
    }

    /**
     * Gets store_group_created_event
     *
     * @return \Flipdish\\Client\Models\StoreGroupCreatedEvent[]
     */
    public function getStoreGroupCreatedEvent()
    {
        return $this->container['store_group_created_event'];
    }

    /**
     * Sets store_group_created_event
     *
     * @param \Flipdish\\Client\Models\StoreGroupCreatedEvent[] $store_group_created_event Store group created events
     *
     * @return $this
     */
    public function setStoreGroupCreatedEvent($store_group_created_event)
    {
        $this->container['store_group_created_event'] = $store_group_created_event;

        return $this;
    }

    /**
     * Gets store_group_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreGroupUpdatedEvent[]
     */
    public function getStoreGroupUpdatedEvent()
    {
        return $this->container['store_group_updated_event'];
    }

    /**
     * Sets store_group_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreGroupUpdatedEvent[] $store_group_updated_event Store group updated events
     *
     * @return $this
     */
    public function setStoreGroupUpdatedEvent($store_group_updated_event)
    {
        $this->container['store_group_updated_event'] = $store_group_updated_event;

        return $this;
    }

    /**
     * Gets store_group_deleted_event
     *
     * @return \Flipdish\\Client\Models\StoreGroupDeletedEvent[]
     */
    public function getStoreGroupDeletedEvent()
    {
        return $this->container['store_group_deleted_event'];
    }

    /**
     * Sets store_group_deleted_event
     *
     * @param \Flipdish\\Client\Models\StoreGroupDeletedEvent[] $store_group_deleted_event Store group deleted events
     *
     * @return $this
     */
    public function setStoreGroupDeletedEvent($store_group_deleted_event)
    {
        $this->container['store_group_deleted_event'] = $store_group_deleted_event;

        return $this;
    }

    /**
     * Gets customer_created_event
     *
     * @return \Flipdish\\Client\Models\CustomerCreatedEvent[]
     */
    public function getCustomerCreatedEvent()
    {
        return $this->container['customer_created_event'];
    }

    /**
     * Sets customer_created_event
     *
     * @param \Flipdish\\Client\Models\CustomerCreatedEvent[] $customer_created_event Customer created events
     *
     * @return $this
     */
    public function setCustomerCreatedEvent($customer_created_event)
    {
        $this->container['customer_created_event'] = $customer_created_event;

        return $this;
    }

    /**
     * Gets customer_updated_event
     *
     * @return \Flipdish\\Client\Models\CustomerUpdatedEvent[]
     */
    public function getCustomerUpdatedEvent()
    {
        return $this->container['customer_updated_event'];
    }

    /**
     * Sets customer_updated_event
     *
     * @param \Flipdish\\Client\Models\CustomerUpdatedEvent[] $customer_updated_event Customer updated events
     *
     * @return $this
     */
    public function setCustomerUpdatedEvent($customer_updated_event)
    {
        $this->container['customer_updated_event'] = $customer_updated_event;

        return $this;
    }

    /**
     * Gets customer_consent_updated_event
     *
     * @return \Flipdish\\Client\Models\CustomerConsentUpdatedEvent[]
     */
    public function getCustomerConsentUpdatedEvent()
    {
        return $this->container['customer_consent_updated_event'];
    }

    /**
     * Sets customer_consent_updated_event
     *
     * @param \Flipdish\\Client\Models\CustomerConsentUpdatedEvent[] $customer_consent_updated_event Customer consent updated events
     *
     * @return $this
     */
    public function setCustomerConsentUpdatedEvent($customer_consent_updated_event)
    {
        $this->container['customer_consent_updated_event'] = $customer_consent_updated_event;

        return $this;
    }

    /**
     * Gets webhook_subscription_created_event
     *
     * @return \Flipdish\\Client\Models\WebhookSubscriptionCreatedEvent[]
     */
    public function getWebhookSubscriptionCreatedEvent()
    {
        return $this->container['webhook_subscription_created_event'];
    }

    /**
     * Sets webhook_subscription_created_event
     *
     * @param \Flipdish\\Client\Models\WebhookSubscriptionCreatedEvent[] $webhook_subscription_created_event Webhook subscription created events
     *
     * @return $this
     */
    public function setWebhookSubscriptionCreatedEvent($webhook_subscription_created_event)
    {
        $this->container['webhook_subscription_created_event'] = $webhook_subscription_created_event;

        return $this;
    }

    /**
     * Gets webhook_subscription_updated_event
     *
     * @return \Flipdish\\Client\Models\WebhookSubscriptionUpdatedEvent[]
     */
    public function getWebhookSubscriptionUpdatedEvent()
    {
        return $this->container['webhook_subscription_updated_event'];
    }

    /**
     * Sets webhook_subscription_updated_event
     *
     * @param \Flipdish\\Client\Models\WebhookSubscriptionUpdatedEvent[] $webhook_subscription_updated_event Webhook subscription updated events
     *
     * @return $this
     */
    public function setWebhookSubscriptionUpdatedEvent($webhook_subscription_updated_event)
    {
        $this->container['webhook_subscription_updated_event'] = $webhook_subscription_updated_event;

        return $this;
    }

    /**
     * Gets webhook_subscription_deleted_event
     *
     * @return \Flipdish\\Client\Models\WebhookSubscriptionDeletedEvent[]
     */
    public function getWebhookSubscriptionDeletedEvent()
    {
        return $this->container['webhook_subscription_deleted_event'];
    }

    /**
     * Sets webhook_subscription_deleted_event
     *
     * @param \Flipdish\\Client\Models\WebhookSubscriptionDeletedEvent[] $webhook_subscription_deleted_event Webhook subscription deleted events
     *
     * @return $this
     */
    public function setWebhookSubscriptionDeletedEvent($webhook_subscription_deleted_event)
    {
        $this->container['webhook_subscription_deleted_event'] = $webhook_subscription_deleted_event;

        return $this;
    }

    /**
     * Gets printer_turned_on_event
     *
     * @return \Flipdish\\Client\Models\PrinterTurnedOnEvent[]
     */
    public function getPrinterTurnedOnEvent()
    {
        return $this->container['printer_turned_on_event'];
    }

    /**
     * Sets printer_turned_on_event
     *
     * @param \Flipdish\\Client\Models\PrinterTurnedOnEvent[] $printer_turned_on_event Printer turned ON event
     *
     * @return $this
     */
    public function setPrinterTurnedOnEvent($printer_turned_on_event)
    {
        $this->container['printer_turned_on_event'] = $printer_turned_on_event;

        return $this;
    }

    /**
     * Gets printer_turned_off_event
     *
     * @return \Flipdish\\Client\Models\PrinterTurnedOffEvent[]
     */
    public function getPrinterTurnedOffEvent()
    {
        return $this->container['printer_turned_off_event'];
    }

    /**
     * Sets printer_turned_off_event
     *
     * @param \Flipdish\\Client\Models\PrinterTurnedOffEvent[] $printer_turned_off_event Printer turned OFF event
     *
     * @return $this
     */
    public function setPrinterTurnedOffEvent($printer_turned_off_event)
    {
        $this->container['printer_turned_off_event'] = $printer_turned_off_event;

        return $this;
    }

    /**
     * Gets printer_assigned_to_store_event
     *
     * @return \Flipdish\\Client\Models\PrinterAssignedToStoreEvent[]
     */
    public function getPrinterAssignedToStoreEvent()
    {
        return $this->container['printer_assigned_to_store_event'];
    }

    /**
     * Sets printer_assigned_to_store_event
     *
     * @param \Flipdish\\Client\Models\PrinterAssignedToStoreEvent[] $printer_assigned_to_store_event Printer assigned to store event
     *
     * @return $this
     */
    public function setPrinterAssignedToStoreEvent($printer_assigned_to_store_event)
    {
        $this->container['printer_assigned_to_store_event'] = $printer_assigned_to_store_event;

        return $this;
    }

    /**
     * Gets printer_unassigned_from_store_event
     *
     * @return \Flipdish\\Client\Models\PrinterUnassignedFromStoreEvent[]
     */
    public function getPrinterUnassignedFromStoreEvent()
    {
        return $this->container['printer_unassigned_from_store_event'];
    }

    /**
     * Sets printer_unassigned_from_store_event
     *
     * @param \Flipdish\\Client\Models\PrinterUnassignedFromStoreEvent[] $printer_unassigned_from_store_event Printer unassigned from store event
     *
     * @return $this
     */
    public function setPrinterUnassignedFromStoreEvent($printer_unassigned_from_store_event)
    {
        $this->container['printer_unassigned_from_store_event'] = $printer_unassigned_from_store_event;

        return $this;
    }

    /**
     * Gets phone_call_started_event
     *
     * @return \Flipdish\\Client\Models\PhoneCallStartedEvent[]
     */
    public function getPhoneCallStartedEvent()
    {
        return $this->container['phone_call_started_event'];
    }

    /**
     * Sets phone_call_started_event
     *
     * @param \Flipdish\\Client\Models\PhoneCallStartedEvent[] $phone_call_started_event Phone call started event
     *
     * @return $this
     */
    public function setPhoneCallStartedEvent($phone_call_started_event)
    {
        $this->container['phone_call_started_event'] = $phone_call_started_event;

        return $this;
    }

    /**
     * Gets phone_call_ended_event
     *
     * @return \Flipdish\\Client\Models\PhoneCallEndedEvent[]
     */
    public function getPhoneCallEndedEvent()
    {
        return $this->container['phone_call_ended_event'];
    }

    /**
     * Sets phone_call_ended_event
     *
     * @param \Flipdish\\Client\Models\PhoneCallEndedEvent[] $phone_call_ended_event Phone call ended event
     *
     * @return $this
     */
    public function setPhoneCallEndedEvent($phone_call_ended_event)
    {
        $this->container['phone_call_ended_event'] = $phone_call_ended_event;

        return $this;
    }

    /**
     * Gets loyalty_campaign_created_event
     *
     * @return \Flipdish\\Client\Models\LoyaltyCampaignCreatedEvent[]
     */
    public function getLoyaltyCampaignCreatedEvent()
    {
        return $this->container['loyalty_campaign_created_event'];
    }

    /**
     * Sets loyalty_campaign_created_event
     *
     * @param \Flipdish\\Client\Models\LoyaltyCampaignCreatedEvent[] $loyalty_campaign_created_event Loyalty campaign created event
     *
     * @return $this
     */
    public function setLoyaltyCampaignCreatedEvent($loyalty_campaign_created_event)
    {
        $this->container['loyalty_campaign_created_event'] = $loyalty_campaign_created_event;

        return $this;
    }

    /**
     * Gets loyalty_campaign_deleted_event
     *
     * @return \Flipdish\\Client\Models\LoyaltyCampaignDeletedEvent[]
     */
    public function getLoyaltyCampaignDeletedEvent()
    {
        return $this->container['loyalty_campaign_deleted_event'];
    }

    /**
     * Sets loyalty_campaign_deleted_event
     *
     * @param \Flipdish\\Client\Models\LoyaltyCampaignDeletedEvent[] $loyalty_campaign_deleted_event Loyalty campaign deleted event
     *
     * @return $this
     */
    public function setLoyaltyCampaignDeletedEvent($loyalty_campaign_deleted_event)
    {
        $this->container['loyalty_campaign_deleted_event'] = $loyalty_campaign_deleted_event;

        return $this;
    }

    /**
     * Gets loyalty_campaign_updated_event
     *
     * @return \Flipdish\\Client\Models\LoyaltyCampaignUpdatedEvent[]
     */
    public function getLoyaltyCampaignUpdatedEvent()
    {
        return $this->container['loyalty_campaign_updated_event'];
    }

    /**
     * Sets loyalty_campaign_updated_event
     *
     * @param \Flipdish\\Client\Models\LoyaltyCampaignUpdatedEvent[] $loyalty_campaign_updated_event Loyalty campaign updated event
     *
     * @return $this
     */
    public function setLoyaltyCampaignUpdatedEvent($loyalty_campaign_updated_event)
    {
        $this->container['loyalty_campaign_updated_event'] = $loyalty_campaign_updated_event;

        return $this;
    }

    /**
     * Gets retention_campaign_created_event
     *
     * @return \Flipdish\\Client\Models\RetentionCampaignCreatedEvent[]
     */
    public function getRetentionCampaignCreatedEvent()
    {
        return $this->container['retention_campaign_created_event'];
    }

    /**
     * Sets retention_campaign_created_event
     *
     * @param \Flipdish\\Client\Models\RetentionCampaignCreatedEvent[] $retention_campaign_created_event Retention campaign created event
     *
     * @return $this
     */
    public function setRetentionCampaignCreatedEvent($retention_campaign_created_event)
    {
        $this->container['retention_campaign_created_event'] = $retention_campaign_created_event;

        return $this;
    }

    /**
     * Gets retention_campaign_deleted_event
     *
     * @return \Flipdish\\Client\Models\RetentionCampaignDeletedEvent[]
     */
    public function getRetentionCampaignDeletedEvent()
    {
        return $this->container['retention_campaign_deleted_event'];
    }

    /**
     * Sets retention_campaign_deleted_event
     *
     * @param \Flipdish\\Client\Models\RetentionCampaignDeletedEvent[] $retention_campaign_deleted_event Retention campaign deleted event
     *
     * @return $this
     */
    public function setRetentionCampaignDeletedEvent($retention_campaign_deleted_event)
    {
        $this->container['retention_campaign_deleted_event'] = $retention_campaign_deleted_event;

        return $this;
    }

    /**
     * Gets retention_campaign_updated_event
     *
     * @return \Flipdish\\Client\Models\RetentionCampaignUpdatedEvent[]
     */
    public function getRetentionCampaignUpdatedEvent()
    {
        return $this->container['retention_campaign_updated_event'];
    }

    /**
     * Sets retention_campaign_updated_event
     *
     * @param \Flipdish\\Client\Models\RetentionCampaignUpdatedEvent[] $retention_campaign_updated_event Retention campaign updated event
     *
     * @return $this
     */
    public function setRetentionCampaignUpdatedEvent($retention_campaign_updated_event)
    {
        $this->container['retention_campaign_updated_event'] = $retention_campaign_updated_event;

        return $this;
    }

    /**
     * Gets sms_received_event
     *
     * @return \Flipdish\\Client\Models\SmsReceivedEvent[]
     */
    public function getSmsReceivedEvent()
    {
        return $this->container['sms_received_event'];
    }

    /**
     * Sets sms_received_event
     *
     * @param \Flipdish\\Client\Models\SmsReceivedEvent[] $sms_received_event Sms received event
     *
     * @return $this
     */
    public function setSmsReceivedEvent($sms_received_event)
    {
        $this->container['sms_received_event'] = $sms_received_event;

        return $this;
    }

    /**
     * Gets user_login_event
     *
     * @return \Flipdish\\Client\Models\UserLoginEvent[]
     */
    public function getUserLoginEvent()
    {
        return $this->container['user_login_event'];
    }

    /**
     * Sets user_login_event
     *
     * @param \Flipdish\\Client\Models\UserLoginEvent[] $user_login_event User login event
     *
     * @return $this
     */
    public function setUserLoginEvent($user_login_event)
    {
        $this->container['user_login_event'] = $user_login_event;

        return $this;
    }

    /**
     * Gets user_created_event
     *
     * @return \Flipdish\\Client\Models\UserCreatedEvent[]
     */
    public function getUserCreatedEvent()
    {
        return $this->container['user_created_event'];
    }

    /**
     * Sets user_created_event
     *
     * @param \Flipdish\\Client\Models\UserCreatedEvent[] $user_created_event User created event
     *
     * @return $this
     */
    public function setUserCreatedEvent($user_created_event)
    {
        $this->container['user_created_event'] = $user_created_event;

        return $this;
    }

    /**
     * Gets user_updated_event
     *
     * @return \Flipdish\\Client\Models\UserUpdatedEvent[]
     */
    public function getUserUpdatedEvent()
    {
        return $this->container['user_updated_event'];
    }

    /**
     * Sets user_updated_event
     *
     * @param \Flipdish\\Client\Models\UserUpdatedEvent[] $user_updated_event User updated event
     *
     * @return $this
     */
    public function setUserUpdatedEvent($user_updated_event)
    {
        $this->container['user_updated_event'] = $user_updated_event;

        return $this;
    }

    /**
     * Gets user_deleted_event
     *
     * @return \Flipdish\\Client\Models\UserDeletedEvent[]
     */
    public function getUserDeletedEvent()
    {
        return $this->container['user_deleted_event'];
    }

    /**
     * Sets user_deleted_event
     *
     * @param \Flipdish\\Client\Models\UserDeletedEvent[] $user_deleted_event User deleted event
     *
     * @return $this
     */
    public function setUserDeletedEvent($user_deleted_event)
    {
        $this->container['user_deleted_event'] = $user_deleted_event;

        return $this;
    }

    /**
     * Gets user_created_password_event
     *
     * @return \Flipdish\\Client\Models\UserPasswordCreatedEvent[]
     */
    public function getUserCreatedPasswordEvent()
    {
        return $this->container['user_created_password_event'];
    }

    /**
     * Sets user_created_password_event
     *
     * @param \Flipdish\\Client\Models\UserPasswordCreatedEvent[] $user_created_password_event User password created event
     *
     * @return $this
     */
    public function setUserCreatedPasswordEvent($user_created_password_event)
    {
        $this->container['user_created_password_event'] = $user_created_password_event;

        return $this;
    }

    /**
     * Gets user_answered_signup_questions_event
     *
     * @return \Flipdish\\Client\Models\UserAnsweredSignupQuestionsEvent[]
     */
    public function getUserAnsweredSignupQuestionsEvent()
    {
        return $this->container['user_answered_signup_questions_event'];
    }

    /**
     * Sets user_answered_signup_questions_event
     *
     * @param \Flipdish\\Client\Models\UserAnsweredSignupQuestionsEvent[] $user_answered_signup_questions_event User answered signup questions event
     *
     * @return $this
     */
    public function setUserAnsweredSignupQuestionsEvent($user_answered_signup_questions_event)
    {
        $this->container['user_answered_signup_questions_event'] = $user_answered_signup_questions_event;

        return $this;
    }

    /**
     * Gets voucher_created_event
     *
     * @return \Flipdish\\Client\Models\VoucherCreatedEvent[]
     */
    public function getVoucherCreatedEvent()
    {
        return $this->container['voucher_created_event'];
    }

    /**
     * Sets voucher_created_event
     *
     * @param \Flipdish\\Client\Models\VoucherCreatedEvent[] $voucher_created_event Voucher created event
     *
     * @return $this
     */
    public function setVoucherCreatedEvent($voucher_created_event)
    {
        $this->container['voucher_created_event'] = $voucher_created_event;

        return $this;
    }

    /**
     * Gets voucher_updated_event
     *
     * @return \Flipdish\\Client\Models\VoucherUpdatedEvent[]
     */
    public function getVoucherUpdatedEvent()
    {
        return $this->container['voucher_updated_event'];
    }

    /**
     * Sets voucher_updated_event
     *
     * @param \Flipdish\\Client\Models\VoucherUpdatedEvent[] $voucher_updated_event Voucher updated event
     *
     * @return $this
     */
    public function setVoucherUpdatedEvent($voucher_updated_event)
    {
        $this->container['voucher_updated_event'] = $voucher_updated_event;

        return $this;
    }

    /**
     * Gets voucher_deleted_event
     *
     * @return \Flipdish\\Client\Models\VoucherDeletedEvent[]
     */
    public function getVoucherDeletedEvent()
    {
        return $this->container['voucher_deleted_event'];
    }

    /**
     * Sets voucher_deleted_event
     *
     * @param \Flipdish\\Client\Models\VoucherDeletedEvent[] $voucher_deleted_event Voucher deleted event
     *
     * @return $this
     */
    public function setVoucherDeletedEvent($voucher_deleted_event)
    {
        $this->container['voucher_deleted_event'] = $voucher_deleted_event;

        return $this;
    }

    /**
     * Gets teammate_invite_sent_event
     *
     * @return \Flipdish\\Client\Models\TeammateInviteSentEvent[]
     */
    public function getTeammateInviteSentEvent()
    {
        return $this->container['teammate_invite_sent_event'];
    }

    /**
     * Sets teammate_invite_sent_event
     *
     * @param \Flipdish\\Client\Models\TeammateInviteSentEvent[] $teammate_invite_sent_event Teammate invite sent event
     *
     * @return $this
     */
    public function setTeammateInviteSentEvent($teammate_invite_sent_event)
    {
        $this->container['teammate_invite_sent_event'] = $teammate_invite_sent_event;

        return $this;
    }

    /**
     * Gets teammate_invite_accepted_event
     *
     * @return \Flipdish\\Client\Models\TeammateInviteAcceptedEvent[]
     */
    public function getTeammateInviteAcceptedEvent()
    {
        return $this->container['teammate_invite_accepted_event'];
    }

    /**
     * Sets teammate_invite_accepted_event
     *
     * @param \Flipdish\\Client\Models\TeammateInviteAcceptedEvent[] $teammate_invite_accepted_event Teammate invite accepted event
     *
     * @return $this
     */
    public function setTeammateInviteAcceptedEvent($teammate_invite_accepted_event)
    {
        $this->container['teammate_invite_accepted_event'] = $teammate_invite_accepted_event;

        return $this;
    }

    /**
     * Gets teammate_updated_event
     *
     * @return \Flipdish\\Client\Models\TeammateUpdatedEvent[]
     */
    public function getTeammateUpdatedEvent()
    {
        return $this->container['teammate_updated_event'];
    }

    /**
     * Sets teammate_updated_event
     *
     * @param \Flipdish\\Client\Models\TeammateUpdatedEvent[] $teammate_updated_event Teammate updated event
     *
     * @return $this
     */
    public function setTeammateUpdatedEvent($teammate_updated_event)
    {
        $this->container['teammate_updated_event'] = $teammate_updated_event;

        return $this;
    }

    /**
     * Gets teammate_deleted_event
     *
     * @return \Flipdish\\Client\Models\TeammateDeletedEvent[]
     */
    public function getTeammateDeletedEvent()
    {
        return $this->container['teammate_deleted_event'];
    }

    /**
     * Sets teammate_deleted_event
     *
     * @param \Flipdish\\Client\Models\TeammateDeletedEvent[] $teammate_deleted_event Teammate deleted event
     *
     * @return $this
     */
    public function setTeammateDeletedEvent($teammate_deleted_event)
    {
        $this->container['teammate_deleted_event'] = $teammate_deleted_event;

        return $this;
    }

    /**
     * Gets bank_account_created_event
     *
     * @return \Flipdish\\Client\Models\BankAccountCreatedEvent[]
     */
    public function getBankAccountCreatedEvent()
    {
        return $this->container['bank_account_created_event'];
    }

    /**
     * Sets bank_account_created_event
     *
     * @param \Flipdish\\Client\Models\BankAccountCreatedEvent[] $bank_account_created_event Bank account created event
     *
     * @return $this
     */
    public function setBankAccountCreatedEvent($bank_account_created_event)
    {
        $this->container['bank_account_created_event'] = $bank_account_created_event;

        return $this;
    }

    /**
     * Gets bank_account_updated_event
     *
     * @return \Flipdish\\Client\Models\BankAccountUpdatedEvent[]
     */
    public function getBankAccountUpdatedEvent()
    {
        return $this->container['bank_account_updated_event'];
    }

    /**
     * Sets bank_account_updated_event
     *
     * @param \Flipdish\\Client\Models\BankAccountUpdatedEvent[] $bank_account_updated_event Bank account updated event
     *
     * @return $this
     */
    public function setBankAccountUpdatedEvent($bank_account_updated_event)
    {
        $this->container['bank_account_updated_event'] = $bank_account_updated_event;

        return $this;
    }

    /**
     * Gets bank_account_deleted_event
     *
     * @return \Flipdish\\Client\Models\BankAccountDeletedEvent[]
     */
    public function getBankAccountDeletedEvent()
    {
        return $this->container['bank_account_deleted_event'];
    }

    /**
     * Sets bank_account_deleted_event
     *
     * @param \Flipdish\\Client\Models\BankAccountDeletedEvent[] $bank_account_deleted_event Bank account updated event
     *
     * @return $this
     */
    public function setBankAccountDeletedEvent($bank_account_deleted_event)
    {
        $this->container['bank_account_deleted_event'] = $bank_account_deleted_event;

        return $this;
    }

    /**
     * Gets bank_account_assigned_event
     *
     * @return \Flipdish\\Client\Models\BankAccountAssignedEvent[]
     */
    public function getBankAccountAssignedEvent()
    {
        return $this->container['bank_account_assigned_event'];
    }

    /**
     * Sets bank_account_assigned_event
     *
     * @param \Flipdish\\Client\Models\BankAccountAssignedEvent[] $bank_account_assigned_event Bank account assigned event
     *
     * @return $this
     */
    public function setBankAccountAssignedEvent($bank_account_assigned_event)
    {
        $this->container['bank_account_assigned_event'] = $bank_account_assigned_event;

        return $this;
    }

    /**
     * Gets hydra_assigned_event
     *
     * @return \Flipdish\\Client\Models\HydraAssignedEvent[]
     */
    public function getHydraAssignedEvent()
    {
        return $this->container['hydra_assigned_event'];
    }

    /**
     * Sets hydra_assigned_event
     *
     * @param \Flipdish\\Client\Models\HydraAssignedEvent[] $hydra_assigned_event Hydra assigned event
     *
     * @return $this
     */
    public function setHydraAssignedEvent($hydra_assigned_event)
    {
        $this->container['hydra_assigned_event'] = $hydra_assigned_event;

        return $this;
    }

    /**
     * Gets hydra_request_reset_event
     *
     * @return \Flipdish\\Client\Models\HydraRequestResetEvent[]
     */
    public function getHydraRequestResetEvent()
    {
        return $this->container['hydra_request_reset_event'];
    }

    /**
     * Sets hydra_request_reset_event
     *
     * @param \Flipdish\\Client\Models\HydraRequestResetEvent[] $hydra_request_reset_event Hydra reset requested event
     *
     * @return $this
     */
    public function setHydraRequestResetEvent($hydra_request_reset_event)
    {
        $this->container['hydra_request_reset_event'] = $hydra_request_reset_event;

        return $this;
    }

    /**
     * Gets hydra_store_assigned_event
     *
     * @return \Flipdish\\Client\Models\HydraStoreAssignedEvent[]
     */
    public function getHydraStoreAssignedEvent()
    {
        return $this->container['hydra_store_assigned_event'];
    }

    /**
     * Sets hydra_store_assigned_event
     *
     * @param \Flipdish\\Client\Models\HydraStoreAssignedEvent[] $hydra_store_assigned_event Hydra store assigned event
     *
     * @return $this
     */
    public function setHydraStoreAssignedEvent($hydra_store_assigned_event)
    {
        $this->container['hydra_store_assigned_event'] = $hydra_store_assigned_event;

        return $this;
    }

    /**
     * Gets hydra_store_unassigned_event
     *
     * @return \Flipdish\\Client\Models\HydraStoreUnassignedEvent[]
     */
    public function getHydraStoreUnassignedEvent()
    {
        return $this->container['hydra_store_unassigned_event'];
    }

    /**
     * Sets hydra_store_unassigned_event
     *
     * @param \Flipdish\\Client\Models\HydraStoreUnassignedEvent[] $hydra_store_unassigned_event Hydra store unassigned
     *
     * @return $this
     */
    public function setHydraStoreUnassignedEvent($hydra_store_unassigned_event)
    {
        $this->container['hydra_store_unassigned_event'] = $hydra_store_unassigned_event;

        return $this;
    }

    /**
     * Gets hydra_setting_changed_event
     *
     * @return \Flipdish\\Client\Models\HydraSettingChangedEvent[]
     */
    public function getHydraSettingChangedEvent()
    {
        return $this->container['hydra_setting_changed_event'];
    }

    /**
     * Sets hydra_setting_changed_event
     *
     * @param \Flipdish\\Client\Models\HydraSettingChangedEvent[] $hydra_setting_changed_event Hydra settings changed event
     *
     * @return $this
     */
    public function setHydraSettingChangedEvent($hydra_setting_changed_event)
    {
        $this->container['hydra_setting_changed_event'] = $hydra_setting_changed_event;

        return $this;
    }

    /**
     * Gets hydra_un_assigned_event
     *
     * @return \Flipdish\\Client\Models\HydraUnAssignedEvent[]
     */
    public function getHydraUnAssignedEvent()
    {
        return $this->container['hydra_un_assigned_event'];
    }

    /**
     * Sets hydra_un_assigned_event
     *
     * @param \Flipdish\\Client\Models\HydraUnAssignedEvent[] $hydra_un_assigned_event Hydra un-assigned event
     *
     * @return $this
     */
    public function setHydraUnAssignedEvent($hydra_un_assigned_event)
    {
        $this->container['hydra_un_assigned_event'] = $hydra_un_assigned_event;

        return $this;
    }

    /**
     * Gets hydra_connection_status_changed_event
     *
     * @return \Flipdish\\Client\Models\HydraConnectionStatusChangedEvent[]
     */
    public function getHydraConnectionStatusChangedEvent()
    {
        return $this->container['hydra_connection_status_changed_event'];
    }

    /**
     * Sets hydra_connection_status_changed_event
     *
     * @param \Flipdish\\Client\Models\HydraConnectionStatusChangedEvent[] $hydra_connection_status_changed_event Hydra connection state change
     *
     * @return $this
     */
    public function setHydraConnectionStatusChangedEvent($hydra_connection_status_changed_event)
    {
        $this->container['hydra_connection_status_changed_event'] = $hydra_connection_status_changed_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_pairing_mode_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothPairingModeEvent[]
     */
    public function getKioskBluetoothPairingModeEvent()
    {
        return $this->container['kiosk_bluetooth_pairing_mode_event'];
    }

    /**
     * Sets kiosk_bluetooth_pairing_mode_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothPairingModeEvent[] $kiosk_bluetooth_pairing_mode_event Bluetooth Pairing Mode initiated
     *
     * @return $this
     */
    public function setKioskBluetoothPairingModeEvent($kiosk_bluetooth_pairing_mode_event)
    {
        $this->container['kiosk_bluetooth_pairing_mode_event'] = $kiosk_bluetooth_pairing_mode_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_unpairing_mode_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothUnpairingModeEvent[]
     */
    public function getKioskBluetoothUnpairingModeEvent()
    {
        return $this->container['kiosk_bluetooth_unpairing_mode_event'];
    }

    /**
     * Sets kiosk_bluetooth_unpairing_mode_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothUnpairingModeEvent[] $kiosk_bluetooth_unpairing_mode_event Bluetooth Unpairing Mode initiated
     *
     * @return $this
     */
    public function setKioskBluetoothUnpairingModeEvent($kiosk_bluetooth_unpairing_mode_event)
    {
        $this->container['kiosk_bluetooth_unpairing_mode_event'] = $kiosk_bluetooth_unpairing_mode_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_terminal_unpaired_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothTerminalUnpairedEvent[]
     */
    public function getKioskBluetoothTerminalUnpairedEvent()
    {
        return $this->container['kiosk_bluetooth_terminal_unpaired_event'];
    }

    /**
     * Sets kiosk_bluetooth_terminal_unpaired_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothTerminalUnpairedEvent[] $kiosk_bluetooth_terminal_unpaired_event Bluetooth Terminal Unpaired with Kiosk
     *
     * @return $this
     */
    public function setKioskBluetoothTerminalUnpairedEvent($kiosk_bluetooth_terminal_unpaired_event)
    {
        $this->container['kiosk_bluetooth_terminal_unpaired_event'] = $kiosk_bluetooth_terminal_unpaired_event;

        return $this;
    }

    /**
     * Gets kiosk_terminal_action_state_changed_event
     *
     * @return \Flipdish\\Client\Models\KioskTerminalActionStateChangedEvent[]
     */
    public function getKioskTerminalActionStateChangedEvent()
    {
        return $this->container['kiosk_terminal_action_state_changed_event'];
    }

    /**
     * Sets kiosk_terminal_action_state_changed_event
     *
     * @param \Flipdish\\Client\Models\KioskTerminalActionStateChangedEvent[] $kiosk_terminal_action_state_changed_event Terminal actionstate change
     *
     * @return $this
     */
    public function setKioskTerminalActionStateChangedEvent($kiosk_terminal_action_state_changed_event)
    {
        $this->container['kiosk_terminal_action_state_changed_event'] = $kiosk_terminal_action_state_changed_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_terminal_updated_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothTerminalUpdatedEvent[]
     */
    public function getKioskBluetoothTerminalUpdatedEvent()
    {
        return $this->container['kiosk_bluetooth_terminal_updated_event'];
    }

    /**
     * Sets kiosk_bluetooth_terminal_updated_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothTerminalUpdatedEvent[] $kiosk_bluetooth_terminal_updated_event Bluetooth Terminal Updated
     *
     * @return $this
     */
    public function setKioskBluetoothTerminalUpdatedEvent($kiosk_bluetooth_terminal_updated_event)
    {
        $this->container['kiosk_bluetooth_terminal_updated_event'] = $kiosk_bluetooth_terminal_updated_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_terminal_initiate_update_check_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothTerminalInitiateUpdateCheckEvent[]
     */
    public function getKioskBluetoothTerminalInitiateUpdateCheckEvent()
    {
        return $this->container['kiosk_bluetooth_terminal_initiate_update_check_event'];
    }

    /**
     * Sets kiosk_bluetooth_terminal_initiate_update_check_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothTerminalInitiateUpdateCheckEvent[] $kiosk_bluetooth_terminal_initiate_update_check_event Trigger bluetooth payment terminal update checker
     *
     * @return $this
     */
    public function setKioskBluetoothTerminalInitiateUpdateCheckEvent($kiosk_bluetooth_terminal_initiate_update_check_event)
    {
        $this->container['kiosk_bluetooth_terminal_initiate_update_check_event'] = $kiosk_bluetooth_terminal_initiate_update_check_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_install_update_initiate_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothInstallUpdateInitiateEvent[]
     */
    public function getKioskBluetoothInstallUpdateInitiateEvent()
    {
        return $this->container['kiosk_bluetooth_install_update_initiate_event'];
    }

    /**
     * Sets kiosk_bluetooth_install_update_initiate_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothInstallUpdateInitiateEvent[] $kiosk_bluetooth_install_update_initiate_event Bluetooth Terminal Initiate Update
     *
     * @return $this
     */
    public function setKioskBluetoothInstallUpdateInitiateEvent($kiosk_bluetooth_install_update_initiate_event)
    {
        $this->container['kiosk_bluetooth_install_update_initiate_event'] = $kiosk_bluetooth_install_update_initiate_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_terminal_cancel_update_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothTerminalCancelUpdateEvent[]
     */
    public function getKioskBluetoothTerminalCancelUpdateEvent()
    {
        return $this->container['kiosk_bluetooth_terminal_cancel_update_event'];
    }

    /**
     * Sets kiosk_bluetooth_terminal_cancel_update_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothTerminalCancelUpdateEvent[] $kiosk_bluetooth_terminal_cancel_update_event Bluetooth Terminal Cancel Update Install
     *
     * @return $this
     */
    public function setKioskBluetoothTerminalCancelUpdateEvent($kiosk_bluetooth_terminal_cancel_update_event)
    {
        $this->container['kiosk_bluetooth_terminal_cancel_update_event'] = $kiosk_bluetooth_terminal_cancel_update_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_terminal_firmware_version_status_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothTerminalFirmwareVersionStatusEvent[]
     */
    public function getKioskBluetoothTerminalFirmwareVersionStatusEvent()
    {
        return $this->container['kiosk_bluetooth_terminal_firmware_version_status_event'];
    }

    /**
     * Sets kiosk_bluetooth_terminal_firmware_version_status_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothTerminalFirmwareVersionStatusEvent[] $kiosk_bluetooth_terminal_firmware_version_status_event Bluetooth Payment Terminal Firmware Version Status Info
     *
     * @return $this
     */
    public function setKioskBluetoothTerminalFirmwareVersionStatusEvent($kiosk_bluetooth_terminal_firmware_version_status_event)
    {
        $this->container['kiosk_bluetooth_terminal_firmware_version_status_event'] = $kiosk_bluetooth_terminal_firmware_version_status_event;

        return $this;
    }

    /**
     * Gets kiosk_bluetooth_terminal_installation_status_event
     *
     * @return \Flipdish\\Client\Models\KioskBluetoothTerminalInstallationStatusEvent[]
     */
    public function getKioskBluetoothTerminalInstallationStatusEvent()
    {
        return $this->container['kiosk_bluetooth_terminal_installation_status_event'];
    }

    /**
     * Sets kiosk_bluetooth_terminal_installation_status_event
     *
     * @param \Flipdish\\Client\Models\KioskBluetoothTerminalInstallationStatusEvent[] $kiosk_bluetooth_terminal_installation_status_event Bluetooth Terminal Update Installation Status
     *
     * @return $this
     */
    public function setKioskBluetoothTerminalInstallationStatusEvent($kiosk_bluetooth_terminal_installation_status_event)
    {
        $this->container['kiosk_bluetooth_terminal_installation_status_event'] = $kiosk_bluetooth_terminal_installation_status_event;

        return $this;
    }

    /**
     * Gets push_notification_scheduled_event
     *
     * @return \Flipdish\\Client\Models\PushNotificationScheduledEvent[]
     */
    public function getPushNotificationScheduledEvent()
    {
        return $this->container['push_notification_scheduled_event'];
    }

    /**
     * Sets push_notification_scheduled_event
     *
     * @param \Flipdish\\Client\Models\PushNotificationScheduledEvent[] $push_notification_scheduled_event Push notification scheduled event
     *
     * @return $this
     */
    public function setPushNotificationScheduledEvent($push_notification_scheduled_event)
    {
        $this->container['push_notification_scheduled_event'] = $push_notification_scheduled_event;

        return $this;
    }

    /**
     * Gets push_notification_sent_event
     *
     * @return \Flipdish\\Client\Models\PushNotificationSentEvent[]
     */
    public function getPushNotificationSentEvent()
    {
        return $this->container['push_notification_sent_event'];
    }

    /**
     * Sets push_notification_sent_event
     *
     * @param \Flipdish\\Client\Models\PushNotificationSentEvent[] $push_notification_sent_event Push notification sent event
     *
     * @return $this
     */
    public function setPushNotificationSentEvent($push_notification_sent_event)
    {
        $this->container['push_notification_sent_event'] = $push_notification_sent_event;

        return $this;
    }

    /**
     * Gets push_notification_deleted_event
     *
     * @return \Flipdish\\Client\Models\PushNotificationDeletedEvent[]
     */
    public function getPushNotificationDeletedEvent()
    {
        return $this->container['push_notification_deleted_event'];
    }

    /**
     * Sets push_notification_deleted_event
     *
     * @param \Flipdish\\Client\Models\PushNotificationDeletedEvent[] $push_notification_deleted_event Push notification deleted event
     *
     * @return $this
     */
    public function setPushNotificationDeletedEvent($push_notification_deleted_event)
    {
        $this->container['push_notification_deleted_event'] = $push_notification_deleted_event;

        return $this;
    }

    /**
     * Gets dns_verified_event
     *
     * @return \Flipdish\\Client\Models\DnsVerifiedEvent[]
     */
    public function getDnsVerifiedEvent()
    {
        return $this->container['dns_verified_event'];
    }

    /**
     * Sets dns_verified_event
     *
     * @param \Flipdish\\Client\Models\DnsVerifiedEvent[] $dns_verified_event DNS Verified
     *
     * @return $this
     */
    public function setDnsVerifiedEvent($dns_verified_event)
    {
        $this->container['dns_verified_event'] = $dns_verified_event;

        return $this;
    }

    /**
     * Gets certificate_created_event
     *
     * @return \Flipdish\\Client\Models\CertificateCreatedEvent[]
     */
    public function getCertificateCreatedEvent()
    {
        return $this->container['certificate_created_event'];
    }

    /**
     * Sets certificate_created_event
     *
     * @param \Flipdish\\Client\Models\CertificateCreatedEvent[] $certificate_created_event Certificate created
     *
     * @return $this
     */
    public function setCertificateCreatedEvent($certificate_created_event)
    {
        $this->container['certificate_created_event'] = $certificate_created_event;

        return $this;
    }

    /**
     * Gets certificate_renewed_event
     *
     * @return \Flipdish\\Client\Models\CertificateRenewedEvent[]
     */
    public function getCertificateRenewedEvent()
    {
        return $this->container['certificate_renewed_event'];
    }

    /**
     * Sets certificate_renewed_event
     *
     * @param \Flipdish\\Client\Models\CertificateRenewedEvent[] $certificate_renewed_event Certificate renewed
     *
     * @return $this
     */
    public function setCertificateRenewedEvent($certificate_renewed_event)
    {
        $this->container['certificate_renewed_event'] = $certificate_renewed_event;

        return $this;
    }

    /**
     * Gets website_vanity_url_updated_event
     *
     * @return \Flipdish\\Client\Models\WebsiteVanityUrlUpdatedEvent[]
     */
    public function getWebsiteVanityUrlUpdatedEvent()
    {
        return $this->container['website_vanity_url_updated_event'];
    }

    /**
     * Sets website_vanity_url_updated_event
     *
     * @param \Flipdish\\Client\Models\WebsiteVanityUrlUpdatedEvent[] $website_vanity_url_updated_event Panacea vanity url updated
     *
     * @return $this
     */
    public function setWebsiteVanityUrlUpdatedEvent($website_vanity_url_updated_event)
    {
        $this->container['website_vanity_url_updated_event'] = $website_vanity_url_updated_event;

        return $this;
    }

    /**
     * Gets website_updated_event
     *
     * @return \Flipdish\\Client\Models\WebsiteUpdatedEvent[]
     */
    public function getWebsiteUpdatedEvent()
    {
        return $this->container['website_updated_event'];
    }

    /**
     * Sets website_updated_event
     *
     * @param \Flipdish\\Client\Models\WebsiteUpdatedEvent[] $website_updated_event Website updated
     *
     * @return $this
     */
    public function setWebsiteUpdatedEvent($website_updated_event)
    {
        $this->container['website_updated_event'] = $website_updated_event;

        return $this;
    }

    /**
     * Gets order_capacity_updated_event
     *
     * @return \Flipdish\\Client\Models\OrderCapacityConfigUpdatedEvent[]
     */
    public function getOrderCapacityUpdatedEvent()
    {
        return $this->container['order_capacity_updated_event'];
    }

    /**
     * Sets order_capacity_updated_event
     *
     * @param \Flipdish\\Client\Models\OrderCapacityConfigUpdatedEvent[] $order_capacity_updated_event Order capacity config updated
     *
     * @return $this
     */
    public function setOrderCapacityUpdatedEvent($order_capacity_updated_event)
    {
        $this->container['order_capacity_updated_event'] = $order_capacity_updated_event;

        return $this;
    }

    /**
     * Gets external_store_event
     *
     * @return \Flipdish\\Client\Models\ExternalStoreEvent[]
     */
    public function getExternalStoreEvent()
    {
        return $this->container['external_store_event'];
    }

    /**
     * Sets external_store_event
     *
     * @param \Flipdish\\Client\Models\ExternalStoreEvent[] $external_store_event External event
     *
     * @return $this
     */
    public function setExternalStoreEvent($external_store_event)
    {
        $this->container['external_store_event'] = $external_store_event;

        return $this;
    }

    /**
     * Gets order_fulfillment_status_updated_event
     *
     * @return \Flipdish\\Client\Models\OrderFulfillmentStatusUpdatedEvent[]
     */
    public function getOrderFulfillmentStatusUpdatedEvent()
    {
        return $this->container['order_fulfillment_status_updated_event'];
    }

    /**
     * Sets order_fulfillment_status_updated_event
     *
     * @param \Flipdish\\Client\Models\OrderFulfillmentStatusUpdatedEvent[] $order_fulfillment_status_updated_event Fulfillment status updated event
     *
     * @return $this
     */
    public function setOrderFulfillmentStatusUpdatedEvent($order_fulfillment_status_updated_event)
    {
        $this->container['order_fulfillment_status_updated_event'] = $order_fulfillment_status_updated_event;

        return $this;
    }

    /**
     * Gets app_store_config_created_event
     *
     * @return \Flipdish\\Client\Models\AppStoreConfigCreatedEvent[]
     */
    public function getAppStoreConfigCreatedEvent()
    {
        return $this->container['app_store_config_created_event'];
    }

    /**
     * Sets app_store_config_created_event
     *
     * @param \Flipdish\\Client\Models\AppStoreConfigCreatedEvent[] $app_store_config_created_event App Store Config Created
     *
     * @return $this
     */
    public function setAppStoreConfigCreatedEvent($app_store_config_created_event)
    {
        $this->container['app_store_config_created_event'] = $app_store_config_created_event;

        return $this;
    }

    /**
     * Gets app_store_config_updated_event
     *
     * @return \Flipdish\\Client\Models\AppStoreConfigUpdatedEvent[]
     */
    public function getAppStoreConfigUpdatedEvent()
    {
        return $this->container['app_store_config_updated_event'];
    }

    /**
     * Sets app_store_config_updated_event
     *
     * @param \Flipdish\\Client\Models\AppStoreConfigUpdatedEvent[] $app_store_config_updated_event App Store Config Updated
     *
     * @return $this
     */
    public function setAppStoreConfigUpdatedEvent($app_store_config_updated_event)
    {
        $this->container['app_store_config_updated_event'] = $app_store_config_updated_event;

        return $this;
    }

    /**
     * Gets app_store_config_deleted_event
     *
     * @return \Flipdish\\Client\Models\AppStoreConfigDeletedEvent[]
     */
    public function getAppStoreConfigDeletedEvent()
    {
        return $this->container['app_store_config_deleted_event'];
    }

    /**
     * Sets app_store_config_deleted_event
     *
     * @param \Flipdish\\Client\Models\AppStoreConfigDeletedEvent[] $app_store_config_deleted_event App Store Config Deleted
     *
     * @return $this
     */
    public function setAppStoreConfigDeletedEvent($app_store_config_deleted_event)
    {
        $this->container['app_store_config_deleted_event'] = $app_store_config_deleted_event;

        return $this;
    }

    /**
     * Gets app_store_subscription_change_job_updated_event
     *
     * @return \Flipdish\\Client\Models\AppStoreSubscriptionChangeJobUpdatedEvent[]
     */
    public function getAppStoreSubscriptionChangeJobUpdatedEvent()
    {
        return $this->container['app_store_subscription_change_job_updated_event'];
    }

    /**
     * Sets app_store_subscription_change_job_updated_event
     *
     * @param \Flipdish\\Client\Models\AppStoreSubscriptionChangeJobUpdatedEvent[] $app_store_subscription_change_job_updated_event App Store Subscription Change Job Updated
     *
     * @return $this
     */
    public function setAppStoreSubscriptionChangeJobUpdatedEvent($app_store_subscription_change_job_updated_event)
    {
        $this->container['app_store_subscription_change_job_updated_event'] = $app_store_subscription_change_job_updated_event;

        return $this;
    }

    /**
     * Gets catalog_item_created_event
     *
     * @return \Flipdish\\Client\Models\CatalogItemCreatedEvent[]
     */
    public function getCatalogItemCreatedEvent()
    {
        return $this->container['catalog_item_created_event'];
    }

    /**
     * Sets catalog_item_created_event
     *
     * @param \Flipdish\\Client\Models\CatalogItemCreatedEvent[] $catalog_item_created_event Catalog Item Created
     *
     * @return $this
     */
    public function setCatalogItemCreatedEvent($catalog_item_created_event)
    {
        $this->container['catalog_item_created_event'] = $catalog_item_created_event;

        return $this;
    }

    /**
     * Gets catalog_item_updated_event
     *
     * @return \Flipdish\\Client\Models\CatalogItemUpdatedEvent[]
     */
    public function getCatalogItemUpdatedEvent()
    {
        return $this->container['catalog_item_updated_event'];
    }

    /**
     * Sets catalog_item_updated_event
     *
     * @param \Flipdish\\Client\Models\CatalogItemUpdatedEvent[] $catalog_item_updated_event Catalog Item Updated
     *
     * @return $this
     */
    public function setCatalogItemUpdatedEvent($catalog_item_updated_event)
    {
        $this->container['catalog_item_updated_event'] = $catalog_item_updated_event;

        return $this;
    }

    /**
     * Gets catalog_item_archived_event
     *
     * @return \Flipdish\\Client\Models\CatalogItemArchivedEvent[]
     */
    public function getCatalogItemArchivedEvent()
    {
        return $this->container['catalog_item_archived_event'];
    }

    /**
     * Sets catalog_item_archived_event
     *
     * @param \Flipdish\\Client\Models\CatalogItemArchivedEvent[] $catalog_item_archived_event Catalog Item Archived
     *
     * @return $this
     */
    public function setCatalogItemArchivedEvent($catalog_item_archived_event)
    {
        $this->container['catalog_item_archived_event'] = $catalog_item_archived_event;

        return $this;
    }

    /**
     * Gets catalog_group_created_event
     *
     * @return \Flipdish\\Client\Models\CatalogGroupCreatedEvent[]
     */
    public function getCatalogGroupCreatedEvent()
    {
        return $this->container['catalog_group_created_event'];
    }

    /**
     * Sets catalog_group_created_event
     *
     * @param \Flipdish\\Client\Models\CatalogGroupCreatedEvent[] $catalog_group_created_event Catalog Group Created
     *
     * @return $this
     */
    public function setCatalogGroupCreatedEvent($catalog_group_created_event)
    {
        $this->container['catalog_group_created_event'] = $catalog_group_created_event;

        return $this;
    }

    /**
     * Gets catalog_group_updated_event
     *
     * @return \Flipdish\\Client\Models\CatalogGroupUpdatedEvent[]
     */
    public function getCatalogGroupUpdatedEvent()
    {
        return $this->container['catalog_group_updated_event'];
    }

    /**
     * Sets catalog_group_updated_event
     *
     * @param \Flipdish\\Client\Models\CatalogGroupUpdatedEvent[] $catalog_group_updated_event Catalog Group Updated
     *
     * @return $this
     */
    public function setCatalogGroupUpdatedEvent($catalog_group_updated_event)
    {
        $this->container['catalog_group_updated_event'] = $catalog_group_updated_event;

        return $this;
    }

    /**
     * Gets catalog_group_archived_event
     *
     * @return \Flipdish\\Client\Models\CatalogGroupArchivedEvent[]
     */
    public function getCatalogGroupArchivedEvent()
    {
        return $this->container['catalog_group_archived_event'];
    }

    /**
     * Sets catalog_group_archived_event
     *
     * @param \Flipdish\\Client\Models\CatalogGroupArchivedEvent[] $catalog_group_archived_event Catalog Group Archived
     *
     * @return $this
     */
    public function setCatalogGroupArchivedEvent($catalog_group_archived_event)
    {
        $this->container['catalog_group_archived_event'] = $catalog_group_archived_event;

        return $this;
    }

    /**
     * Gets store_tip_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreTipUpdatedEvent[]
     */
    public function getStoreTipUpdatedEvent()
    {
        return $this->container['store_tip_updated_event'];
    }

    /**
     * Sets store_tip_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreTipUpdatedEvent[] $store_tip_updated_event Store Tip Updated Event
     *
     * @return $this
     */
    public function setStoreTipUpdatedEvent($store_tip_updated_event)
    {
        $this->container['store_tip_updated_event'] = $store_tip_updated_event;

        return $this;
    }

    /**
     * Gets location_area_created_event
     *
     * @return \Flipdish\\Client\Models\LocationAreaCreatedEvent[]
     */
    public function getLocationAreaCreatedEvent()
    {
        return $this->container['location_area_created_event'];
    }

    /**
     * Sets location_area_created_event
     *
     * @param \Flipdish\\Client\Models\LocationAreaCreatedEvent[] $location_area_created_event LocationArea created event
     *
     * @return $this
     */
    public function setLocationAreaCreatedEvent($location_area_created_event)
    {
        $this->container['location_area_created_event'] = $location_area_created_event;

        return $this;
    }

    /**
     * Gets location_area_updated_event
     *
     * @return \Flipdish\\Client\Models\LocationAreaUpdatedEvent[]
     */
    public function getLocationAreaUpdatedEvent()
    {
        return $this->container['location_area_updated_event'];
    }

    /**
     * Sets location_area_updated_event
     *
     * @param \Flipdish\\Client\Models\LocationAreaUpdatedEvent[] $location_area_updated_event LocationArea updated event
     *
     * @return $this
     */
    public function setLocationAreaUpdatedEvent($location_area_updated_event)
    {
        $this->container['location_area_updated_event'] = $location_area_updated_event;

        return $this;
    }

    /**
     * Gets location_created_event
     *
     * @return \Flipdish\\Client\Models\LocationCreatedEvent[]
     */
    public function getLocationCreatedEvent()
    {
        return $this->container['location_created_event'];
    }

    /**
     * Sets location_created_event
     *
     * @param \Flipdish\\Client\Models\LocationCreatedEvent[] $location_created_event Location created event
     *
     * @return $this
     */
    public function setLocationCreatedEvent($location_created_event)
    {
        $this->container['location_created_event'] = $location_created_event;

        return $this;
    }

    /**
     * Gets location_deleted_event
     *
     * @return \Flipdish\\Client\Models\LocationDeletedEvent[]
     */
    public function getLocationDeletedEvent()
    {
        return $this->container['location_deleted_event'];
    }

    /**
     * Sets location_deleted_event
     *
     * @param \Flipdish\\Client\Models\LocationDeletedEvent[] $location_deleted_event Location deleted event
     *
     * @return $this
     */
    public function setLocationDeletedEvent($location_deleted_event)
    {
        $this->container['location_deleted_event'] = $location_deleted_event;

        return $this;
    }

    /**
     * Gets store_service_charge_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreServiceChargeUpdatedEvent[]
     */
    public function getStoreServiceChargeUpdatedEvent()
    {
        return $this->container['store_service_charge_updated_event'];
    }

    /**
     * Sets store_service_charge_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreServiceChargeUpdatedEvent[] $store_service_charge_updated_event Service Charge Updated Event
     *
     * @return $this
     */
    public function setStoreServiceChargeUpdatedEvent($store_service_charge_updated_event)
    {
        $this->container['store_service_charge_updated_event'] = $store_service_charge_updated_event;

        return $this;
    }

    /**
     * Gets mobile_apps_submission_status_updated_event
     *
     * @return \Flipdish\\Client\Models\MobileAppsSubmissionStatusUpdatedEvent[]
     */
    public function getMobileAppsSubmissionStatusUpdatedEvent()
    {
        return $this->container['mobile_apps_submission_status_updated_event'];
    }

    /**
     * Sets mobile_apps_submission_status_updated_event
     *
     * @param \Flipdish\\Client\Models\MobileAppsSubmissionStatusUpdatedEvent[] $mobile_apps_submission_status_updated_event Mobile Submission Status Updated Event
     *
     * @return $this
     */
    public function setMobileAppsSubmissionStatusUpdatedEvent($mobile_apps_submission_status_updated_event)
    {
        $this->container['mobile_apps_submission_status_updated_event'] = $mobile_apps_submission_status_updated_event;

        return $this;
    }

    /**
     * Gets mobile_apps_submission_updated_event
     *
     * @return \Flipdish\\Client\Models\MobileAppsSubmissionUpdatedEvent[]
     */
    public function getMobileAppsSubmissionUpdatedEvent()
    {
        return $this->container['mobile_apps_submission_updated_event'];
    }

    /**
     * Sets mobile_apps_submission_updated_event
     *
     * @param \Flipdish\\Client\Models\MobileAppsSubmissionUpdatedEvent[] $mobile_apps_submission_updated_event Mobile Submission Updated Event
     *
     * @return $this
     */
    public function setMobileAppsSubmissionUpdatedEvent($mobile_apps_submission_updated_event)
    {
        $this->container['mobile_apps_submission_updated_event'] = $mobile_apps_submission_updated_event;

        return $this;
    }

    /**
     * Gets store_fee_config_updated_event
     *
     * @return \Flipdish\\Client\Models\StoreFeeConfigUpdatedEvent[]
     */
    public function getStoreFeeConfigUpdatedEvent()
    {
        return $this->container['store_fee_config_updated_event'];
    }

    /**
     * Sets store_fee_config_updated_event
     *
     * @param \Flipdish\\Client\Models\StoreFeeConfigUpdatedEvent[] $store_fee_config_updated_event Store Fee Config Updated Event
     *
     * @return $this
     */
    public function setStoreFeeConfigUpdatedEvent($store_fee_config_updated_event)
    {
        $this->container['store_fee_config_updated_event'] = $store_fee_config_updated_event;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


