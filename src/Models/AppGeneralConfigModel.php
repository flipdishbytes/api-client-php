<?php
/**
 * AppGeneralConfigModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Flipdish\\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Flipdish\\Client\Models;

use \ArrayAccess;
use \Flipdish\\Client\ObjectSerializer;

/**
 * AppGeneralConfigModel Class Doc Comment
 *
 * @category Class
 * @description App general configuration model
 * @package  Flipdish\\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AppGeneralConfigModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AppGeneralConfigModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'white_label_id' => 'int',
        'deep_link_url_scheme' => 'string',
        'sms_restaurant_name' => 'string',
        'nexmo_support_sms_number' => 'string',
        'twilio_support_sms_number' => 'string',
        'fallback_phone_number_prefix' => 'string',
        'autocomplete_phone_number_length' => 'int',
        'contact_form_type' => 'string',
        'private_support_email_address' => 'string',
        'contact_phone_number' => 'string',
        'delivery_enabled' => 'bool',
        'pickup_enabled' => 'bool',
        'dine_in_enabled' => 'bool',
        'display_delivery_restaurant_list_screen' => 'bool',
        'display_pickup_restaurant_list_screen' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'white_label_id' => 'int32',
        'deep_link_url_scheme' => null,
        'sms_restaurant_name' => null,
        'nexmo_support_sms_number' => null,
        'twilio_support_sms_number' => null,
        'fallback_phone_number_prefix' => null,
        'autocomplete_phone_number_length' => 'int32',
        'contact_form_type' => null,
        'private_support_email_address' => null,
        'contact_phone_number' => null,
        'delivery_enabled' => null,
        'pickup_enabled' => null,
        'dine_in_enabled' => null,
        'display_delivery_restaurant_list_screen' => null,
        'display_pickup_restaurant_list_screen' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'white_label_id' => 'WhiteLabelId',
        'deep_link_url_scheme' => 'DeepLinkUrlScheme',
        'sms_restaurant_name' => 'SmsRestaurantName',
        'nexmo_support_sms_number' => 'NexmoSupportSmsNumber',
        'twilio_support_sms_number' => 'TwilioSupportSmsNumber',
        'fallback_phone_number_prefix' => 'FallbackPhoneNumberPrefix',
        'autocomplete_phone_number_length' => 'AutocompletePhoneNumberLength',
        'contact_form_type' => 'ContactFormType',
        'private_support_email_address' => 'PrivateSupportEmailAddress',
        'contact_phone_number' => 'ContactPhoneNumber',
        'delivery_enabled' => 'DeliveryEnabled',
        'pickup_enabled' => 'PickupEnabled',
        'dine_in_enabled' => 'DineInEnabled',
        'display_delivery_restaurant_list_screen' => 'DisplayDeliveryRestaurantListScreen',
        'display_pickup_restaurant_list_screen' => 'DisplayPickupRestaurantListScreen'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'white_label_id' => 'setWhiteLabelId',
        'deep_link_url_scheme' => 'setDeepLinkUrlScheme',
        'sms_restaurant_name' => 'setSmsRestaurantName',
        'nexmo_support_sms_number' => 'setNexmoSupportSmsNumber',
        'twilio_support_sms_number' => 'setTwilioSupportSmsNumber',
        'fallback_phone_number_prefix' => 'setFallbackPhoneNumberPrefix',
        'autocomplete_phone_number_length' => 'setAutocompletePhoneNumberLength',
        'contact_form_type' => 'setContactFormType',
        'private_support_email_address' => 'setPrivateSupportEmailAddress',
        'contact_phone_number' => 'setContactPhoneNumber',
        'delivery_enabled' => 'setDeliveryEnabled',
        'pickup_enabled' => 'setPickupEnabled',
        'dine_in_enabled' => 'setDineInEnabled',
        'display_delivery_restaurant_list_screen' => 'setDisplayDeliveryRestaurantListScreen',
        'display_pickup_restaurant_list_screen' => 'setDisplayPickupRestaurantListScreen'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'white_label_id' => 'getWhiteLabelId',
        'deep_link_url_scheme' => 'getDeepLinkUrlScheme',
        'sms_restaurant_name' => 'getSmsRestaurantName',
        'nexmo_support_sms_number' => 'getNexmoSupportSmsNumber',
        'twilio_support_sms_number' => 'getTwilioSupportSmsNumber',
        'fallback_phone_number_prefix' => 'getFallbackPhoneNumberPrefix',
        'autocomplete_phone_number_length' => 'getAutocompletePhoneNumberLength',
        'contact_form_type' => 'getContactFormType',
        'private_support_email_address' => 'getPrivateSupportEmailAddress',
        'contact_phone_number' => 'getContactPhoneNumber',
        'delivery_enabled' => 'getDeliveryEnabled',
        'pickup_enabled' => 'getPickupEnabled',
        'dine_in_enabled' => 'getDineInEnabled',
        'display_delivery_restaurant_list_screen' => 'getDisplayDeliveryRestaurantListScreen',
        'display_pickup_restaurant_list_screen' => 'getDisplayPickupRestaurantListScreen'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['white_label_id'] = isset($data['white_label_id']) ? $data['white_label_id'] : null;
        $this->container['deep_link_url_scheme'] = isset($data['deep_link_url_scheme']) ? $data['deep_link_url_scheme'] : null;
        $this->container['sms_restaurant_name'] = isset($data['sms_restaurant_name']) ? $data['sms_restaurant_name'] : null;
        $this->container['nexmo_support_sms_number'] = isset($data['nexmo_support_sms_number']) ? $data['nexmo_support_sms_number'] : null;
        $this->container['twilio_support_sms_number'] = isset($data['twilio_support_sms_number']) ? $data['twilio_support_sms_number'] : null;
        $this->container['fallback_phone_number_prefix'] = isset($data['fallback_phone_number_prefix']) ? $data['fallback_phone_number_prefix'] : null;
        $this->container['autocomplete_phone_number_length'] = isset($data['autocomplete_phone_number_length']) ? $data['autocomplete_phone_number_length'] : null;
        $this->container['contact_form_type'] = isset($data['contact_form_type']) ? $data['contact_form_type'] : null;
        $this->container['private_support_email_address'] = isset($data['private_support_email_address']) ? $data['private_support_email_address'] : null;
        $this->container['contact_phone_number'] = isset($data['contact_phone_number']) ? $data['contact_phone_number'] : null;
        $this->container['delivery_enabled'] = isset($data['delivery_enabled']) ? $data['delivery_enabled'] : null;
        $this->container['pickup_enabled'] = isset($data['pickup_enabled']) ? $data['pickup_enabled'] : null;
        $this->container['dine_in_enabled'] = isset($data['dine_in_enabled']) ? $data['dine_in_enabled'] : null;
        $this->container['display_delivery_restaurant_list_screen'] = isset($data['display_delivery_restaurant_list_screen']) ? $data['display_delivery_restaurant_list_screen'] : null;
        $this->container['display_pickup_restaurant_list_screen'] = isset($data['display_pickup_restaurant_list_screen']) ? $data['display_pickup_restaurant_list_screen'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets white_label_id
     *
     * @return int
     */
    public function getWhiteLabelId()
    {
        return $this->container['white_label_id'];
    }

    /**
     * Sets white_label_id
     *
     * @param int $white_label_id White label ID
     *
     * @return $this
     */
    public function setWhiteLabelId($white_label_id)
    {
        $this->container['white_label_id'] = $white_label_id;

        return $this;
    }

    /**
     * Gets deep_link_url_scheme
     *
     * @return string
     */
    public function getDeepLinkUrlScheme()
    {
        return $this->container['deep_link_url_scheme'];
    }

    /**
     * Sets deep_link_url_scheme
     *
     * @param string $deep_link_url_scheme Deep link URL scheme
     *
     * @return $this
     */
    public function setDeepLinkUrlScheme($deep_link_url_scheme)
    {
        $this->container['deep_link_url_scheme'] = $deep_link_url_scheme;

        return $this;
    }

    /**
     * Gets sms_restaurant_name
     *
     * @return string
     */
    public function getSmsRestaurantName()
    {
        return $this->container['sms_restaurant_name'];
    }

    /**
     * Sets sms_restaurant_name
     *
     * @param string $sms_restaurant_name SMS restaurant name
     *
     * @return $this
     */
    public function setSmsRestaurantName($sms_restaurant_name)
    {
        $this->container['sms_restaurant_name'] = $sms_restaurant_name;

        return $this;
    }

    /**
     * Gets nexmo_support_sms_number
     *
     * @return string
     */
    public function getNexmoSupportSmsNumber()
    {
        return $this->container['nexmo_support_sms_number'];
    }

    /**
     * Sets nexmo_support_sms_number
     *
     * @param string $nexmo_support_sms_number Nexmo support SMS number
     *
     * @return $this
     */
    public function setNexmoSupportSmsNumber($nexmo_support_sms_number)
    {
        $this->container['nexmo_support_sms_number'] = $nexmo_support_sms_number;

        return $this;
    }

    /**
     * Gets twilio_support_sms_number
     *
     * @return string
     */
    public function getTwilioSupportSmsNumber()
    {
        return $this->container['twilio_support_sms_number'];
    }

    /**
     * Sets twilio_support_sms_number
     *
     * @param string $twilio_support_sms_number Twilio support SMS number
     *
     * @return $this
     */
    public function setTwilioSupportSmsNumber($twilio_support_sms_number)
    {
        $this->container['twilio_support_sms_number'] = $twilio_support_sms_number;

        return $this;
    }

    /**
     * Gets fallback_phone_number_prefix
     *
     * @return string
     */
    public function getFallbackPhoneNumberPrefix()
    {
        return $this->container['fallback_phone_number_prefix'];
    }

    /**
     * Sets fallback_phone_number_prefix
     *
     * @param string $fallback_phone_number_prefix Fallback phone number prefix
     *
     * @return $this
     */
    public function setFallbackPhoneNumberPrefix($fallback_phone_number_prefix)
    {
        $this->container['fallback_phone_number_prefix'] = $fallback_phone_number_prefix;

        return $this;
    }

    /**
     * Gets autocomplete_phone_number_length
     *
     * @return int
     */
    public function getAutocompletePhoneNumberLength()
    {
        return $this->container['autocomplete_phone_number_length'];
    }

    /**
     * Sets autocomplete_phone_number_length
     *
     * @param int $autocomplete_phone_number_length Autocomplete phone number length
     *
     * @return $this
     */
    public function setAutocompletePhoneNumberLength($autocomplete_phone_number_length)
    {
        $this->container['autocomplete_phone_number_length'] = $autocomplete_phone_number_length;

        return $this;
    }

    /**
     * Gets contact_form_type
     *
     * @return string
     */
    public function getContactFormType()
    {
        return $this->container['contact_form_type'];
    }

    /**
     * Sets contact_form_type
     *
     * @param string $contact_form_type Contact form type  None = 0,  Email = 1,  Intercom = 2,  WebView = 3,  FlipdishMessages = 4
     *
     * @return $this
     */
    public function setContactFormType($contact_form_type)
    {
        $this->container['contact_form_type'] = $contact_form_type;

        return $this;
    }

    /**
     * Gets private_support_email_address
     *
     * @return string
     */
    public function getPrivateSupportEmailAddress()
    {
        return $this->container['private_support_email_address'];
    }

    /**
     * Sets private_support_email_address
     *
     * @param string $private_support_email_address Private support email address
     *
     * @return $this
     */
    public function setPrivateSupportEmailAddress($private_support_email_address)
    {
        $this->container['private_support_email_address'] = $private_support_email_address;

        return $this;
    }

    /**
     * Gets contact_phone_number
     *
     * @return string
     */
    public function getContactPhoneNumber()
    {
        return $this->container['contact_phone_number'];
    }

    /**
     * Sets contact_phone_number
     *
     * @param string $contact_phone_number Contact phone number
     *
     * @return $this
     */
    public function setContactPhoneNumber($contact_phone_number)
    {
        $this->container['contact_phone_number'] = $contact_phone_number;

        return $this;
    }

    /**
     * Gets delivery_enabled
     *
     * @return bool
     */
    public function getDeliveryEnabled()
    {
        return $this->container['delivery_enabled'];
    }

    /**
     * Sets delivery_enabled
     *
     * @param bool $delivery_enabled Delivery enabled
     *
     * @return $this
     */
    public function setDeliveryEnabled($delivery_enabled)
    {
        $this->container['delivery_enabled'] = $delivery_enabled;

        return $this;
    }

    /**
     * Gets pickup_enabled
     *
     * @return bool
     */
    public function getPickupEnabled()
    {
        return $this->container['pickup_enabled'];
    }

    /**
     * Sets pickup_enabled
     *
     * @param bool $pickup_enabled Pickup enabled
     *
     * @return $this
     */
    public function setPickupEnabled($pickup_enabled)
    {
        $this->container['pickup_enabled'] = $pickup_enabled;

        return $this;
    }

    /**
     * Gets dine_in_enabled
     *
     * @return bool
     */
    public function getDineInEnabled()
    {
        return $this->container['dine_in_enabled'];
    }

    /**
     * Sets dine_in_enabled
     *
     * @param bool $dine_in_enabled Dine in enabled
     *
     * @return $this
     */
    public function setDineInEnabled($dine_in_enabled)
    {
        $this->container['dine_in_enabled'] = $dine_in_enabled;

        return $this;
    }

    /**
     * Gets display_delivery_restaurant_list_screen
     *
     * @return bool
     */
    public function getDisplayDeliveryRestaurantListScreen()
    {
        return $this->container['display_delivery_restaurant_list_screen'];
    }

    /**
     * Sets display_delivery_restaurant_list_screen
     *
     * @param bool $display_delivery_restaurant_list_screen Display delivery restaurant list screen
     *
     * @return $this
     */
    public function setDisplayDeliveryRestaurantListScreen($display_delivery_restaurant_list_screen)
    {
        $this->container['display_delivery_restaurant_list_screen'] = $display_delivery_restaurant_list_screen;

        return $this;
    }

    /**
     * Gets display_pickup_restaurant_list_screen
     *
     * @return bool
     */
    public function getDisplayPickupRestaurantListScreen()
    {
        return $this->container['display_pickup_restaurant_list_screen'];
    }

    /**
     * Sets display_pickup_restaurant_list_screen
     *
     * @param bool $display_pickup_restaurant_list_screen Display pickup restaurant list screen
     *
     * @return $this
     */
    public function setDisplayPickupRestaurantListScreen($display_pickup_restaurant_list_screen)
    {
        $this->container['display_pickup_restaurant_list_screen'] = $display_pickup_restaurant_list_screen;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


