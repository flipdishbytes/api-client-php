<?php
/**
 * HydraApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Flipdish\\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Flipdish\\Client;

use \Flipdish\\Client\Configuration;
use \Flipdish\\Client\ApiException;
use \Flipdish\\Client\ObjectSerializer;

/**
 * HydraApiTest Class Doc Comment
 *
 * @category Class
 * @package  Flipdish\\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HydraApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for assignEmv
     *
     * Assign an EMV terminal to a kiosk.
     *
     */
    public function testAssignEmv()
    {
    }

    /**
     * Test case for attachStoreToKiosk
     *
     * [Private].
     *
     */
    public function testAttachStoreToKiosk()
    {
    }

    /**
     * Test case for attachStoreToTerminal
     *
     * [Private].
     *
     */
    public function testAttachStoreToTerminal()
    {
    }

    /**
     * Test case for cancelEmvPayment
     *
     * .
     *
     */
    public function testCancelEmvPayment()
    {
    }

    /**
     * Test case for detachStoreFromTerminal
     *
     * [Private].
     *
     */
    public function testDetachStoreFromTerminal()
    {
    }

    /**
     * Test case for getAttachedDevice
     *
     * [Private].
     *
     */
    public function testGetAttachedDevice()
    {
    }

    /**
     * Test case for getAttachedDevices
     *
     * [Private].
     *
     */
    public function testGetAttachedDevices()
    {
    }

    /**
     * Test case for getEMVTerminalDetails
     *
     * [Private].
     *
     */
    public function testGetEMVTerminalDetails()
    {
    }

    /**
     * Test case for getEmvOrderState
     *
     * [Private].
     *
     */
    public function testGetEmvOrderState()
    {
    }

    /**
     * Test case for getKioskCashPaymentSettings
     *
     * Get the status of Cash Payment Method on Kiosk.
     *
     */
    public function testGetKioskCashPaymentSettings()
    {
    }

    /**
     * Test case for getRegistration
     *
     * .
     *
     */
    public function testGetRegistration()
    {
    }

    /**
     * Test case for getSettings
     *
     * [Private].
     *
     */
    public function testGetSettings()
    {
    }

    /**
     * Test case for hydraCreateEmv
     *
     * [Private].
     *
     */
    public function testHydraCreateEmv()
    {
    }

    /**
     * Test case for hydraDeleteEmv
     *
     * [Private].
     *
     */
    public function testHydraDeleteEmv()
    {
    }

    /**
     * Test case for hydraDetachStoreFromKiosk
     *
     * [Private].
     *
     */
    public function testHydraDetachStoreFromKiosk()
    {
    }

    /**
     * Test case for hydraGetEmvsForAppId
     *
     * List EMV terminals belonging to the given AppNameId.
     *
     */
    public function testHydraGetEmvsForAppId()
    {
    }

    /**
     * Test case for loginWithDeviceId
     *
     * [Private].
     *
     */
    public function testLoginWithDeviceId()
    {
    }

    /**
     * Test case for register
     *
     * [Private].
     *
     */
    public function testRegister()
    {
    }

    /**
     * Test case for unAssign
     *
     * [Private].
     *
     */
    public function testUnAssign()
    {
    }

    /**
     * Test case for unassignEmv
     *
     * Unassign the currently assigned EMV terminal from a kiosk.
     *
     */
    public function testUnassignEmv()
    {
    }

    /**
     * Test case for updateKioskCashVisibilitySettings
     *
     * Update the Cash Payment Method Visibility on Kiosk.
     *
     */
    public function testUpdateKioskCashVisibilitySettings()
    {
    }
}
