<?php
/**
 * EventSearchResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  Flipdish\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Flipdish Open API v1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.2
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Flipdish\Client\Model;

use \ArrayAccess;
use \Flipdish\Client\ObjectSerializer;

/**
 * EventSearchResult Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  Flipdish\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EventSearchResult implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EventSearchResult';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'analytics_client_event' => '\Flipdish\Client\Model\AnalyticsClientEvent[]',
        'order_accepted_event' => '\Flipdish\Client\Model\OrderAcceptedEvent[]',
        'order_created_event' => '\Flipdish\Client\Model\OrderCreatedEvent[]',
        'order_rating_updated_event' => '\Flipdish\Client\Model\OrderRatingUpdatedEvent[]',
        'order_refunded_event' => '\Flipdish\Client\Model\OrderRefundedEvent[]',
        'order_rejected_event' => '\Flipdish\Client\Model\OrderRejectedEvent[]',
        'order_tip_updated_event' => '\Flipdish\Client\Model\OrderTipUpdatedEvent[]',
        'store_created_event' => '\Flipdish\Client\Model\StoreCreatedEvent[]',
        'store_deleted_event' => '\Flipdish\Client\Model\StoreDeletedEvent[]',
        'store_address_updated_event' => '\Flipdish\Client\Model\StoreAddressUpdatedEvent[]',
        'delivery_zone_created_event' => '\Flipdish\Client\Model\DeliveryZoneCreatedEvent[]',
        'delivery_zone_updated_event' => '\Flipdish\Client\Model\DeliveryZoneUpdatedEvent[]',
        'delivery_zone_deleted_event' => '\Flipdish\Client\Model\DeliveryZoneDeletedEvent[]',
        'store_opening_hours_updated_event' => '\Flipdish\Client\Model\StoreOpeningHoursUpdatedEvent[]',
        'store_business_hours_override_created_event' => '\Flipdish\Client\Model\StoreBusinessHoursOverrideCreatedEvent[]',
        'store_business_hours_override_deleted_event' => '\Flipdish\Client\Model\StoreBusinessHoursOverrideDeletedEvent[]',
        'store_updated_event' => '\Flipdish\Client\Model\StoreUpdatedEvent[]',
        'menu_created_event' => '\Flipdish\Client\Model\MenuCreatedEvent[]',
        'menu_updated_event' => '\Flipdish\Client\Model\MenuUpdatedEvent[]',
        'menu_section_created_event' => '\Flipdish\Client\Model\MenuSectionCreatedEvent[]',
        'menu_section_updated_event' => '\Flipdish\Client\Model\MenuSectionUpdatedEvent[]',
        'menu_section_deleted_event' => '\Flipdish\Client\Model\MenuSectionDeletedEvent[]',
        'menu_section_item_created_event' => '\Flipdish\Client\Model\MenuSectionItemCreatedEvent[]',
        'menu_section_item_updated_event' => '\Flipdish\Client\Model\MenuSectionItemUpdatedEvent[]',
        'menu_section_item_deleted_event' => '\Flipdish\Client\Model\MenuSectionItemDeletedEvent[]',
        'menu_item_option_set_created_event' => '\Flipdish\Client\Model\MenuItemOptionSetCreatedEvent[]',
        'menu_item_option_set_updated_event' => '\Flipdish\Client\Model\MenuItemOptionSetUpdatedEvent[]',
        'menu_item_option_set_deleted_event' => '\Flipdish\Client\Model\MenuItemOptionSetDeletedEvent[]',
        'menu_item_option_set_item_created_event' => '\Flipdish\Client\Model\MenuItemOptionSetItemCreatedEvent[]',
        'menu_item_option_set_item_updated_event' => '\Flipdish\Client\Model\MenuItemOptionSetItemUpdatedEvent[]',
        'menu_item_option_set_item_deleted_event' => '\Flipdish\Client\Model\MenuItemOptionSetItemDeletedEvent[]',
        'store_group_created_event' => '\Flipdish\Client\Model\StoreGroupCreatedEvent[]',
        'store_group_updated_event' => '\Flipdish\Client\Model\StoreGroupUpdatedEvent[]',
        'store_group_deleted_event' => '\Flipdish\Client\Model\StoreGroupDeletedEvent[]',
        'customer_created_event' => '\Flipdish\Client\Model\CustomerCreatedEvent[]',
        'customer_updated_event' => '\Flipdish\Client\Model\CustomerUpdatedEvent[]',
        'customer_consent_updated_event' => '\Flipdish\Client\Model\CustomerConsentUpdatedEvent[]',
        'webhook_subscription_created_event' => '\Flipdish\Client\Model\WebhookSubscriptionCreatedEvent[]',
        'webhook_subscription_updated_event' => '\Flipdish\Client\Model\WebhookSubscriptionUpdatedEvent[]',
        'webhook_subscription_deleted_event' => '\Flipdish\Client\Model\WebhookSubscriptionDeletedEvent[]',
        'printer_turned_on_event' => '\Flipdish\Client\Model\PrinterTurnedOnEvent[]',
        'printer_turned_off_event' => '\Flipdish\Client\Model\PrinterTurnedOffEvent[]',
        'printer_assigned_to_store_event' => '\Flipdish\Client\Model\PrinterAssignedToStoreEvent[]',
        'printer_unassigned_from_store_event' => '\Flipdish\Client\Model\PrinterUnassignedFromStoreEvent[]',
        'phone_call_started_event' => '\Flipdish\Client\Model\PhoneCallStartedEvent[]',
        'phone_call_ended_event' => '\Flipdish\Client\Model\PhoneCallEndedEvent[]',
        'loyalty_campaign_created_event' => '\Flipdish\Client\Model\LoyaltyCampaignCreatedEvent[]',
        'loyalty_campaign_deleted_event' => '\Flipdish\Client\Model\LoyaltyCampaignDeletedEvent[]',
        'loyalty_campaign_updated_event' => '\Flipdish\Client\Model\LoyaltyCampaignUpdatedEvent[]',
        'retention_campaign_created_event' => '\Flipdish\Client\Model\RetentionCampaignCreatedEvent[]',
        'retention_campaign_deleted_event' => '\Flipdish\Client\Model\RetentionCampaignDeletedEvent[]',
        'retention_campaign_updated_event' => '\Flipdish\Client\Model\RetentionCampaignUpdatedEvent[]',
        'sms_received_event' => '\Flipdish\Client\Model\SmsReceivedEvent[]',
        'user_login_event' => '\Flipdish\Client\Model\UserLoginEvent[]',
        'user_created_event' => '\Flipdish\Client\Model\UserCreatedEvent[]',
        'user_updated_event' => '\Flipdish\Client\Model\UserUpdatedEvent[]',
        'user_deleted_event' => '\Flipdish\Client\Model\UserDeletedEvent[]',
        'voucher_created_event' => '\Flipdish\Client\Model\VoucherCreatedEvent[]',
        'voucher_updated_event' => '\Flipdish\Client\Model\VoucherUpdatedEvent[]',
        'voucher_deleted_event' => '\Flipdish\Client\Model\VoucherDeletedEvent[]',
        'teammate_invite_sent_event' => '\Flipdish\Client\Model\TeammateInviteSentEvent[]',
        'teammate_invite_accepted_event' => '\Flipdish\Client\Model\TeammateInviteAcceptedEvent[]',
        'teammate_updated_event' => '\Flipdish\Client\Model\TeammateUpdatedEvent[]',
        'teammate_deleted_event' => '\Flipdish\Client\Model\TeammateDeletedEvent[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'analytics_client_event' => null,
        'order_accepted_event' => null,
        'order_created_event' => null,
        'order_rating_updated_event' => null,
        'order_refunded_event' => null,
        'order_rejected_event' => null,
        'order_tip_updated_event' => null,
        'store_created_event' => null,
        'store_deleted_event' => null,
        'store_address_updated_event' => null,
        'delivery_zone_created_event' => null,
        'delivery_zone_updated_event' => null,
        'delivery_zone_deleted_event' => null,
        'store_opening_hours_updated_event' => null,
        'store_business_hours_override_created_event' => null,
        'store_business_hours_override_deleted_event' => null,
        'store_updated_event' => null,
        'menu_created_event' => null,
        'menu_updated_event' => null,
        'menu_section_created_event' => null,
        'menu_section_updated_event' => null,
        'menu_section_deleted_event' => null,
        'menu_section_item_created_event' => null,
        'menu_section_item_updated_event' => null,
        'menu_section_item_deleted_event' => null,
        'menu_item_option_set_created_event' => null,
        'menu_item_option_set_updated_event' => null,
        'menu_item_option_set_deleted_event' => null,
        'menu_item_option_set_item_created_event' => null,
        'menu_item_option_set_item_updated_event' => null,
        'menu_item_option_set_item_deleted_event' => null,
        'store_group_created_event' => null,
        'store_group_updated_event' => null,
        'store_group_deleted_event' => null,
        'customer_created_event' => null,
        'customer_updated_event' => null,
        'customer_consent_updated_event' => null,
        'webhook_subscription_created_event' => null,
        'webhook_subscription_updated_event' => null,
        'webhook_subscription_deleted_event' => null,
        'printer_turned_on_event' => null,
        'printer_turned_off_event' => null,
        'printer_assigned_to_store_event' => null,
        'printer_unassigned_from_store_event' => null,
        'phone_call_started_event' => null,
        'phone_call_ended_event' => null,
        'loyalty_campaign_created_event' => null,
        'loyalty_campaign_deleted_event' => null,
        'loyalty_campaign_updated_event' => null,
        'retention_campaign_created_event' => null,
        'retention_campaign_deleted_event' => null,
        'retention_campaign_updated_event' => null,
        'sms_received_event' => null,
        'user_login_event' => null,
        'user_created_event' => null,
        'user_updated_event' => null,
        'user_deleted_event' => null,
        'voucher_created_event' => null,
        'voucher_updated_event' => null,
        'voucher_deleted_event' => null,
        'teammate_invite_sent_event' => null,
        'teammate_invite_accepted_event' => null,
        'teammate_updated_event' => null,
        'teammate_deleted_event' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'analytics_client_event' => 'AnalyticsClientEvent',
        'order_accepted_event' => 'OrderAcceptedEvent',
        'order_created_event' => 'OrderCreatedEvent',
        'order_rating_updated_event' => 'OrderRatingUpdatedEvent',
        'order_refunded_event' => 'OrderRefundedEvent',
        'order_rejected_event' => 'OrderRejectedEvent',
        'order_tip_updated_event' => 'OrderTipUpdatedEvent',
        'store_created_event' => 'StoreCreatedEvent',
        'store_deleted_event' => 'StoreDeletedEvent',
        'store_address_updated_event' => 'StoreAddressUpdatedEvent',
        'delivery_zone_created_event' => 'DeliveryZoneCreatedEvent',
        'delivery_zone_updated_event' => 'DeliveryZoneUpdatedEvent',
        'delivery_zone_deleted_event' => 'DeliveryZoneDeletedEvent',
        'store_opening_hours_updated_event' => 'StoreOpeningHoursUpdatedEvent',
        'store_business_hours_override_created_event' => 'StoreBusinessHoursOverrideCreatedEvent',
        'store_business_hours_override_deleted_event' => 'StoreBusinessHoursOverrideDeletedEvent',
        'store_updated_event' => 'StoreUpdatedEvent',
        'menu_created_event' => 'MenuCreatedEvent',
        'menu_updated_event' => 'MenuUpdatedEvent',
        'menu_section_created_event' => 'MenuSectionCreatedEvent',
        'menu_section_updated_event' => 'MenuSectionUpdatedEvent',
        'menu_section_deleted_event' => 'MenuSectionDeletedEvent',
        'menu_section_item_created_event' => 'MenuSectionItemCreatedEvent',
        'menu_section_item_updated_event' => 'MenuSectionItemUpdatedEvent',
        'menu_section_item_deleted_event' => 'MenuSectionItemDeletedEvent',
        'menu_item_option_set_created_event' => 'MenuItemOptionSetCreatedEvent',
        'menu_item_option_set_updated_event' => 'MenuItemOptionSetUpdatedEvent',
        'menu_item_option_set_deleted_event' => 'MenuItemOptionSetDeletedEvent',
        'menu_item_option_set_item_created_event' => 'MenuItemOptionSetItemCreatedEvent',
        'menu_item_option_set_item_updated_event' => 'MenuItemOptionSetItemUpdatedEvent',
        'menu_item_option_set_item_deleted_event' => 'MenuItemOptionSetItemDeletedEvent',
        'store_group_created_event' => 'StoreGroupCreatedEvent',
        'store_group_updated_event' => 'StoreGroupUpdatedEvent',
        'store_group_deleted_event' => 'StoreGroupDeletedEvent',
        'customer_created_event' => 'CustomerCreatedEvent',
        'customer_updated_event' => 'CustomerUpdatedEvent',
        'customer_consent_updated_event' => 'CustomerConsentUpdatedEvent',
        'webhook_subscription_created_event' => 'WebhookSubscriptionCreatedEvent',
        'webhook_subscription_updated_event' => 'WebhookSubscriptionUpdatedEvent',
        'webhook_subscription_deleted_event' => 'WebhookSubscriptionDeletedEvent',
        'printer_turned_on_event' => 'PrinterTurnedOnEvent',
        'printer_turned_off_event' => 'PrinterTurnedOffEvent',
        'printer_assigned_to_store_event' => 'PrinterAssignedToStoreEvent',
        'printer_unassigned_from_store_event' => 'PrinterUnassignedFromStoreEvent',
        'phone_call_started_event' => 'PhoneCallStartedEvent',
        'phone_call_ended_event' => 'PhoneCallEndedEvent',
        'loyalty_campaign_created_event' => 'LoyaltyCampaignCreatedEvent',
        'loyalty_campaign_deleted_event' => 'LoyaltyCampaignDeletedEvent',
        'loyalty_campaign_updated_event' => 'LoyaltyCampaignUpdatedEvent',
        'retention_campaign_created_event' => 'RetentionCampaignCreatedEvent',
        'retention_campaign_deleted_event' => 'RetentionCampaignDeletedEvent',
        'retention_campaign_updated_event' => 'RetentionCampaignUpdatedEvent',
        'sms_received_event' => 'SmsReceivedEvent',
        'user_login_event' => 'UserLoginEvent',
        'user_created_event' => 'UserCreatedEvent',
        'user_updated_event' => 'UserUpdatedEvent',
        'user_deleted_event' => 'UserDeletedEvent',
        'voucher_created_event' => 'VoucherCreatedEvent',
        'voucher_updated_event' => 'VoucherUpdatedEvent',
        'voucher_deleted_event' => 'VoucherDeletedEvent',
        'teammate_invite_sent_event' => 'TeammateInviteSentEvent',
        'teammate_invite_accepted_event' => 'TeammateInviteAcceptedEvent',
        'teammate_updated_event' => 'TeammateUpdatedEvent',
        'teammate_deleted_event' => 'TeammateDeletedEvent'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'analytics_client_event' => 'setAnalyticsClientEvent',
        'order_accepted_event' => 'setOrderAcceptedEvent',
        'order_created_event' => 'setOrderCreatedEvent',
        'order_rating_updated_event' => 'setOrderRatingUpdatedEvent',
        'order_refunded_event' => 'setOrderRefundedEvent',
        'order_rejected_event' => 'setOrderRejectedEvent',
        'order_tip_updated_event' => 'setOrderTipUpdatedEvent',
        'store_created_event' => 'setStoreCreatedEvent',
        'store_deleted_event' => 'setStoreDeletedEvent',
        'store_address_updated_event' => 'setStoreAddressUpdatedEvent',
        'delivery_zone_created_event' => 'setDeliveryZoneCreatedEvent',
        'delivery_zone_updated_event' => 'setDeliveryZoneUpdatedEvent',
        'delivery_zone_deleted_event' => 'setDeliveryZoneDeletedEvent',
        'store_opening_hours_updated_event' => 'setStoreOpeningHoursUpdatedEvent',
        'store_business_hours_override_created_event' => 'setStoreBusinessHoursOverrideCreatedEvent',
        'store_business_hours_override_deleted_event' => 'setStoreBusinessHoursOverrideDeletedEvent',
        'store_updated_event' => 'setStoreUpdatedEvent',
        'menu_created_event' => 'setMenuCreatedEvent',
        'menu_updated_event' => 'setMenuUpdatedEvent',
        'menu_section_created_event' => 'setMenuSectionCreatedEvent',
        'menu_section_updated_event' => 'setMenuSectionUpdatedEvent',
        'menu_section_deleted_event' => 'setMenuSectionDeletedEvent',
        'menu_section_item_created_event' => 'setMenuSectionItemCreatedEvent',
        'menu_section_item_updated_event' => 'setMenuSectionItemUpdatedEvent',
        'menu_section_item_deleted_event' => 'setMenuSectionItemDeletedEvent',
        'menu_item_option_set_created_event' => 'setMenuItemOptionSetCreatedEvent',
        'menu_item_option_set_updated_event' => 'setMenuItemOptionSetUpdatedEvent',
        'menu_item_option_set_deleted_event' => 'setMenuItemOptionSetDeletedEvent',
        'menu_item_option_set_item_created_event' => 'setMenuItemOptionSetItemCreatedEvent',
        'menu_item_option_set_item_updated_event' => 'setMenuItemOptionSetItemUpdatedEvent',
        'menu_item_option_set_item_deleted_event' => 'setMenuItemOptionSetItemDeletedEvent',
        'store_group_created_event' => 'setStoreGroupCreatedEvent',
        'store_group_updated_event' => 'setStoreGroupUpdatedEvent',
        'store_group_deleted_event' => 'setStoreGroupDeletedEvent',
        'customer_created_event' => 'setCustomerCreatedEvent',
        'customer_updated_event' => 'setCustomerUpdatedEvent',
        'customer_consent_updated_event' => 'setCustomerConsentUpdatedEvent',
        'webhook_subscription_created_event' => 'setWebhookSubscriptionCreatedEvent',
        'webhook_subscription_updated_event' => 'setWebhookSubscriptionUpdatedEvent',
        'webhook_subscription_deleted_event' => 'setWebhookSubscriptionDeletedEvent',
        'printer_turned_on_event' => 'setPrinterTurnedOnEvent',
        'printer_turned_off_event' => 'setPrinterTurnedOffEvent',
        'printer_assigned_to_store_event' => 'setPrinterAssignedToStoreEvent',
        'printer_unassigned_from_store_event' => 'setPrinterUnassignedFromStoreEvent',
        'phone_call_started_event' => 'setPhoneCallStartedEvent',
        'phone_call_ended_event' => 'setPhoneCallEndedEvent',
        'loyalty_campaign_created_event' => 'setLoyaltyCampaignCreatedEvent',
        'loyalty_campaign_deleted_event' => 'setLoyaltyCampaignDeletedEvent',
        'loyalty_campaign_updated_event' => 'setLoyaltyCampaignUpdatedEvent',
        'retention_campaign_created_event' => 'setRetentionCampaignCreatedEvent',
        'retention_campaign_deleted_event' => 'setRetentionCampaignDeletedEvent',
        'retention_campaign_updated_event' => 'setRetentionCampaignUpdatedEvent',
        'sms_received_event' => 'setSmsReceivedEvent',
        'user_login_event' => 'setUserLoginEvent',
        'user_created_event' => 'setUserCreatedEvent',
        'user_updated_event' => 'setUserUpdatedEvent',
        'user_deleted_event' => 'setUserDeletedEvent',
        'voucher_created_event' => 'setVoucherCreatedEvent',
        'voucher_updated_event' => 'setVoucherUpdatedEvent',
        'voucher_deleted_event' => 'setVoucherDeletedEvent',
        'teammate_invite_sent_event' => 'setTeammateInviteSentEvent',
        'teammate_invite_accepted_event' => 'setTeammateInviteAcceptedEvent',
        'teammate_updated_event' => 'setTeammateUpdatedEvent',
        'teammate_deleted_event' => 'setTeammateDeletedEvent'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'analytics_client_event' => 'getAnalyticsClientEvent',
        'order_accepted_event' => 'getOrderAcceptedEvent',
        'order_created_event' => 'getOrderCreatedEvent',
        'order_rating_updated_event' => 'getOrderRatingUpdatedEvent',
        'order_refunded_event' => 'getOrderRefundedEvent',
        'order_rejected_event' => 'getOrderRejectedEvent',
        'order_tip_updated_event' => 'getOrderTipUpdatedEvent',
        'store_created_event' => 'getStoreCreatedEvent',
        'store_deleted_event' => 'getStoreDeletedEvent',
        'store_address_updated_event' => 'getStoreAddressUpdatedEvent',
        'delivery_zone_created_event' => 'getDeliveryZoneCreatedEvent',
        'delivery_zone_updated_event' => 'getDeliveryZoneUpdatedEvent',
        'delivery_zone_deleted_event' => 'getDeliveryZoneDeletedEvent',
        'store_opening_hours_updated_event' => 'getStoreOpeningHoursUpdatedEvent',
        'store_business_hours_override_created_event' => 'getStoreBusinessHoursOverrideCreatedEvent',
        'store_business_hours_override_deleted_event' => 'getStoreBusinessHoursOverrideDeletedEvent',
        'store_updated_event' => 'getStoreUpdatedEvent',
        'menu_created_event' => 'getMenuCreatedEvent',
        'menu_updated_event' => 'getMenuUpdatedEvent',
        'menu_section_created_event' => 'getMenuSectionCreatedEvent',
        'menu_section_updated_event' => 'getMenuSectionUpdatedEvent',
        'menu_section_deleted_event' => 'getMenuSectionDeletedEvent',
        'menu_section_item_created_event' => 'getMenuSectionItemCreatedEvent',
        'menu_section_item_updated_event' => 'getMenuSectionItemUpdatedEvent',
        'menu_section_item_deleted_event' => 'getMenuSectionItemDeletedEvent',
        'menu_item_option_set_created_event' => 'getMenuItemOptionSetCreatedEvent',
        'menu_item_option_set_updated_event' => 'getMenuItemOptionSetUpdatedEvent',
        'menu_item_option_set_deleted_event' => 'getMenuItemOptionSetDeletedEvent',
        'menu_item_option_set_item_created_event' => 'getMenuItemOptionSetItemCreatedEvent',
        'menu_item_option_set_item_updated_event' => 'getMenuItemOptionSetItemUpdatedEvent',
        'menu_item_option_set_item_deleted_event' => 'getMenuItemOptionSetItemDeletedEvent',
        'store_group_created_event' => 'getStoreGroupCreatedEvent',
        'store_group_updated_event' => 'getStoreGroupUpdatedEvent',
        'store_group_deleted_event' => 'getStoreGroupDeletedEvent',
        'customer_created_event' => 'getCustomerCreatedEvent',
        'customer_updated_event' => 'getCustomerUpdatedEvent',
        'customer_consent_updated_event' => 'getCustomerConsentUpdatedEvent',
        'webhook_subscription_created_event' => 'getWebhookSubscriptionCreatedEvent',
        'webhook_subscription_updated_event' => 'getWebhookSubscriptionUpdatedEvent',
        'webhook_subscription_deleted_event' => 'getWebhookSubscriptionDeletedEvent',
        'printer_turned_on_event' => 'getPrinterTurnedOnEvent',
        'printer_turned_off_event' => 'getPrinterTurnedOffEvent',
        'printer_assigned_to_store_event' => 'getPrinterAssignedToStoreEvent',
        'printer_unassigned_from_store_event' => 'getPrinterUnassignedFromStoreEvent',
        'phone_call_started_event' => 'getPhoneCallStartedEvent',
        'phone_call_ended_event' => 'getPhoneCallEndedEvent',
        'loyalty_campaign_created_event' => 'getLoyaltyCampaignCreatedEvent',
        'loyalty_campaign_deleted_event' => 'getLoyaltyCampaignDeletedEvent',
        'loyalty_campaign_updated_event' => 'getLoyaltyCampaignUpdatedEvent',
        'retention_campaign_created_event' => 'getRetentionCampaignCreatedEvent',
        'retention_campaign_deleted_event' => 'getRetentionCampaignDeletedEvent',
        'retention_campaign_updated_event' => 'getRetentionCampaignUpdatedEvent',
        'sms_received_event' => 'getSmsReceivedEvent',
        'user_login_event' => 'getUserLoginEvent',
        'user_created_event' => 'getUserCreatedEvent',
        'user_updated_event' => 'getUserUpdatedEvent',
        'user_deleted_event' => 'getUserDeletedEvent',
        'voucher_created_event' => 'getVoucherCreatedEvent',
        'voucher_updated_event' => 'getVoucherUpdatedEvent',
        'voucher_deleted_event' => 'getVoucherDeletedEvent',
        'teammate_invite_sent_event' => 'getTeammateInviteSentEvent',
        'teammate_invite_accepted_event' => 'getTeammateInviteAcceptedEvent',
        'teammate_updated_event' => 'getTeammateUpdatedEvent',
        'teammate_deleted_event' => 'getTeammateDeletedEvent'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['analytics_client_event'] = isset($data['analytics_client_event']) ? $data['analytics_client_event'] : null;
        $this->container['order_accepted_event'] = isset($data['order_accepted_event']) ? $data['order_accepted_event'] : null;
        $this->container['order_created_event'] = isset($data['order_created_event']) ? $data['order_created_event'] : null;
        $this->container['order_rating_updated_event'] = isset($data['order_rating_updated_event']) ? $data['order_rating_updated_event'] : null;
        $this->container['order_refunded_event'] = isset($data['order_refunded_event']) ? $data['order_refunded_event'] : null;
        $this->container['order_rejected_event'] = isset($data['order_rejected_event']) ? $data['order_rejected_event'] : null;
        $this->container['order_tip_updated_event'] = isset($data['order_tip_updated_event']) ? $data['order_tip_updated_event'] : null;
        $this->container['store_created_event'] = isset($data['store_created_event']) ? $data['store_created_event'] : null;
        $this->container['store_deleted_event'] = isset($data['store_deleted_event']) ? $data['store_deleted_event'] : null;
        $this->container['store_address_updated_event'] = isset($data['store_address_updated_event']) ? $data['store_address_updated_event'] : null;
        $this->container['delivery_zone_created_event'] = isset($data['delivery_zone_created_event']) ? $data['delivery_zone_created_event'] : null;
        $this->container['delivery_zone_updated_event'] = isset($data['delivery_zone_updated_event']) ? $data['delivery_zone_updated_event'] : null;
        $this->container['delivery_zone_deleted_event'] = isset($data['delivery_zone_deleted_event']) ? $data['delivery_zone_deleted_event'] : null;
        $this->container['store_opening_hours_updated_event'] = isset($data['store_opening_hours_updated_event']) ? $data['store_opening_hours_updated_event'] : null;
        $this->container['store_business_hours_override_created_event'] = isset($data['store_business_hours_override_created_event']) ? $data['store_business_hours_override_created_event'] : null;
        $this->container['store_business_hours_override_deleted_event'] = isset($data['store_business_hours_override_deleted_event']) ? $data['store_business_hours_override_deleted_event'] : null;
        $this->container['store_updated_event'] = isset($data['store_updated_event']) ? $data['store_updated_event'] : null;
        $this->container['menu_created_event'] = isset($data['menu_created_event']) ? $data['menu_created_event'] : null;
        $this->container['menu_updated_event'] = isset($data['menu_updated_event']) ? $data['menu_updated_event'] : null;
        $this->container['menu_section_created_event'] = isset($data['menu_section_created_event']) ? $data['menu_section_created_event'] : null;
        $this->container['menu_section_updated_event'] = isset($data['menu_section_updated_event']) ? $data['menu_section_updated_event'] : null;
        $this->container['menu_section_deleted_event'] = isset($data['menu_section_deleted_event']) ? $data['menu_section_deleted_event'] : null;
        $this->container['menu_section_item_created_event'] = isset($data['menu_section_item_created_event']) ? $data['menu_section_item_created_event'] : null;
        $this->container['menu_section_item_updated_event'] = isset($data['menu_section_item_updated_event']) ? $data['menu_section_item_updated_event'] : null;
        $this->container['menu_section_item_deleted_event'] = isset($data['menu_section_item_deleted_event']) ? $data['menu_section_item_deleted_event'] : null;
        $this->container['menu_item_option_set_created_event'] = isset($data['menu_item_option_set_created_event']) ? $data['menu_item_option_set_created_event'] : null;
        $this->container['menu_item_option_set_updated_event'] = isset($data['menu_item_option_set_updated_event']) ? $data['menu_item_option_set_updated_event'] : null;
        $this->container['menu_item_option_set_deleted_event'] = isset($data['menu_item_option_set_deleted_event']) ? $data['menu_item_option_set_deleted_event'] : null;
        $this->container['menu_item_option_set_item_created_event'] = isset($data['menu_item_option_set_item_created_event']) ? $data['menu_item_option_set_item_created_event'] : null;
        $this->container['menu_item_option_set_item_updated_event'] = isset($data['menu_item_option_set_item_updated_event']) ? $data['menu_item_option_set_item_updated_event'] : null;
        $this->container['menu_item_option_set_item_deleted_event'] = isset($data['menu_item_option_set_item_deleted_event']) ? $data['menu_item_option_set_item_deleted_event'] : null;
        $this->container['store_group_created_event'] = isset($data['store_group_created_event']) ? $data['store_group_created_event'] : null;
        $this->container['store_group_updated_event'] = isset($data['store_group_updated_event']) ? $data['store_group_updated_event'] : null;
        $this->container['store_group_deleted_event'] = isset($data['store_group_deleted_event']) ? $data['store_group_deleted_event'] : null;
        $this->container['customer_created_event'] = isset($data['customer_created_event']) ? $data['customer_created_event'] : null;
        $this->container['customer_updated_event'] = isset($data['customer_updated_event']) ? $data['customer_updated_event'] : null;
        $this->container['customer_consent_updated_event'] = isset($data['customer_consent_updated_event']) ? $data['customer_consent_updated_event'] : null;
        $this->container['webhook_subscription_created_event'] = isset($data['webhook_subscription_created_event']) ? $data['webhook_subscription_created_event'] : null;
        $this->container['webhook_subscription_updated_event'] = isset($data['webhook_subscription_updated_event']) ? $data['webhook_subscription_updated_event'] : null;
        $this->container['webhook_subscription_deleted_event'] = isset($data['webhook_subscription_deleted_event']) ? $data['webhook_subscription_deleted_event'] : null;
        $this->container['printer_turned_on_event'] = isset($data['printer_turned_on_event']) ? $data['printer_turned_on_event'] : null;
        $this->container['printer_turned_off_event'] = isset($data['printer_turned_off_event']) ? $data['printer_turned_off_event'] : null;
        $this->container['printer_assigned_to_store_event'] = isset($data['printer_assigned_to_store_event']) ? $data['printer_assigned_to_store_event'] : null;
        $this->container['printer_unassigned_from_store_event'] = isset($data['printer_unassigned_from_store_event']) ? $data['printer_unassigned_from_store_event'] : null;
        $this->container['phone_call_started_event'] = isset($data['phone_call_started_event']) ? $data['phone_call_started_event'] : null;
        $this->container['phone_call_ended_event'] = isset($data['phone_call_ended_event']) ? $data['phone_call_ended_event'] : null;
        $this->container['loyalty_campaign_created_event'] = isset($data['loyalty_campaign_created_event']) ? $data['loyalty_campaign_created_event'] : null;
        $this->container['loyalty_campaign_deleted_event'] = isset($data['loyalty_campaign_deleted_event']) ? $data['loyalty_campaign_deleted_event'] : null;
        $this->container['loyalty_campaign_updated_event'] = isset($data['loyalty_campaign_updated_event']) ? $data['loyalty_campaign_updated_event'] : null;
        $this->container['retention_campaign_created_event'] = isset($data['retention_campaign_created_event']) ? $data['retention_campaign_created_event'] : null;
        $this->container['retention_campaign_deleted_event'] = isset($data['retention_campaign_deleted_event']) ? $data['retention_campaign_deleted_event'] : null;
        $this->container['retention_campaign_updated_event'] = isset($data['retention_campaign_updated_event']) ? $data['retention_campaign_updated_event'] : null;
        $this->container['sms_received_event'] = isset($data['sms_received_event']) ? $data['sms_received_event'] : null;
        $this->container['user_login_event'] = isset($data['user_login_event']) ? $data['user_login_event'] : null;
        $this->container['user_created_event'] = isset($data['user_created_event']) ? $data['user_created_event'] : null;
        $this->container['user_updated_event'] = isset($data['user_updated_event']) ? $data['user_updated_event'] : null;
        $this->container['user_deleted_event'] = isset($data['user_deleted_event']) ? $data['user_deleted_event'] : null;
        $this->container['voucher_created_event'] = isset($data['voucher_created_event']) ? $data['voucher_created_event'] : null;
        $this->container['voucher_updated_event'] = isset($data['voucher_updated_event']) ? $data['voucher_updated_event'] : null;
        $this->container['voucher_deleted_event'] = isset($data['voucher_deleted_event']) ? $data['voucher_deleted_event'] : null;
        $this->container['teammate_invite_sent_event'] = isset($data['teammate_invite_sent_event']) ? $data['teammate_invite_sent_event'] : null;
        $this->container['teammate_invite_accepted_event'] = isset($data['teammate_invite_accepted_event']) ? $data['teammate_invite_accepted_event'] : null;
        $this->container['teammate_updated_event'] = isset($data['teammate_updated_event']) ? $data['teammate_updated_event'] : null;
        $this->container['teammate_deleted_event'] = isset($data['teammate_deleted_event']) ? $data['teammate_deleted_event'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets analytics_client_event
     *
     * @return \Flipdish\Client\Model\AnalyticsClientEvent[]
     */
    public function getAnalyticsClientEvent()
    {
        return $this->container['analytics_client_event'];
    }

    /**
     * Sets analytics_client_event
     *
     * @param \Flipdish\Client\Model\AnalyticsClientEvent[] $analytics_client_event Client Analytics events
     *
     * @return $this
     */
    public function setAnalyticsClientEvent($analytics_client_event)
    {
        $this->container['analytics_client_event'] = $analytics_client_event;

        return $this;
    }

    /**
     * Gets order_accepted_event
     *
     * @return \Flipdish\Client\Model\OrderAcceptedEvent[]
     */
    public function getOrderAcceptedEvent()
    {
        return $this->container['order_accepted_event'];
    }

    /**
     * Sets order_accepted_event
     *
     * @param \Flipdish\Client\Model\OrderAcceptedEvent[] $order_accepted_event Order accepted events
     *
     * @return $this
     */
    public function setOrderAcceptedEvent($order_accepted_event)
    {
        $this->container['order_accepted_event'] = $order_accepted_event;

        return $this;
    }

    /**
     * Gets order_created_event
     *
     * @return \Flipdish\Client\Model\OrderCreatedEvent[]
     */
    public function getOrderCreatedEvent()
    {
        return $this->container['order_created_event'];
    }

    /**
     * Sets order_created_event
     *
     * @param \Flipdish\Client\Model\OrderCreatedEvent[] $order_created_event Order created events
     *
     * @return $this
     */
    public function setOrderCreatedEvent($order_created_event)
    {
        $this->container['order_created_event'] = $order_created_event;

        return $this;
    }

    /**
     * Gets order_rating_updated_event
     *
     * @return \Flipdish\Client\Model\OrderRatingUpdatedEvent[]
     */
    public function getOrderRatingUpdatedEvent()
    {
        return $this->container['order_rating_updated_event'];
    }

    /**
     * Sets order_rating_updated_event
     *
     * @param \Flipdish\Client\Model\OrderRatingUpdatedEvent[] $order_rating_updated_event Order rating updated events
     *
     * @return $this
     */
    public function setOrderRatingUpdatedEvent($order_rating_updated_event)
    {
        $this->container['order_rating_updated_event'] = $order_rating_updated_event;

        return $this;
    }

    /**
     * Gets order_refunded_event
     *
     * @return \Flipdish\Client\Model\OrderRefundedEvent[]
     */
    public function getOrderRefundedEvent()
    {
        return $this->container['order_refunded_event'];
    }

    /**
     * Sets order_refunded_event
     *
     * @param \Flipdish\Client\Model\OrderRefundedEvent[] $order_refunded_event Order refunded events
     *
     * @return $this
     */
    public function setOrderRefundedEvent($order_refunded_event)
    {
        $this->container['order_refunded_event'] = $order_refunded_event;

        return $this;
    }

    /**
     * Gets order_rejected_event
     *
     * @return \Flipdish\Client\Model\OrderRejectedEvent[]
     */
    public function getOrderRejectedEvent()
    {
        return $this->container['order_rejected_event'];
    }

    /**
     * Sets order_rejected_event
     *
     * @param \Flipdish\Client\Model\OrderRejectedEvent[] $order_rejected_event Order rejected events
     *
     * @return $this
     */
    public function setOrderRejectedEvent($order_rejected_event)
    {
        $this->container['order_rejected_event'] = $order_rejected_event;

        return $this;
    }

    /**
     * Gets order_tip_updated_event
     *
     * @return \Flipdish\Client\Model\OrderTipUpdatedEvent[]
     */
    public function getOrderTipUpdatedEvent()
    {
        return $this->container['order_tip_updated_event'];
    }

    /**
     * Sets order_tip_updated_event
     *
     * @param \Flipdish\Client\Model\OrderTipUpdatedEvent[] $order_tip_updated_event Order tip updated events
     *
     * @return $this
     */
    public function setOrderTipUpdatedEvent($order_tip_updated_event)
    {
        $this->container['order_tip_updated_event'] = $order_tip_updated_event;

        return $this;
    }

    /**
     * Gets store_created_event
     *
     * @return \Flipdish\Client\Model\StoreCreatedEvent[]
     */
    public function getStoreCreatedEvent()
    {
        return $this->container['store_created_event'];
    }

    /**
     * Sets store_created_event
     *
     * @param \Flipdish\Client\Model\StoreCreatedEvent[] $store_created_event Store created events
     *
     * @return $this
     */
    public function setStoreCreatedEvent($store_created_event)
    {
        $this->container['store_created_event'] = $store_created_event;

        return $this;
    }

    /**
     * Gets store_deleted_event
     *
     * @return \Flipdish\Client\Model\StoreDeletedEvent[]
     */
    public function getStoreDeletedEvent()
    {
        return $this->container['store_deleted_event'];
    }

    /**
     * Sets store_deleted_event
     *
     * @param \Flipdish\Client\Model\StoreDeletedEvent[] $store_deleted_event Store deleted events
     *
     * @return $this
     */
    public function setStoreDeletedEvent($store_deleted_event)
    {
        $this->container['store_deleted_event'] = $store_deleted_event;

        return $this;
    }

    /**
     * Gets store_address_updated_event
     *
     * @return \Flipdish\Client\Model\StoreAddressUpdatedEvent[]
     */
    public function getStoreAddressUpdatedEvent()
    {
        return $this->container['store_address_updated_event'];
    }

    /**
     * Sets store_address_updated_event
     *
     * @param \Flipdish\Client\Model\StoreAddressUpdatedEvent[] $store_address_updated_event Store address updated events
     *
     * @return $this
     */
    public function setStoreAddressUpdatedEvent($store_address_updated_event)
    {
        $this->container['store_address_updated_event'] = $store_address_updated_event;

        return $this;
    }

    /**
     * Gets delivery_zone_created_event
     *
     * @return \Flipdish\Client\Model\DeliveryZoneCreatedEvent[]
     */
    public function getDeliveryZoneCreatedEvent()
    {
        return $this->container['delivery_zone_created_event'];
    }

    /**
     * Sets delivery_zone_created_event
     *
     * @param \Flipdish\Client\Model\DeliveryZoneCreatedEvent[] $delivery_zone_created_event Store delivery zone created events
     *
     * @return $this
     */
    public function setDeliveryZoneCreatedEvent($delivery_zone_created_event)
    {
        $this->container['delivery_zone_created_event'] = $delivery_zone_created_event;

        return $this;
    }

    /**
     * Gets delivery_zone_updated_event
     *
     * @return \Flipdish\Client\Model\DeliveryZoneUpdatedEvent[]
     */
    public function getDeliveryZoneUpdatedEvent()
    {
        return $this->container['delivery_zone_updated_event'];
    }

    /**
     * Sets delivery_zone_updated_event
     *
     * @param \Flipdish\Client\Model\DeliveryZoneUpdatedEvent[] $delivery_zone_updated_event Store delivery zone updated events
     *
     * @return $this
     */
    public function setDeliveryZoneUpdatedEvent($delivery_zone_updated_event)
    {
        $this->container['delivery_zone_updated_event'] = $delivery_zone_updated_event;

        return $this;
    }

    /**
     * Gets delivery_zone_deleted_event
     *
     * @return \Flipdish\Client\Model\DeliveryZoneDeletedEvent[]
     */
    public function getDeliveryZoneDeletedEvent()
    {
        return $this->container['delivery_zone_deleted_event'];
    }

    /**
     * Sets delivery_zone_deleted_event
     *
     * @param \Flipdish\Client\Model\DeliveryZoneDeletedEvent[] $delivery_zone_deleted_event Store delivery zone deleted events
     *
     * @return $this
     */
    public function setDeliveryZoneDeletedEvent($delivery_zone_deleted_event)
    {
        $this->container['delivery_zone_deleted_event'] = $delivery_zone_deleted_event;

        return $this;
    }

    /**
     * Gets store_opening_hours_updated_event
     *
     * @return \Flipdish\Client\Model\StoreOpeningHoursUpdatedEvent[]
     */
    public function getStoreOpeningHoursUpdatedEvent()
    {
        return $this->container['store_opening_hours_updated_event'];
    }

    /**
     * Sets store_opening_hours_updated_event
     *
     * @param \Flipdish\Client\Model\StoreOpeningHoursUpdatedEvent[] $store_opening_hours_updated_event Store opening hours updated events
     *
     * @return $this
     */
    public function setStoreOpeningHoursUpdatedEvent($store_opening_hours_updated_event)
    {
        $this->container['store_opening_hours_updated_event'] = $store_opening_hours_updated_event;

        return $this;
    }

    /**
     * Gets store_business_hours_override_created_event
     *
     * @return \Flipdish\Client\Model\StoreBusinessHoursOverrideCreatedEvent[]
     */
    public function getStoreBusinessHoursOverrideCreatedEvent()
    {
        return $this->container['store_business_hours_override_created_event'];
    }

    /**
     * Sets store_business_hours_override_created_event
     *
     * @param \Flipdish\Client\Model\StoreBusinessHoursOverrideCreatedEvent[] $store_business_hours_override_created_event Store business hours override created events
     *
     * @return $this
     */
    public function setStoreBusinessHoursOverrideCreatedEvent($store_business_hours_override_created_event)
    {
        $this->container['store_business_hours_override_created_event'] = $store_business_hours_override_created_event;

        return $this;
    }

    /**
     * Gets store_business_hours_override_deleted_event
     *
     * @return \Flipdish\Client\Model\StoreBusinessHoursOverrideDeletedEvent[]
     */
    public function getStoreBusinessHoursOverrideDeletedEvent()
    {
        return $this->container['store_business_hours_override_deleted_event'];
    }

    /**
     * Sets store_business_hours_override_deleted_event
     *
     * @param \Flipdish\Client\Model\StoreBusinessHoursOverrideDeletedEvent[] $store_business_hours_override_deleted_event Store business hours override deleted events
     *
     * @return $this
     */
    public function setStoreBusinessHoursOverrideDeletedEvent($store_business_hours_override_deleted_event)
    {
        $this->container['store_business_hours_override_deleted_event'] = $store_business_hours_override_deleted_event;

        return $this;
    }

    /**
     * Gets store_updated_event
     *
     * @return \Flipdish\Client\Model\StoreUpdatedEvent[]
     */
    public function getStoreUpdatedEvent()
    {
        return $this->container['store_updated_event'];
    }

    /**
     * Sets store_updated_event
     *
     * @param \Flipdish\Client\Model\StoreUpdatedEvent[] $store_updated_event Store updated events
     *
     * @return $this
     */
    public function setStoreUpdatedEvent($store_updated_event)
    {
        $this->container['store_updated_event'] = $store_updated_event;

        return $this;
    }

    /**
     * Gets menu_created_event
     *
     * @return \Flipdish\Client\Model\MenuCreatedEvent[]
     */
    public function getMenuCreatedEvent()
    {
        return $this->container['menu_created_event'];
    }

    /**
     * Sets menu_created_event
     *
     * @param \Flipdish\Client\Model\MenuCreatedEvent[] $menu_created_event Menu created events
     *
     * @return $this
     */
    public function setMenuCreatedEvent($menu_created_event)
    {
        $this->container['menu_created_event'] = $menu_created_event;

        return $this;
    }

    /**
     * Gets menu_updated_event
     *
     * @return \Flipdish\Client\Model\MenuUpdatedEvent[]
     */
    public function getMenuUpdatedEvent()
    {
        return $this->container['menu_updated_event'];
    }

    /**
     * Sets menu_updated_event
     *
     * @param \Flipdish\Client\Model\MenuUpdatedEvent[] $menu_updated_event Menu updated events
     *
     * @return $this
     */
    public function setMenuUpdatedEvent($menu_updated_event)
    {
        $this->container['menu_updated_event'] = $menu_updated_event;

        return $this;
    }

    /**
     * Gets menu_section_created_event
     *
     * @return \Flipdish\Client\Model\MenuSectionCreatedEvent[]
     */
    public function getMenuSectionCreatedEvent()
    {
        return $this->container['menu_section_created_event'];
    }

    /**
     * Sets menu_section_created_event
     *
     * @param \Flipdish\Client\Model\MenuSectionCreatedEvent[] $menu_section_created_event Menu section created events
     *
     * @return $this
     */
    public function setMenuSectionCreatedEvent($menu_section_created_event)
    {
        $this->container['menu_section_created_event'] = $menu_section_created_event;

        return $this;
    }

    /**
     * Gets menu_section_updated_event
     *
     * @return \Flipdish\Client\Model\MenuSectionUpdatedEvent[]
     */
    public function getMenuSectionUpdatedEvent()
    {
        return $this->container['menu_section_updated_event'];
    }

    /**
     * Sets menu_section_updated_event
     *
     * @param \Flipdish\Client\Model\MenuSectionUpdatedEvent[] $menu_section_updated_event Menu section updated events
     *
     * @return $this
     */
    public function setMenuSectionUpdatedEvent($menu_section_updated_event)
    {
        $this->container['menu_section_updated_event'] = $menu_section_updated_event;

        return $this;
    }

    /**
     * Gets menu_section_deleted_event
     *
     * @return \Flipdish\Client\Model\MenuSectionDeletedEvent[]
     */
    public function getMenuSectionDeletedEvent()
    {
        return $this->container['menu_section_deleted_event'];
    }

    /**
     * Sets menu_section_deleted_event
     *
     * @param \Flipdish\Client\Model\MenuSectionDeletedEvent[] $menu_section_deleted_event Menu section deleted events
     *
     * @return $this
     */
    public function setMenuSectionDeletedEvent($menu_section_deleted_event)
    {
        $this->container['menu_section_deleted_event'] = $menu_section_deleted_event;

        return $this;
    }

    /**
     * Gets menu_section_item_created_event
     *
     * @return \Flipdish\Client\Model\MenuSectionItemCreatedEvent[]
     */
    public function getMenuSectionItemCreatedEvent()
    {
        return $this->container['menu_section_item_created_event'];
    }

    /**
     * Sets menu_section_item_created_event
     *
     * @param \Flipdish\Client\Model\MenuSectionItemCreatedEvent[] $menu_section_item_created_event Menu section item created events
     *
     * @return $this
     */
    public function setMenuSectionItemCreatedEvent($menu_section_item_created_event)
    {
        $this->container['menu_section_item_created_event'] = $menu_section_item_created_event;

        return $this;
    }

    /**
     * Gets menu_section_item_updated_event
     *
     * @return \Flipdish\Client\Model\MenuSectionItemUpdatedEvent[]
     */
    public function getMenuSectionItemUpdatedEvent()
    {
        return $this->container['menu_section_item_updated_event'];
    }

    /**
     * Sets menu_section_item_updated_event
     *
     * @param \Flipdish\Client\Model\MenuSectionItemUpdatedEvent[] $menu_section_item_updated_event Menu section item updated events
     *
     * @return $this
     */
    public function setMenuSectionItemUpdatedEvent($menu_section_item_updated_event)
    {
        $this->container['menu_section_item_updated_event'] = $menu_section_item_updated_event;

        return $this;
    }

    /**
     * Gets menu_section_item_deleted_event
     *
     * @return \Flipdish\Client\Model\MenuSectionItemDeletedEvent[]
     */
    public function getMenuSectionItemDeletedEvent()
    {
        return $this->container['menu_section_item_deleted_event'];
    }

    /**
     * Sets menu_section_item_deleted_event
     *
     * @param \Flipdish\Client\Model\MenuSectionItemDeletedEvent[] $menu_section_item_deleted_event Menu section item deleted events
     *
     * @return $this
     */
    public function setMenuSectionItemDeletedEvent($menu_section_item_deleted_event)
    {
        $this->container['menu_section_item_deleted_event'] = $menu_section_item_deleted_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_created_event
     *
     * @return \Flipdish\Client\Model\MenuItemOptionSetCreatedEvent[]
     */
    public function getMenuItemOptionSetCreatedEvent()
    {
        return $this->container['menu_item_option_set_created_event'];
    }

    /**
     * Sets menu_item_option_set_created_event
     *
     * @param \Flipdish\Client\Model\MenuItemOptionSetCreatedEvent[] $menu_item_option_set_created_event Menu item option set created events
     *
     * @return $this
     */
    public function setMenuItemOptionSetCreatedEvent($menu_item_option_set_created_event)
    {
        $this->container['menu_item_option_set_created_event'] = $menu_item_option_set_created_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_updated_event
     *
     * @return \Flipdish\Client\Model\MenuItemOptionSetUpdatedEvent[]
     */
    public function getMenuItemOptionSetUpdatedEvent()
    {
        return $this->container['menu_item_option_set_updated_event'];
    }

    /**
     * Sets menu_item_option_set_updated_event
     *
     * @param \Flipdish\Client\Model\MenuItemOptionSetUpdatedEvent[] $menu_item_option_set_updated_event Menu item option set  updated events
     *
     * @return $this
     */
    public function setMenuItemOptionSetUpdatedEvent($menu_item_option_set_updated_event)
    {
        $this->container['menu_item_option_set_updated_event'] = $menu_item_option_set_updated_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_deleted_event
     *
     * @return \Flipdish\Client\Model\MenuItemOptionSetDeletedEvent[]
     */
    public function getMenuItemOptionSetDeletedEvent()
    {
        return $this->container['menu_item_option_set_deleted_event'];
    }

    /**
     * Sets menu_item_option_set_deleted_event
     *
     * @param \Flipdish\Client\Model\MenuItemOptionSetDeletedEvent[] $menu_item_option_set_deleted_event Menu item option set deleted events
     *
     * @return $this
     */
    public function setMenuItemOptionSetDeletedEvent($menu_item_option_set_deleted_event)
    {
        $this->container['menu_item_option_set_deleted_event'] = $menu_item_option_set_deleted_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_item_created_event
     *
     * @return \Flipdish\Client\Model\MenuItemOptionSetItemCreatedEvent[]
     */
    public function getMenuItemOptionSetItemCreatedEvent()
    {
        return $this->container['menu_item_option_set_item_created_event'];
    }

    /**
     * Sets menu_item_option_set_item_created_event
     *
     * @param \Flipdish\Client\Model\MenuItemOptionSetItemCreatedEvent[] $menu_item_option_set_item_created_event Menu item option set item created events
     *
     * @return $this
     */
    public function setMenuItemOptionSetItemCreatedEvent($menu_item_option_set_item_created_event)
    {
        $this->container['menu_item_option_set_item_created_event'] = $menu_item_option_set_item_created_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_item_updated_event
     *
     * @return \Flipdish\Client\Model\MenuItemOptionSetItemUpdatedEvent[]
     */
    public function getMenuItemOptionSetItemUpdatedEvent()
    {
        return $this->container['menu_item_option_set_item_updated_event'];
    }

    /**
     * Sets menu_item_option_set_item_updated_event
     *
     * @param \Flipdish\Client\Model\MenuItemOptionSetItemUpdatedEvent[] $menu_item_option_set_item_updated_event Menu item option set item updated events
     *
     * @return $this
     */
    public function setMenuItemOptionSetItemUpdatedEvent($menu_item_option_set_item_updated_event)
    {
        $this->container['menu_item_option_set_item_updated_event'] = $menu_item_option_set_item_updated_event;

        return $this;
    }

    /**
     * Gets menu_item_option_set_item_deleted_event
     *
     * @return \Flipdish\Client\Model\MenuItemOptionSetItemDeletedEvent[]
     */
    public function getMenuItemOptionSetItemDeletedEvent()
    {
        return $this->container['menu_item_option_set_item_deleted_event'];
    }

    /**
     * Sets menu_item_option_set_item_deleted_event
     *
     * @param \Flipdish\Client\Model\MenuItemOptionSetItemDeletedEvent[] $menu_item_option_set_item_deleted_event Menu item option set item deleted events
     *
     * @return $this
     */
    public function setMenuItemOptionSetItemDeletedEvent($menu_item_option_set_item_deleted_event)
    {
        $this->container['menu_item_option_set_item_deleted_event'] = $menu_item_option_set_item_deleted_event;

        return $this;
    }

    /**
     * Gets store_group_created_event
     *
     * @return \Flipdish\Client\Model\StoreGroupCreatedEvent[]
     */
    public function getStoreGroupCreatedEvent()
    {
        return $this->container['store_group_created_event'];
    }

    /**
     * Sets store_group_created_event
     *
     * @param \Flipdish\Client\Model\StoreGroupCreatedEvent[] $store_group_created_event Store group created events
     *
     * @return $this
     */
    public function setStoreGroupCreatedEvent($store_group_created_event)
    {
        $this->container['store_group_created_event'] = $store_group_created_event;

        return $this;
    }

    /**
     * Gets store_group_updated_event
     *
     * @return \Flipdish\Client\Model\StoreGroupUpdatedEvent[]
     */
    public function getStoreGroupUpdatedEvent()
    {
        return $this->container['store_group_updated_event'];
    }

    /**
     * Sets store_group_updated_event
     *
     * @param \Flipdish\Client\Model\StoreGroupUpdatedEvent[] $store_group_updated_event Store group updated events
     *
     * @return $this
     */
    public function setStoreGroupUpdatedEvent($store_group_updated_event)
    {
        $this->container['store_group_updated_event'] = $store_group_updated_event;

        return $this;
    }

    /**
     * Gets store_group_deleted_event
     *
     * @return \Flipdish\Client\Model\StoreGroupDeletedEvent[]
     */
    public function getStoreGroupDeletedEvent()
    {
        return $this->container['store_group_deleted_event'];
    }

    /**
     * Sets store_group_deleted_event
     *
     * @param \Flipdish\Client\Model\StoreGroupDeletedEvent[] $store_group_deleted_event Store group deleted events
     *
     * @return $this
     */
    public function setStoreGroupDeletedEvent($store_group_deleted_event)
    {
        $this->container['store_group_deleted_event'] = $store_group_deleted_event;

        return $this;
    }

    /**
     * Gets customer_created_event
     *
     * @return \Flipdish\Client\Model\CustomerCreatedEvent[]
     */
    public function getCustomerCreatedEvent()
    {
        return $this->container['customer_created_event'];
    }

    /**
     * Sets customer_created_event
     *
     * @param \Flipdish\Client\Model\CustomerCreatedEvent[] $customer_created_event Customer created events
     *
     * @return $this
     */
    public function setCustomerCreatedEvent($customer_created_event)
    {
        $this->container['customer_created_event'] = $customer_created_event;

        return $this;
    }

    /**
     * Gets customer_updated_event
     *
     * @return \Flipdish\Client\Model\CustomerUpdatedEvent[]
     */
    public function getCustomerUpdatedEvent()
    {
        return $this->container['customer_updated_event'];
    }

    /**
     * Sets customer_updated_event
     *
     * @param \Flipdish\Client\Model\CustomerUpdatedEvent[] $customer_updated_event Customer updated events
     *
     * @return $this
     */
    public function setCustomerUpdatedEvent($customer_updated_event)
    {
        $this->container['customer_updated_event'] = $customer_updated_event;

        return $this;
    }

    /**
     * Gets customer_consent_updated_event
     *
     * @return \Flipdish\Client\Model\CustomerConsentUpdatedEvent[]
     */
    public function getCustomerConsentUpdatedEvent()
    {
        return $this->container['customer_consent_updated_event'];
    }

    /**
     * Sets customer_consent_updated_event
     *
     * @param \Flipdish\Client\Model\CustomerConsentUpdatedEvent[] $customer_consent_updated_event Customer consent updated events
     *
     * @return $this
     */
    public function setCustomerConsentUpdatedEvent($customer_consent_updated_event)
    {
        $this->container['customer_consent_updated_event'] = $customer_consent_updated_event;

        return $this;
    }

    /**
     * Gets webhook_subscription_created_event
     *
     * @return \Flipdish\Client\Model\WebhookSubscriptionCreatedEvent[]
     */
    public function getWebhookSubscriptionCreatedEvent()
    {
        return $this->container['webhook_subscription_created_event'];
    }

    /**
     * Sets webhook_subscription_created_event
     *
     * @param \Flipdish\Client\Model\WebhookSubscriptionCreatedEvent[] $webhook_subscription_created_event Webhook subscription created events
     *
     * @return $this
     */
    public function setWebhookSubscriptionCreatedEvent($webhook_subscription_created_event)
    {
        $this->container['webhook_subscription_created_event'] = $webhook_subscription_created_event;

        return $this;
    }

    /**
     * Gets webhook_subscription_updated_event
     *
     * @return \Flipdish\Client\Model\WebhookSubscriptionUpdatedEvent[]
     */
    public function getWebhookSubscriptionUpdatedEvent()
    {
        return $this->container['webhook_subscription_updated_event'];
    }

    /**
     * Sets webhook_subscription_updated_event
     *
     * @param \Flipdish\Client\Model\WebhookSubscriptionUpdatedEvent[] $webhook_subscription_updated_event Webhook subscription updated events
     *
     * @return $this
     */
    public function setWebhookSubscriptionUpdatedEvent($webhook_subscription_updated_event)
    {
        $this->container['webhook_subscription_updated_event'] = $webhook_subscription_updated_event;

        return $this;
    }

    /**
     * Gets webhook_subscription_deleted_event
     *
     * @return \Flipdish\Client\Model\WebhookSubscriptionDeletedEvent[]
     */
    public function getWebhookSubscriptionDeletedEvent()
    {
        return $this->container['webhook_subscription_deleted_event'];
    }

    /**
     * Sets webhook_subscription_deleted_event
     *
     * @param \Flipdish\Client\Model\WebhookSubscriptionDeletedEvent[] $webhook_subscription_deleted_event Webhook subscription deleted events
     *
     * @return $this
     */
    public function setWebhookSubscriptionDeletedEvent($webhook_subscription_deleted_event)
    {
        $this->container['webhook_subscription_deleted_event'] = $webhook_subscription_deleted_event;

        return $this;
    }

    /**
     * Gets printer_turned_on_event
     *
     * @return \Flipdish\Client\Model\PrinterTurnedOnEvent[]
     */
    public function getPrinterTurnedOnEvent()
    {
        return $this->container['printer_turned_on_event'];
    }

    /**
     * Sets printer_turned_on_event
     *
     * @param \Flipdish\Client\Model\PrinterTurnedOnEvent[] $printer_turned_on_event Printer turned ON event
     *
     * @return $this
     */
    public function setPrinterTurnedOnEvent($printer_turned_on_event)
    {
        $this->container['printer_turned_on_event'] = $printer_turned_on_event;

        return $this;
    }

    /**
     * Gets printer_turned_off_event
     *
     * @return \Flipdish\Client\Model\PrinterTurnedOffEvent[]
     */
    public function getPrinterTurnedOffEvent()
    {
        return $this->container['printer_turned_off_event'];
    }

    /**
     * Sets printer_turned_off_event
     *
     * @param \Flipdish\Client\Model\PrinterTurnedOffEvent[] $printer_turned_off_event Printer turned OFF event
     *
     * @return $this
     */
    public function setPrinterTurnedOffEvent($printer_turned_off_event)
    {
        $this->container['printer_turned_off_event'] = $printer_turned_off_event;

        return $this;
    }

    /**
     * Gets printer_assigned_to_store_event
     *
     * @return \Flipdish\Client\Model\PrinterAssignedToStoreEvent[]
     */
    public function getPrinterAssignedToStoreEvent()
    {
        return $this->container['printer_assigned_to_store_event'];
    }

    /**
     * Sets printer_assigned_to_store_event
     *
     * @param \Flipdish\Client\Model\PrinterAssignedToStoreEvent[] $printer_assigned_to_store_event Printer assigned to store event
     *
     * @return $this
     */
    public function setPrinterAssignedToStoreEvent($printer_assigned_to_store_event)
    {
        $this->container['printer_assigned_to_store_event'] = $printer_assigned_to_store_event;

        return $this;
    }

    /**
     * Gets printer_unassigned_from_store_event
     *
     * @return \Flipdish\Client\Model\PrinterUnassignedFromStoreEvent[]
     */
    public function getPrinterUnassignedFromStoreEvent()
    {
        return $this->container['printer_unassigned_from_store_event'];
    }

    /**
     * Sets printer_unassigned_from_store_event
     *
     * @param \Flipdish\Client\Model\PrinterUnassignedFromStoreEvent[] $printer_unassigned_from_store_event Printer unassigned from store event
     *
     * @return $this
     */
    public function setPrinterUnassignedFromStoreEvent($printer_unassigned_from_store_event)
    {
        $this->container['printer_unassigned_from_store_event'] = $printer_unassigned_from_store_event;

        return $this;
    }

    /**
     * Gets phone_call_started_event
     *
     * @return \Flipdish\Client\Model\PhoneCallStartedEvent[]
     */
    public function getPhoneCallStartedEvent()
    {
        return $this->container['phone_call_started_event'];
    }

    /**
     * Sets phone_call_started_event
     *
     * @param \Flipdish\Client\Model\PhoneCallStartedEvent[] $phone_call_started_event Phone call started event
     *
     * @return $this
     */
    public function setPhoneCallStartedEvent($phone_call_started_event)
    {
        $this->container['phone_call_started_event'] = $phone_call_started_event;

        return $this;
    }

    /**
     * Gets phone_call_ended_event
     *
     * @return \Flipdish\Client\Model\PhoneCallEndedEvent[]
     */
    public function getPhoneCallEndedEvent()
    {
        return $this->container['phone_call_ended_event'];
    }

    /**
     * Sets phone_call_ended_event
     *
     * @param \Flipdish\Client\Model\PhoneCallEndedEvent[] $phone_call_ended_event Phone call ended event
     *
     * @return $this
     */
    public function setPhoneCallEndedEvent($phone_call_ended_event)
    {
        $this->container['phone_call_ended_event'] = $phone_call_ended_event;

        return $this;
    }

    /**
     * Gets loyalty_campaign_created_event
     *
     * @return \Flipdish\Client\Model\LoyaltyCampaignCreatedEvent[]
     */
    public function getLoyaltyCampaignCreatedEvent()
    {
        return $this->container['loyalty_campaign_created_event'];
    }

    /**
     * Sets loyalty_campaign_created_event
     *
     * @param \Flipdish\Client\Model\LoyaltyCampaignCreatedEvent[] $loyalty_campaign_created_event Loyalty campaign created event
     *
     * @return $this
     */
    public function setLoyaltyCampaignCreatedEvent($loyalty_campaign_created_event)
    {
        $this->container['loyalty_campaign_created_event'] = $loyalty_campaign_created_event;

        return $this;
    }

    /**
     * Gets loyalty_campaign_deleted_event
     *
     * @return \Flipdish\Client\Model\LoyaltyCampaignDeletedEvent[]
     */
    public function getLoyaltyCampaignDeletedEvent()
    {
        return $this->container['loyalty_campaign_deleted_event'];
    }

    /**
     * Sets loyalty_campaign_deleted_event
     *
     * @param \Flipdish\Client\Model\LoyaltyCampaignDeletedEvent[] $loyalty_campaign_deleted_event Loyalty campaign deleted event
     *
     * @return $this
     */
    public function setLoyaltyCampaignDeletedEvent($loyalty_campaign_deleted_event)
    {
        $this->container['loyalty_campaign_deleted_event'] = $loyalty_campaign_deleted_event;

        return $this;
    }

    /**
     * Gets loyalty_campaign_updated_event
     *
     * @return \Flipdish\Client\Model\LoyaltyCampaignUpdatedEvent[]
     */
    public function getLoyaltyCampaignUpdatedEvent()
    {
        return $this->container['loyalty_campaign_updated_event'];
    }

    /**
     * Sets loyalty_campaign_updated_event
     *
     * @param \Flipdish\Client\Model\LoyaltyCampaignUpdatedEvent[] $loyalty_campaign_updated_event Loyalty campaign updated event
     *
     * @return $this
     */
    public function setLoyaltyCampaignUpdatedEvent($loyalty_campaign_updated_event)
    {
        $this->container['loyalty_campaign_updated_event'] = $loyalty_campaign_updated_event;

        return $this;
    }

    /**
     * Gets retention_campaign_created_event
     *
     * @return \Flipdish\Client\Model\RetentionCampaignCreatedEvent[]
     */
    public function getRetentionCampaignCreatedEvent()
    {
        return $this->container['retention_campaign_created_event'];
    }

    /**
     * Sets retention_campaign_created_event
     *
     * @param \Flipdish\Client\Model\RetentionCampaignCreatedEvent[] $retention_campaign_created_event Retention campaign created event
     *
     * @return $this
     */
    public function setRetentionCampaignCreatedEvent($retention_campaign_created_event)
    {
        $this->container['retention_campaign_created_event'] = $retention_campaign_created_event;

        return $this;
    }

    /**
     * Gets retention_campaign_deleted_event
     *
     * @return \Flipdish\Client\Model\RetentionCampaignDeletedEvent[]
     */
    public function getRetentionCampaignDeletedEvent()
    {
        return $this->container['retention_campaign_deleted_event'];
    }

    /**
     * Sets retention_campaign_deleted_event
     *
     * @param \Flipdish\Client\Model\RetentionCampaignDeletedEvent[] $retention_campaign_deleted_event Retention campaign deleted event
     *
     * @return $this
     */
    public function setRetentionCampaignDeletedEvent($retention_campaign_deleted_event)
    {
        $this->container['retention_campaign_deleted_event'] = $retention_campaign_deleted_event;

        return $this;
    }

    /**
     * Gets retention_campaign_updated_event
     *
     * @return \Flipdish\Client\Model\RetentionCampaignUpdatedEvent[]
     */
    public function getRetentionCampaignUpdatedEvent()
    {
        return $this->container['retention_campaign_updated_event'];
    }

    /**
     * Sets retention_campaign_updated_event
     *
     * @param \Flipdish\Client\Model\RetentionCampaignUpdatedEvent[] $retention_campaign_updated_event Retention campaign updated event
     *
     * @return $this
     */
    public function setRetentionCampaignUpdatedEvent($retention_campaign_updated_event)
    {
        $this->container['retention_campaign_updated_event'] = $retention_campaign_updated_event;

        return $this;
    }

    /**
     * Gets sms_received_event
     *
     * @return \Flipdish\Client\Model\SmsReceivedEvent[]
     */
    public function getSmsReceivedEvent()
    {
        return $this->container['sms_received_event'];
    }

    /**
     * Sets sms_received_event
     *
     * @param \Flipdish\Client\Model\SmsReceivedEvent[] $sms_received_event Sms received event
     *
     * @return $this
     */
    public function setSmsReceivedEvent($sms_received_event)
    {
        $this->container['sms_received_event'] = $sms_received_event;

        return $this;
    }

    /**
     * Gets user_login_event
     *
     * @return \Flipdish\Client\Model\UserLoginEvent[]
     */
    public function getUserLoginEvent()
    {
        return $this->container['user_login_event'];
    }

    /**
     * Sets user_login_event
     *
     * @param \Flipdish\Client\Model\UserLoginEvent[] $user_login_event User login event
     *
     * @return $this
     */
    public function setUserLoginEvent($user_login_event)
    {
        $this->container['user_login_event'] = $user_login_event;

        return $this;
    }

    /**
     * Gets user_created_event
     *
     * @return \Flipdish\Client\Model\UserCreatedEvent[]
     */
    public function getUserCreatedEvent()
    {
        return $this->container['user_created_event'];
    }

    /**
     * Sets user_created_event
     *
     * @param \Flipdish\Client\Model\UserCreatedEvent[] $user_created_event User created event
     *
     * @return $this
     */
    public function setUserCreatedEvent($user_created_event)
    {
        $this->container['user_created_event'] = $user_created_event;

        return $this;
    }

    /**
     * Gets user_updated_event
     *
     * @return \Flipdish\Client\Model\UserUpdatedEvent[]
     */
    public function getUserUpdatedEvent()
    {
        return $this->container['user_updated_event'];
    }

    /**
     * Sets user_updated_event
     *
     * @param \Flipdish\Client\Model\UserUpdatedEvent[] $user_updated_event User updated event
     *
     * @return $this
     */
    public function setUserUpdatedEvent($user_updated_event)
    {
        $this->container['user_updated_event'] = $user_updated_event;

        return $this;
    }

    /**
     * Gets user_deleted_event
     *
     * @return \Flipdish\Client\Model\UserDeletedEvent[]
     */
    public function getUserDeletedEvent()
    {
        return $this->container['user_deleted_event'];
    }

    /**
     * Sets user_deleted_event
     *
     * @param \Flipdish\Client\Model\UserDeletedEvent[] $user_deleted_event User deleted event
     *
     * @return $this
     */
    public function setUserDeletedEvent($user_deleted_event)
    {
        $this->container['user_deleted_event'] = $user_deleted_event;

        return $this;
    }

    /**
     * Gets voucher_created_event
     *
     * @return \Flipdish\Client\Model\VoucherCreatedEvent[]
     */
    public function getVoucherCreatedEvent()
    {
        return $this->container['voucher_created_event'];
    }

    /**
     * Sets voucher_created_event
     *
     * @param \Flipdish\Client\Model\VoucherCreatedEvent[] $voucher_created_event Voucher created event
     *
     * @return $this
     */
    public function setVoucherCreatedEvent($voucher_created_event)
    {
        $this->container['voucher_created_event'] = $voucher_created_event;

        return $this;
    }

    /**
     * Gets voucher_updated_event
     *
     * @return \Flipdish\Client\Model\VoucherUpdatedEvent[]
     */
    public function getVoucherUpdatedEvent()
    {
        return $this->container['voucher_updated_event'];
    }

    /**
     * Sets voucher_updated_event
     *
     * @param \Flipdish\Client\Model\VoucherUpdatedEvent[] $voucher_updated_event Voucher updated event
     *
     * @return $this
     */
    public function setVoucherUpdatedEvent($voucher_updated_event)
    {
        $this->container['voucher_updated_event'] = $voucher_updated_event;

        return $this;
    }

    /**
     * Gets voucher_deleted_event
     *
     * @return \Flipdish\Client\Model\VoucherDeletedEvent[]
     */
    public function getVoucherDeletedEvent()
    {
        return $this->container['voucher_deleted_event'];
    }

    /**
     * Sets voucher_deleted_event
     *
     * @param \Flipdish\Client\Model\VoucherDeletedEvent[] $voucher_deleted_event Voucher deleted event
     *
     * @return $this
     */
    public function setVoucherDeletedEvent($voucher_deleted_event)
    {
        $this->container['voucher_deleted_event'] = $voucher_deleted_event;

        return $this;
    }

    /**
     * Gets teammate_invite_sent_event
     *
     * @return \Flipdish\Client\Model\TeammateInviteSentEvent[]
     */
    public function getTeammateInviteSentEvent()
    {
        return $this->container['teammate_invite_sent_event'];
    }

    /**
     * Sets teammate_invite_sent_event
     *
     * @param \Flipdish\Client\Model\TeammateInviteSentEvent[] $teammate_invite_sent_event Teammate invite sent event
     *
     * @return $this
     */
    public function setTeammateInviteSentEvent($teammate_invite_sent_event)
    {
        $this->container['teammate_invite_sent_event'] = $teammate_invite_sent_event;

        return $this;
    }

    /**
     * Gets teammate_invite_accepted_event
     *
     * @return \Flipdish\Client\Model\TeammateInviteAcceptedEvent[]
     */
    public function getTeammateInviteAcceptedEvent()
    {
        return $this->container['teammate_invite_accepted_event'];
    }

    /**
     * Sets teammate_invite_accepted_event
     *
     * @param \Flipdish\Client\Model\TeammateInviteAcceptedEvent[] $teammate_invite_accepted_event Teammate invite accepted event
     *
     * @return $this
     */
    public function setTeammateInviteAcceptedEvent($teammate_invite_accepted_event)
    {
        $this->container['teammate_invite_accepted_event'] = $teammate_invite_accepted_event;

        return $this;
    }

    /**
     * Gets teammate_updated_event
     *
     * @return \Flipdish\Client\Model\TeammateUpdatedEvent[]
     */
    public function getTeammateUpdatedEvent()
    {
        return $this->container['teammate_updated_event'];
    }

    /**
     * Sets teammate_updated_event
     *
     * @param \Flipdish\Client\Model\TeammateUpdatedEvent[] $teammate_updated_event Teammate updated event
     *
     * @return $this
     */
    public function setTeammateUpdatedEvent($teammate_updated_event)
    {
        $this->container['teammate_updated_event'] = $teammate_updated_event;

        return $this;
    }

    /**
     * Gets teammate_deleted_event
     *
     * @return \Flipdish\Client\Model\TeammateDeletedEvent[]
     */
    public function getTeammateDeletedEvent()
    {
        return $this->container['teammate_deleted_event'];
    }

    /**
     * Sets teammate_deleted_event
     *
     * @param \Flipdish\Client\Model\TeammateDeletedEvent[] $teammate_deleted_event Teammate deleted event
     *
     * @return $this
     */
    public function setTeammateDeletedEvent($teammate_deleted_event)
    {
        $this->container['teammate_deleted_event'] = $teammate_deleted_event;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


